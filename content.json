{"meta":{"title":"Kiwi's Wiki","subtitle":null,"description":"","author":"Kiwi","url":"http://Kiwi0093.github.io/Wiki-site","root":"/Wiki-site/"},"pages":[{"title":"Categories","date":"2021-06-30T08:59:28.528Z","updated":"2021-06-30T08:59:28.528Z","comments":true,"path":"categories/index.html","permalink":"http://kiwi0093.github.io/Wiki-site/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2021-06-30T08:59:28.528Z","updated":"2021-06-30T08:59:28.528Z","comments":true,"path":"tags/index.html","permalink":"http://kiwi0093.github.io/Wiki-site/tags/index.html","excerpt":"","text":""},{"title":"About","date":"2021-06-30T08:59:28.528Z","updated":"2021-06-30T08:59:28.528Z","comments":true,"path":"about/index.html","permalink":"http://kiwi0093.github.io/Wiki-site/about/index.html","excerpt":"","text":""}],"posts":[{"title":"Portainer-ce agent","slug":"VM&Container/7-portainer-ce-agent","date":"2021-07-14T03:39:55.459Z","updated":"2021-07-14T03:44:58.105Z","comments":true,"path":"wiki/VM&Container/7-portainer-ce-agent/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/VM&Container/7-portainer-ce-agent/","excerpt":"前言手上還有可以使用的VPS,我就想說乾脆都掛上Docker+portainer-ce agent這樣就可以全部一起遠端控制","text":"前言手上還有可以使用的VPS,我就想說乾脆都掛上Docker+portainer-ce agent這樣就可以全部一起遠端控制 基本做法Portainer-agent12345678910111213#portainer-agent.yml---------------------------------------------------------------------------------------------------------------------------------version: &#x27;3&#x27;services: portainer: image: portainer/agent:latest container_name: portainer_agent ports: - 9001:9001 volumes: - /var/run/docker.sock:/var/run/docker.sock - /var/lib/docker/volumes:/var/lib/docker/volumes restart: always 然後就是docker-compose up -d就可以了","categories":[{"name":"VM&Container","slug":"VM-Container","permalink":"http://kiwi0093.github.io/Wiki-site/categories/VM-Container/"}],"tags":[{"name":"VM","slug":"VM","permalink":"http://kiwi0093.github.io/Wiki-site/tags/VM/"},{"name":"Container","slug":"Container","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Container/"}]},{"title":"Nginx Proxy Manager","slug":"VM&Container/6-nginx-proxy-manager","date":"2021-07-14T01:27:59.684Z","updated":"2021-07-14T03:39:30.452Z","comments":true,"path":"wiki/VM&Container/6-nginx-proxy-manager/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/VM&Container/6-nginx-proxy-manager/","excerpt":"前言這個東西是等於是一個Web GUI界面的Nginx plug in,雖然他要用到SQL DB,但是說穿了就是把nginx的設定改成圖形化並且強化反向代理的設定以及加上certbot的功能不用自己再手動處理SSL KEY（不過我還是希望他可以直接load進已經有的key)","text":"前言這個東西是等於是一個Web GUI界面的Nginx plug in,雖然他要用到SQL DB,但是說穿了就是把nginx的設定改成圖形化並且強化反向代理的設定以及加上certbot的功能不用自己再手動處理SSL KEY（不過我還是希望他可以直接load進已經有的key) 基本做法MariaDB基本上可以沿用Librenms那篇裡面已經建好的mariadb,建個帳號跟database就好,我實際上的作法是直接用phpAdmin建一個就解決了 Nginx Proxy Manager1234567891011121314151617181920#docker-compose.yml--------------------------------------------------------------------------------------------------------------------------------version: &#x27;3&#x27;services: app: image: &#x27;jc21/nginx-proxy-manager:latest&#x27; restart: unless-stopped ports: - &#x27;80:80&#x27; #這個是正常的http - &#x27;81:81&#x27; #這個是管理界面 - &#x27;443:443&#x27; #這個是正常的https environment: DB_MYSQL_HOST: &quot;$&#123;your_db_ip&#125;&quot; DB_MYSQL_PORT: 3306 DB_MYSQL_USER: &quot;npm&quot; DB_MYSQL_PASSWORD: &quot;$&#123;your_passwd&#125;&quot; DB_MYSQL_NAME: &quot;npm&quot; volumes: - /var/lib/docker/volumes/nginx-proxy-manager/data:/data - /etc/letsencrypt:/etc/letsencrypt 使用方法 設定帳號 架設好了之後先用預設的帳號密碼進入一進去他就會強迫你修改admin的帳號密碼 123#預設的帳號密碼Email: admin@example.comPassword: changeme 注意事項 他不能直接用已經申請好的key,得利用他的界面重新申請cert. 所有的DN主目錄不能是空的服務,所以我才會弄個heimdall來當首頁 所有特殊設定請在custom location -&gt; location旁的齒輪內貼上,不然不會動 Calibre-web問題貼上下列敘述後就可以動了 12345proxy_bind $server_addr;proxy_set_header Host $http_host;proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;proxy_set_header X-Scheme $scheme;proxy_set_header X-Script-Name /$&#123;your_location&#125;; Portainer-ce問題目前還沒找到讓portainer-ce在location下正常運作的方法,其實可以很奢侈的每一種服務都掛一個DN的方法來做virtual host的作法應該就可以了","categories":[{"name":"VM&Container","slug":"VM-Container","permalink":"http://kiwi0093.github.io/Wiki-site/categories/VM-Container/"}],"tags":[{"name":"VM","slug":"VM","permalink":"http://kiwi0093.github.io/Wiki-site/tags/VM/"},{"name":"Container","slug":"Container","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Container/"}]},{"title":"Heimdall","slug":"VM&Container/5-heimdall","date":"2021-07-14T01:27:46.283Z","updated":"2021-07-14T01:44:21.332Z","comments":true,"path":"wiki/VM&Container/5-heimdall/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/VM&Container/5-heimdall/","excerpt":"前言其實我也不是特別需要這種Dashboard服務,但是我總覺的缺個類似封面的網頁所以就拿來用一下","text":"前言其實我也不是特別需要這種Dashboard服務,但是我總覺的缺個類似封面的網頁所以就拿來用一下 基本做法直接來個docker-compose.yml好了 123456789101112131415version: &quot;2.1&quot;services: heimdall: image: ghcr.io/linuxserver/heimdall container_name: heimdall environment: - PUID=1000 - PGID=1000 - TZ=Asia/Taipei volumes: - /var/lib/docker/volumes/heimdall/config:/config ports: - 8081:80 - 4343:443 restart: unless-stopped 結論裝得很簡單也很快,基本上沒什麼特殊的,我是拿來當入口網站用的,另外其實port 443可以不用理他,因為我後面都用nginx來做ssl代理所以有沒有ssl都可以","categories":[{"name":"VM&Container","slug":"VM-Container","permalink":"http://kiwi0093.github.io/Wiki-site/categories/VM-Container/"}],"tags":[{"name":"VM","slug":"VM","permalink":"http://kiwi0093.github.io/Wiki-site/tags/VM/"},{"name":"Container","slug":"Container","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Container/"}]},{"title":"Photon OS 4.0 GA","slug":"VM&Container/1-PhotonOS","date":"2021-07-12T03:11:22.840Z","updated":"2021-07-12T03:11:22.840Z","comments":true,"path":"wiki/VM&Container/1-PhotonOS/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/VM&Container/1-PhotonOS/","excerpt":"前言由於打算把所有的網路服務都逐步改成docker的方式,所以打算把底層的系統也換成Vmware針對docker等容器特化版的Linux - PhotoOS","text":"前言由於打算把所有的網路服務都逐步改成docker的方式,所以打算把底層的系統也換成Vmware針對docker等容器特化版的Linux - PhotoOS Installation 下載Image ISO 然後在VMware workstation或VMware Esxi上建立新的VM(選擇VMware PhotonOS 64 bits或是Linux Kernel最新的64bits都可以) 用光碟開機後依照步驟做就好了 基本上這個系統需要的RAM跟空間很小,但是你會需要RAM跟空間來跑Docker.所以在建立的時候請考慮你要使用的服務數量來設定你的RAM跟空間 Basic Setup確認基本服務12#看一下基本的系統服務是否有開啟,例如open-vm-toolssystemctl status vmtoolsd.service 帳號設定安裝的時候就會設定root密碼了,可以利用useradd再增加一般使用者(為了安全性) 1234#增加使用者useradd -m -g root $(your_id)#替你的帳號設定密碼passwd $(your_id) 因為使用上還是很常會需要root權限,所以可以依照個人喜好決定是否要建立額外帳號然後登入後用su或是sudo或是直接修改/etc/ssh/sshd_config改成允許root ssh登入都可以 網路設定Systemd-Networkd基本規則參考網頁systemd-networkd@ArchWiKi 安裝後的系統預設是dhcp開啟的狀態,若是只要單ip並且有另外的dhcpd加上Mac Address控制的話是可以不用動,有其他需求的需要去修改以下檔案 關閉DHCP12345678#/etc/systemd/network/99-dhcp-en.network--------------------------------------------------------------------------------------------------------------------------------[match]Name=e*[Network]DHCP=yes #這個改成no來關閉dhcpIPv6AcceptRA=no 固定IP設定方法1234567891011121314#/etc/systemd/network/10-static-en.network--------------------------------------------------------------------------------------------------------------------------------[Match]Name=ens160 #網卡名稱[Network]Address=10.1.10.9/24 #IP位置,可重複多次定義多個IPGateway=10.1.10.1 #Gateway IPDNS=10.1.10.1 #DNS IP# NTP設定,用空白隔開不同ServerNTP=tock.stdtime.gov.tw watch.stdtime.gov.tw time.stdtime.gov.tw clock.stdtime.gov.tw tick.stdtime.gov.tw# 關閉IPV6LinkLocalAddressing=noIPv6AcceptRA=no 設定網路介面名稱12345678#/etc/systemd/network/10-ethusb0.link--------------------------------------------------------------------------------------------------------------------------------[Match]MACAddress=00:00:00:00:00:00 #卡號[Link]Description=USB to Ethernet Adapter #這張網路卡的說明Name=ethusb0 #介面名字 想建立多張網卡的話就建立三個檔案分開定義卡號就好了 升級系統packages1yum update 安裝程式package1yum install -y vim #安裝vim 尋找package1yum search python #尋找所有名字裡有python的package 掛載SMB分享的檔案基本上會把docker的volume檔案夾先mount上NAS上的備份用資料夾,這樣可以 簡單備份 減少PhotonOS的HDD空間需求 針對某些需要NAS上檔案的docker服務可以直接access 參考資料 Cifs-utils基本上我的音樂檔案都是放在NAS上面,雖然可以透過NFS掛在機器上,但是同理也可以用SMB/Cifs掛載 在PhotonOS上可以利用yum安裝 1yum install -y cifs-utils 然後修改加入 123#/etc/fstab--------------------------------------------------------------------------------------------------------------------------------\\\\winbox\\getme /mnt/win cifs user,uid=500,rw,noauto,suid,credentials=/root/secret 0 0 以及 1234/root/secert--------------------------------------------------------------------------------------------------------------------------------username=sushi #SMB IDpassword=yummy #SMB ID的Password 記得/root/secert的權限改成0400 Cifs-utils + autofs這個可以自動加卸載 1yum install -y autofs 增加到 123#/etc/auto.master--------------------------------------------------------------------------------------------------------------------------------/mymount /etc/auto.mymount 然後編輯 123#/etc/auto.mymount--------------------------------------------------------------------------------------------------------------------------------winbox -fstype=cifs,rw,noperm,credentials=/root/secret.txt ://winbox/getme 有任何使用到/mymount的動作就會自動掛上 Basic ToolsDocker-compose1234#安裝python-pipyum install python3-pip#安裝docke-composepip3 install docker-compose Docker在開始之前,最好先規畫一下各docker的外部儲存資料要怎麼規劃,看是使用docker volume管理 還是自己建立位置手動管理都可以,因為我後面會用portainer來管理docker,所以使用volume管理的方式應該比較簡單(在GUI看起來的話) Portainer-ce這是一個web-GUI,用來管理docker的,雖然說可以直接用cli管理就好了,但是有Web-GUI也是很方便的所以就裝了 他有單機用也可以管理docker-swarm跟 k8s,我沒那麼多node(那堆VPS for v2ray….)所以簡單的單機就可以了 參考資料Portainer Deployment@Docker Hub 1234#建立Volumedocker volume create portainer_data#部屬portainer-cedocker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce 這裡可以注意 -d 是在背景跑 -p 8000:8000 -p 9000:9000 這個-p定義可以是 -p 主機ip : 主機port : container port --name= 定義你的container要叫什麼名字 --restart= 定義重新啟動的規則,有 no不重新啟動 on-failure[:最多次數]只有沒有fail才重新啟動,後面的最多次數是最多重試次數 always總是重啟 unless-stopped 除非停止不然都會重啟 -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce 這是兩個指令 -v /var/run/docker.sock:/var/run/docker.sock 這個是利用-v把系統的/var/run/docker.sock對應到container裡的/var/run/docker.sock,這樣裡面的service就可以抓到外面的docker正在跑的狀態 -v portainer_data:/data portainer/portainer-ce ​ 這裡是利用建立好的volume直接使用,若要自己定義位置,也可以就是把前面的部分定義成絕對位置的目錄也可以,然後就是寫入權限要滿足不然寫不進去 CertbotInstall參考Certbot的Doc 12sudo docker run -it --rm --name certbot -v &quot;/etc/letsencrypt:/etc/letsencrypt&quot; -v &quot;/var/lib/letsencrypt:/var/lib/letsencrypt&quot; \\ certbot/certbot certonly 想要對於指定IP有不同Domain的話可以再加上-p 你要的ip:80:80 -p 你要的ip:443:443這一個參數這樣就可以對應了 Auto Renew在crontab裡面加上 10 0 * * * docker run --rm -v /etc/letsencrypt:/etc/letsencrypt -ti certbot/certbot renew 就好了","categories":[{"name":"VM&Container","slug":"VM-Container","permalink":"http://kiwi0093.github.io/Wiki-site/categories/VM-Container/"}],"tags":[{"name":"VM","slug":"VM","permalink":"http://kiwi0093.github.io/Wiki-site/tags/VM/"},{"name":"Container","slug":"Container","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Container/"}]},{"title":"Calibre-Web","slug":"VM&Container/2-calibre-web","date":"2021-07-12T03:11:22.840Z","updated":"2021-07-12T03:11:22.840Z","comments":true,"path":"wiki/VM&Container/2-calibre-web/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/VM&Container/2-calibre-web/","excerpt":"前言在蘇州的歲月我極度需要電子書（因為不像在台北以前可以買一堆實體書堆在房間）,久了也開始習慣就拿個平板把書都扔進去看,所以一直以來都想弄個電子書管理系統","text":"前言在蘇州的歲月我極度需要電子書（因為不像在台北以前可以買一堆實體書堆在房間）,久了也開始習慣就拿個平板把書都扔進去看,所以一直以來都想弄個電子書管理系統 前置準備目錄結構建立書本資料庫先使用Calibre在NAS上建立書庫 /books使用cifs-utils把NAS上的 Calibre資料庫掛載在PhotonOS的某個位置 1234#/etc/fstab--------------------------------------------------------------------------------------------------------------------------------#加上\\\\$(NAS_IP)\\$(Your_dir) /$(where_you_mount) cifs user,uid=$(your_None_root_id),rw,noauto,suid,credentials=/root/secret 0 0 目錄擁有者與權限12chmod 755 $(your_Mount_dir)chown $(your_none_root_id) $(your_mount_dir) Volume可以把設定檔掛在NAS上面,同上面的方式 1234#/etc/fstab--------------------------------------------------------------------------------------------------------------------------------#加上\\\\$(NAS_IP)\\$(Your_dir) /var/lib/docker/volumes cifs user,uid=$(your_None_root_id),rw,noauto,suid,credentials=/root/secret 0 0 然後就不用管了 Docker-Compose file123456789101112131415161718192021#calibre-web.yml--------------------------------------------------------------------------------------------------------------------------------version: &#x27;3&#x27;services: calibre-web: image: technosoft2000/calibre-web container_name: calibre-web environment: - PUID=1000 - USE_CONFIG_DIR=true ports: - $&#123;Your_Calibre-Web-IP&#125;:$&#123;PORT&#125;:8083 volumes: - /home/docker/books:/books - /var/lib/docker/volumes/calibre-app:/calibre-web/app/ - /var/lib/docker/volumes/calibre-kindle-gen:/calibre-web/kindlegen - /var/lib/docker/volumes/calibre-config:/calibre-web/config restart: unless-stopped Nginx相關設定12345678location /book &#123; proxy_bind $server_addr; proxy_pass http://$&#123;Your_Calibre-Web-IP&#125;:$&#123;PORT&#125;; proxy_set_header Host $http_host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Scheme $scheme; proxy_set_header X-Script-Name /book; # IMPORTANT: path has NO trailing slash &#125; 用上述設定放在location這段 注意事項 加掛的Books最好是已經用calibre建立好的書庫,管理的時候也可以透過桌面板的calibre來增加書籍 平時整理書可以用calibre會比Calibre-Web好用 沒辦法一個帳號對應多個kindle信箱,有多device的人需要建立多個帳號","categories":[{"name":"VM&Container","slug":"VM-Container","permalink":"http://kiwi0093.github.io/Wiki-site/categories/VM-Container/"}],"tags":[{"name":"VM","slug":"VM","permalink":"http://kiwi0093.github.io/Wiki-site/tags/VM/"},{"name":"Container","slug":"Container","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Container/"}]},{"title":"Navidrome","slug":"VM&Container/3-navidrome","date":"2021-07-12T03:11:22.840Z","updated":"2021-07-12T03:11:22.840Z","comments":true,"path":"wiki/VM&Container/3-navidrome/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/VM&Container/3-navidrome/","excerpt":"前言音樂,是很重要的,本來是打算用NAS+Foobar2000來管理與播放我的音樂,但是後面發現其實音樂串流server+Web播放界面似乎更實用所以就挑了一個比較漂亮又輕量級的navidrome來使用","text":"前言音樂,是很重要的,本來是打算用NAS+Foobar2000來管理與播放我的音樂,但是後面發現其實音樂串流server+Web播放界面似乎更實用所以就挑了一個比較漂亮又輕量級的navidrome來使用 前置準備目錄結構/music使用cifs-utils把NAS上的音樂資料庫掛載在PhotonOS的某個位置 1234#/etc/fstab--------------------------------------------------------------------------------------------------------------------------------#加上\\\\$(NAS_IP)\\$(Your_dir) /$(where_you_mount) cifs user,uid=$(your_None_root_id),rw,noauto,suid,credentials=/root/secret 0 0 目錄擁有者與權限12chmod 755 $(your_Mount_dir)chown $(your_none_root_id) $(your_mount_dir) Volume可以把設定檔掛在NAS上面,同上面的方式 1234#/etc/fstab--------------------------------------------------------------------------------------------------------------------------------#加上\\\\$(NAS_IP)\\$(Your_dir) /var/lib/docker/volumes cifs user,uid=$(your_None_root_id),rw,noauto,suid,credentials=/root/secret 0 0 然後就不用管了 Docker-Compose file1234567891011121314151617181920#navidrome.yml--------------------------------------------------------------------------------------------------------------------------------version: &quot;3&quot;services: navidrome: image: deluan/navidrome:latest container_name: navidrome ports: - $&#123;Your_navidorme-IP&#125;:$&#123;PORT&#125;:4533 environment: ND_SCANSCHEDULE: &quot;1h&quot; ND_LOGLEVEL: &quot;info&quot; ND_SESSIONTIMEOUT: &quot;24h&quot; ND_BASEURL: &quot;/music&quot; ND_ENABLETRANSCODINGCONFIG: &quot;true&quot; ND_REVERSEPROXYWHITELIST: &quot;0.0.0.0/0&quot; volumes: - /var/lib/docker/volumes/navidrome:/data - /home/docker/music:/music:ro restart: unless-stopped 設定的部分,若是想要安全性高就不要加上ND_ENABLETRANSCODINGCONFIG: &quot;true&quot;這個是可以允許使用者直接定義轉碼內容的 Nginx相關設定12345678910location /music &#123;proxy_pass http://$&#123;Your_navidorme-IP&#125;:$&#123;PORT&#125;;proxy_set_header Host $host;proxy_set_header X-Real-IP $remote_addr;proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;proxy_set_header X-Forwarded-Proto $scheme;proxy_set_header X-Forwarded-Protocol $scheme;proxy_set_header X-Forwarded-Host $http_host;proxy_buffering off;&#125; 相關設定很簡單照抄就好了 注意事項 雖然支援Ultrasonic,但是我自己怎麼試都有問題,一換回subsonic就好了","categories":[{"name":"VM&Container","slug":"VM-Container","permalink":"http://kiwi0093.github.io/Wiki-site/categories/VM-Container/"}],"tags":[{"name":"VM","slug":"VM","permalink":"http://kiwi0093.github.io/Wiki-site/tags/VM/"},{"name":"Container","slug":"Container","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Container/"}]},{"title":"librenms","slug":"VM&Container/4-librenms","date":"2021-07-12T03:11:22.840Z","updated":"2021-07-12T03:11:22.840Z","comments":true,"path":"wiki/VM&Container/4-librenms/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/VM&Container/4-librenms/","excerpt":"前言很久很久以前,我曾經使用過MRTG+SNMP做流量圖表,但是隨著去中國這幾年家裡的Server逐步變成會動就好的超低標準,就沒管了,最近因為大整理所以就想再弄一個類似的,於是挑了Librenms","text":"前言很久很久以前,我曾經使用過MRTG+SNMP做流量圖表,但是隨著去中國這幾年家裡的Server逐步變成會動就好的超低標準,就沒管了,最近因為大整理所以就想再弄一個類似的,於是挑了Librenms 參考資料莫莫 雜記 - Docker LibreNMS安裝記錄(含MariaDB、PhpMyAdmin) 其實他寫的很詳細,照著做就好了,不過我還是把我稍微調整過的做法寫在下面 基本做法MariaDB vi mariadb.yml 12345678910111213141516# mariadb.yml--------------------------------------------------------------------------------------------------------------------------------version: &#x27;3&#x27;services: mariadb: image: mariadb:latest container_name: mariadb environment: - MYSQL_ROOT_PASSWORD=$&#123;your_DB_root_Passwd&#125; - TZ=Asia/Taipei ports: - $&#123;your_DB_host&#125;:$&#123;your_DB_port&#125;:3306 volumes: - /var/lib/docker/volumes/mariadb/data:/var/lib/mysql - /var/lib/docker/volumes/mariadb/mariadbcustom.cnf:/etc/mysql/conf.d/custom.cnf restart: unless-stopped vi /var/lib/docker/volumes/mariadb/mariadbcustom.cnf 12345678910111213# /var/lib/docker/volumes/mariadb/mariadbcustom.cnf --------------------------------------------------------------------------------------------------------------------------------[client]default-character-set = utf8mb4[mysql]&quot; &gt;&gt; /etc/my.cnfdefault-character-set = utf8mb4[mysqld]skip-character-set-client-handshakecollation_server = utf8mb4_unicode_cicharacter_set_server = utf8mb4tmpdir = /var/lib/mysqltmp 這個是用來定義MariaDB的預設,都使用utf-8 unicode sudo docker-compose -f mariadb.yml up -d 這個是用來建立container &amp; run sudo docker exec -it mariadb bash 123456789# @mariadb container--------------------------------------------------------------------------------------------------------------------------------mysql -u root -p # 輸入後鍵入你的sql root密碼進入mariadb#建立librenms用的帳號,資料庫以及授予這個帳號對這個資料庫的全部權限,不喜歡用指令的人也可以用phpAdmin來進行mysql&gt; CREATE DATABASE librenms CHARACTER SET utf8 COLLATE utf8_unicode_ci;mysql&gt; CREATE USER &#x27;librenms&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;user_librenms_password&#x27;;mysql&gt; GRANT ALL PRIVILEGES on librenms.* TO &#x27;librenms&#x27;@&#x27;%&#x27; WITH GRANT OPTION;mysql&gt; FLUSH PRIVILEGES; Librenms vi librenms.yml 1234567891011121314151617181920212223#librenms.yml--------------------------------------------------------------------------------------------------------------------------------version: &#x27;3&#x27;services: librenms: image: librenms/librenms:latest container_name: librenms command: su - librenms -c &quot;/opt/librenms/librenms-service.py -v&quot; environment: - TZ=Asia/Taipei - PUID=1000 - DB_HOST=$&#123;your_DB_host&#125; - DB_PORT=$&#123;your_DB_port&#125; - DB_NAME=librenms - DB_USER=librenms - DB_PASSWORD=user_librenms_passwd - DB_TIMEOUT=10 - LIBRENMS_SNMP_COMMUNITY=$&#123;Community_name_you_want&#125; ports: - $&#123;your_Server_ip&#125;:$&#123;port_you_want&#125;:8000 volumes: - /var/lib/docker/volumes/librenms/data:/data restart: always 這裡有個關鍵的一步就是務必要加上 command: su - librenms -c \"/opt/librenms/librenms-service.py -v\" 這個的意思是以librenms這個帳號執行/opt/librenms/librenms-service.py -v 這樣他的rrd權限才會正確,不然會有問題(我之前就是信了這是optional所以一直弄不好,這個是必要條件…) sudo docker exec -it mariadb bash 12345678 #進入mariadb container--------------------------------------------------------------------------------------------------------------------------------mysql -u librenms -p #以librenms帳號登入mariadbmysql&gt; use librenms; #使用librenms資料庫#修改資料庫資料mysql&gt; ALTER TABLE `notifications` CHANGE `datetime` `datetime` timestamp NOT NULL DEFAULT &#x27;1970-01-02 00:00:00&#x27; ; mysql&gt; ALTER TABLE `users` CHANGE `created_at` `created_at` timestamp NOT NULL DEFAULT &#x27;1970-01-02 00:00:01&#x27; ; 這個是修正database issue(Validata Config裡的問題修正) 同場加映 - phpAdmin這個玩意老實說用不太到,但是針對不喜歡mysql指令的人可以用這個圖形介面來操作mysql database 因為他很單純,所以直接用docker run指令建立就可以了 12345# 若你的$&#123;your_DB_host&#125;=3306sudo docker run --name phpmyadmin -d -e PMA_HOST=$&#123;your_DB_host&#125; -p 8080:80 phpmyadmin/phpmyadmin# 若你的$&#123;your_DB_host&#125;不是預設的3306,建議用docker --link來連結sudo docker run --name phpmyadmin -d --link mariadb:db -p 8080:80 phpmyadmin/phpmyadmin 這裡的8080port是對外的可以改成你想要的 Nginx設定老實說,要改成子目錄的方式,得去修改container內的config.php我覺得這個太麻煩了,所以我就跑去再申請一個DN專門來用 Nginx的設定就是普通的virtual host設定法,只要在`/etc/nginx/site-enables/後面再加上一個cnf檔定義一下就好了 記得要另外申請一下certbot的憑證給這個 DN使用 1234567891011121314151617181920212223242526272829303132333435363738# librenms.cnf--------------------------------------------------------------------------------------------------------------------------------server &#123; listen 80; server_name librenms.exsample.com; return 301 https://$server_name$request_uri;&#125;server &#123; listen 443 ssl http2; server_name librenms.exsample.com; ssl_certificate /etc/letsencrypt/live/librenms.exsample.com/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/librenms.exsample.com/privkey.pem;# include /etc/letsencrypt/options-ssl-nginx.conf;# ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;#charset koi8-r; #access_log /var/log/nginx/host.access.log main;client_max_body_size 20M;location / &#123; proxy_pass http://$&#123;your_Server_ip&#125;:$&#123;port_you_want&#125;; #這裡改成要轉發的ip/port proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header X-Forwarded-Protocol $scheme; proxy_set_header X-Forwarded-Host $http_host; proxy_buffering off; &#125;error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root /usr/share/nginx/html; SNMP for clientsFreeBSD請參考Wiki的 FreeBSD Section VMware ESXi 6.5參考資料黃昏的甘蔗 天黑的時候星星就會出現 ssh登入Esxi後 123456esxcli system snmp get # 確認snmp狀態與設定值esxcli system snmp set -c YOUR_STRING # 設定你的communityesxcli system snmp set -p 161 # 設定你的snmp port,基本上都是使用161 udpesxcli system snmp set -L &quot;City, State, Country&quot; # 設定你的Locationesxcli system snmp set -C noc@example.com # 設定你的聯絡人esxcli system snmp set -e yes # 設定啟用 到其他可以讀snmp的機器上執行snmpwalk -v2c -c $&#123;YOUR_STRING&#125; $&#123;your_server_IP&#125; 確認有沒有資料就好了 結論 Community若不想修改librenms內的 config.php的話建議不要用public以外的字串,這樣找起來比較方便 這些要開啟後至少幾個小時後才會有明顯的圖示,不要太緊張,也沒辦法一設好就馬上有資料","categories":[{"name":"VM&Container","slug":"VM-Container","permalink":"http://kiwi0093.github.io/Wiki-site/categories/VM-Container/"}],"tags":[{"name":"FreeBSD","slug":"FreeBSD","permalink":"http://kiwi0093.github.io/Wiki-site/tags/FreeBSD/"},{"name":"VM","slug":"VM","permalink":"http://kiwi0093.github.io/Wiki-site/tags/VM/"},{"name":"Container","slug":"Container","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Container/"}]},{"title":"Next Theme的安裝與設定","slug":"Network/Hexo/5-Next_theme","date":"2021-07-12T03:11:22.840Z","updated":"2021-07-12T03:11:22.840Z","comments":true,"path":"wiki/Network/Hexo/5-Next_theme/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Network/Hexo/5-Next_theme/","excerpt":"前言Next主題是一個很漂亮的Blog主題/風格,安裝起來也非常簡單用npm直接下指令安裝就好了","text":"前言Next主題是一個很漂亮的Blog主題/風格,安裝起來也非常簡單用npm直接下指令安裝就好了 安裝Next Theme官網上有兩種安裝方式 透過npm直接安裝(需要Hexo5.0以上版本) 12#在Hexo目錄下npm install hexo-theme-next 安裝後直接變更Hexo目錄的_config.yml內的theme部分就可以用了 1theme: next 透過Git指令直接clone整個theme到Hexo的theme目錄 12#在Hexo目錄下git clone https://github.com/next-theme/hexo-theme-next themes/next 安裝後一樣要變更Hexo目錄的_config.yml 1theme: next 設定#Theme Setting將Theme的_config.yml複製為_config.[Theme_name].yml 詳細的說明可以參考官方的文件說明 基本上只需要修改下述幾個主要參數就可以了 #Choosing Scheme123456789101112# ---------------------------------------------------------------# Scheme Settings# ---------------------------------------------------------------# Schemes#scheme: Musescheme: Mist#scheme: Pisces#scheme: Gemini# Dark Modedarkmode: true 有四種scheme可以挑選,官網上有範例可以參考Muse, Mist, Pisces, Gemini可以自行挑選後修改設定啟用 另外現在Next官方支援Darkmode,預設是false,修改成true後可以變成darkmode #Menu12345678910111213141516171819# ---------------------------------------------------------------# Menu Settings# ---------------------------------------------------------------menu: home: / || fa fa-home #about: /about/ || fa fa-user tags: /tags/ || fa fa-tags categories: /categories/ || fa fa-th archives: /archives/ || fa fa-archive #schedule: /schedule/ || fa fa-calendar #sitemap: /sitemap.xml || fa fa-sitemap #commonweal: /404/ || fa fa-heartbeat wiki: https://kiwi0093.github.io/Wiki-site/ || fa fa-sitemap# Enable / Disable menu icons / item badges.menu_settings: icons: true badges: false 編輯這個部分可以簡易做出Blog框架內的選單,在官方文件內還有介紹出可以分層的Menu寫法,如下 12345678910111213menu: home: / || fa fa-home archives: /archives/ || fa fa-archive Docs: default: /docs/ || fa fa-book Getting Started: default: /getting-started/ || fa fa-flag Installation: /installation.html || fa fa-download Configuration: /configuration.html || fa fa-wrench Third Party Services: default: /third-party-services/ || fa fa-puzzle-piece Math Equations: /math-equations.html || fa fa-square-root-alt Comment Systems: /comments.html || fa fa-comment-alt 其他的細部設定就參考官方文件設定即可 在現在的架構下務必要加上 1wiki: https://kiwi0093.github.io/Wiki-site/ || fa fa-sitemap 才會建立Wiki的Link","categories":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/"},{"name":"Hexo","slug":"Network/Hexo","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/Hexo/"}],"tags":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Network/"},{"name":"Server","slug":"Server","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Server/"},{"name":"Git","slug":"Git","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Git/"},{"name":"Blog","slug":"Blog","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Blog/"}]},{"title":"Wikitten Theme的安裝與設定","slug":"Network/Hexo/6-Wikitten_theme","date":"2021-07-12T03:11:22.840Z","updated":"2021-07-12T03:11:22.840Z","comments":true,"path":"wiki/Network/Hexo/6-Wikitten_theme/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Network/Hexo/6-Wikitten_theme/","excerpt":"前言這是我這個Wiki站的主體框架,除了一部分的配色我會自己改一下以外其他部份都原汁原味","text":"前言這是我這個Wiki站的主體框架,除了一部分的配色我會自己改一下以外其他部份都原汁原味 安裝這個Theme安裝相較之下就簡單很多,只有git clone的安裝方法 12#在Hexo目錄下git clone https://github.com/zthxxx/hexo-theme-Wikitten.git themes/Wikitten 複製以下檔案 123cp -rf themes/Wikitten/_source/* source/cp -rf themes/Wikitten/_scaffolds/* scaffolds/cp -f themes/Wikitten/_config.yml.example _config.Wikitten.yml 安裝以下Plugin hexo-autonofollow // 打开非本站链接时自动开启新标签页 hexo-directory-category // 根据文章文件目录自动为文章添加分类 hexo-generator-feed // 生成 RSS 源 hexo-generator-json-content // 生成全站文章 json 内容，用于全文搜索 hexo-generator-sitemap // 生成全站站点地图 sitemap 1npm i -S hexo-autonofollow hexo-directory-category hexo-generator-feed hexo-generator-json-content hexo-generator-sitemap 修改_config.yml 1theme: Wikitten 設定Hexo本體依照原始架構設想,Wiki會被另外裝到Wiki-site裡面,所以_config.yml內屬於Wiki的有一部分要修改 #Site &amp; URL123456789101112131415161718# Sitetitle: Kiwi&#x27;s Wikisubtitle: description: &#x27;&#x27;keywords:author: Kiwilanguage: entimezone: &#x27;&#x27;# URL## If your site is put in a subdirectory, set url as &#x27;http://example.com/child&#x27; and root as &#x27;/child/&#x27;url: http://Kiwi0093.github.io/Wiki-siteroot: /Wiki-sitepermalink: wiki/:title/permalink_defaults:pretty_urls: trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks 因為是Wiki-Site,所以root部分要變更為/Wiki-site,並且將permalink修改為wiki/:title/ #目錄1234567891011# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render: - README.md - &#x27;_posts/**/embed_page/**&#x27; 在skip_render後加上 12- README.md- &#x27;_posts/**/embed_page/**&#x27; #theme &amp; deploy1234567891011# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: Wikitten# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy: type: git repo: https://github.com/Kiwi0093/Wiki-site branch: gh-pages deploy的部分需要把branch改成gh-pages確保網頁會到https://kiwi0093.github.io/Wiki-site/ Wikitten主題設定#Menu12345678# Menusmenu: 首頁: / 歸檔: /archives 分類: /categories 標籤: /tags 關於: /about Blog : https://Kiwi0093.github.io 記得加上Blog : https://Kiwi0093.github.io確保Wiki頁面上有連回Blog的連結 #Customize12345678910111213141516171819202122232425# Customizecustomize: logo: enabled: true width: 40 height: 40 url: /logo.png profile: enabled: false # Whether to show profile bar avatar: # css/images/avatar.png gravatar: Kiwi@kaienroid.com # Gravatar email address, if you enable Gravatar, your avatar config will be overriden author: Kiwi author_title: Designer &amp; Programmer location: Taipei, Taiwan follow: https://github.com/Kiwi0093/ highlight: monokai sidebar: left # sidebar position, options: left, right category_perExpand: false # enable article categories list per expanding thumbnail: true # enable posts thumbnail, options: true, false favicon: /favicon.ico # path to favicon default_index_file: index.md # if this, it will display at site index instead of default index page social_links: github: https://github.com/Kiwi0093/Kiwi0093.github.io rss: /atom.xml social_link_tooltip: true # enable the social link tooltip, options: true, false 這個部分主要是設定框架 #Widget12345678# Widgetswidgets: # default use category only - category # - recent_posts # - archive # - tag # - tagcloud # - links 這個可以設定有哪些會列出來在左右側的框架內 #歷史版本確認1234567# History version history_control: # make you wiki has history version control in page enable: true server_link: https://github.com # recommend use GitHub https://github.com user: Kiwi0093 repertory: Wiki-site branch: master 這部分可以讓Wiki的歷史版本直接跟github的版本控制連動 變更顏色themes/Wikitten/source/css/_variables.styl 123456789101112// Colorscolor-default = #565a5fcolor-grey = #999color-border = #dfe1e2color-border-stretch = #c1cfdccolor-link = #eb783b //#38b7eacolor-background = #ebeef1color-meta-head = #7b848ccolor-sidebar-text = #777color-sidebar-text-dark = #333color-widget-background = #dddcolor-widget-border = #ccc 個人會把Link的顏色從藍色#38b7ea變更為橘色#eb783b 顏色的選擇可以使用google查詢任意一個顏色的HEX code,就會有google的小工具可以使用了 參考資料A Learning Blog Theme作者Zthxxx’s Wiki Theme Wiki","categories":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/"},{"name":"Hexo","slug":"Network/Hexo","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/Hexo/"}],"tags":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Network/"},{"name":"Server","slug":"Server","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Server/"},{"name":"Git","slug":"Git","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Git/"},{"name":"Wiki","slug":"Wiki","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Wiki/"}]},{"title":"Markdown語法","slug":"Misc/1-Markdown&Hexo","date":"2021-07-12T03:11:22.837Z","updated":"2021-07-12T03:11:22.837Z","comments":true,"path":"wiki/Misc/1-Markdown&Hexo/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Misc/1-Markdown&Hexo/","excerpt":"前言很久以前當我剛開始寫Blog的時候,曾經把我常用的語法整理過一遍(找不到了),但是最近看到一些騷操作就想拿出來獨立整理一篇","text":"前言很久以前當我剛開始寫Blog的時候,曾經把我常用的語法整理過一遍(找不到了),但是最近看到一些騷操作就想拿出來獨立整理一篇 基本使用基本使用的部分基本上Typora都有對應的選項或是快速鍵可以使用,所以就大概記一下就好了 #標題文字基本上就是 # H1 標題## H2 標題### H3 標題#### H4 標題##### H5 標題###### H6 標題從H1~H6共有六種尺寸,算是使用Markdown語法時最常用的 分隔線123---***+++ 效果 連結1[標題](http網址) 效果 Kiwi’s Wiki 文字效果 語法1 語法2 效果 *斜體* _斜體_ 斜體 *粗體* _粗體_ 粗體 *粗斜體* _粗斜體_ 粗斜體 ~~刪除~~ 刪除 清單無序清單語法 123* 第一項* 第二項* 第三項 效果 第一項 第二項 第三項 * &amp; - &amp; + 都是一樣的 有序清單語法 1231. 第一項2. 第二項3. 第三項 效果 第一項 第二項 第三項 順序顛倒也沒關係會自動排序 圖片或是影音連結語法 1234#一般圖片連結![Alt text](/path/to/img.jpg)#youtube連結[![Dr.Berg的斷食說明](http://img.youtube.com/vi/SlzBMJvtGHo/0.jpg)](https://www.youtube.com/watch?v=SlzBMJvtGHo &quot;斷食體內變化&quot;) 效果(如youtube範例) 進階使用基本上就是利用HTML的語法直接使用,markdown可以直接使用html語法,在&lt;&gt;&lt;&gt;tag中的東西不會被變成Markdown HTML 語法盡量包在 Markdown 語法裡面 文字效果底線 語法 效果 &lt;u&gt;底線&lt;/u&gt; 底線 &lt;del&gt;刪除&lt;/del&gt; 刪除 字體顏色 語法 顯示結果 語法 顯示結果 &lt;font color=#800000&gt;酒紅色&lt;/font&gt; 酒紅色 &lt;font color=#FF0000&gt;紅色&lt;/font&gt; 紅色 &lt;font color=#FF6600&gt;橘色&lt;/font&gt; 橘色 &lt;font color=#FFD700&gt;金色&lt;/font&gt; 金色 &lt;font color=#FFFF00&gt;黃色&lt;/font&gt; 黃色 &lt;font color=#00FF00&gt;綠色&lt;/font&gt; 綠色 &lt;font color=#008000&gt;墨綠色&lt;/font&gt; 墨綠色 &lt;font color=#00FFFF&gt;青色&lt;/font&gt; 青色 &lt;font color=#0000FF&gt;深藍色&lt;/font&gt; 深藍色 &lt;font color=#FF00FF&gt;粉紅色&lt;/font&gt; 粉紅色 &lt;font color=#800080&gt;紫色&lt;/font&gt; 紫色 &lt;font color=#808080&gt;灰色&lt;/font&gt; 灰色 上下標 語法 效果 3&lt;sup&gt;2&lt;/sup&gt;=9 32=9 H&lt;sub&gt;2&lt;/sub&gt;O H2O 特殊符號 語法 效果 商標&amp;reg; 商標&reg; &amp;fnof;(X)=X+1 &fnof;(X)=X+1 &amp;radic;2 &radic;2 45&amp;deg; 45&deg; 注音語法 1234&lt;ruby&gt;注&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;ㄓㄨˋ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;音&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;ㄧㄣˉ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 效果 注(ㄓㄨˋ) 音(ㄧㄣˉ) 應用方法 1我很喜歡&lt;ruby&gt;&lt;font color=blue&gt;&lt;del&gt;我家的艦隊&lt;/del&gt;&lt;/font&gt;&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;&lt;font color=red&gt;VMware Esxi&lt;/font&gt;&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 我很喜歡我家的艦隊(VMware Esxi)* 這種用法的時候在&lt;&gt;&lt;/&gt;內的區塊就全部用Html語法才不會有問題 參考文獻西灣筆記 馬力歐的部落格","categories":[{"name":"Misc","slug":"Misc","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Misc/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Markdown/"}]},{"title":"Hexo介紹與整體規劃","slug":"Network/Hexo/1.introduce","date":"2021-07-12T03:11:22.837Z","updated":"2021-07-12T03:11:22.837Z","comments":true,"path":"wiki/Network/Hexo/1.introduce/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Network/Hexo/1.introduce/","excerpt":"目標利用Hexo + Github Page實現個人Blog + Wiki的搭建","text":"目標利用Hexo + Github Page實現個人Blog + Wiki的搭建 基本架構 說明這裡利用了Github Page的幾個特性 在.github.io這個repo的master內的index.html會產生https://.github.io/這個有效網址 在其他repo中,Github Page會把branch:gh-pages內的index.thml產生出https://.github.io/&lt;其他repo&gt;/這個有效網址 所以可以將Blog的網頁產生到.github.io這個repo的master裡面作為主網頁,將其他想要的theme的網頁產生到其他repo的gh-pages內作為其他子網站使用 雖然可以利用Hexo指令可以跑特定_config.yml的方法可以把兩個放在一起,但是其實原理上跟上表是一樣的只是可以把Hexo Wiki 跟Hexo Blog存在同一個目錄裡面將git同步管理這點整合 參考資料Hexo官方文件 OHLIA’s Wiki 別院牧志 風月 途探生靈","categories":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/"},{"name":"Hexo","slug":"Network/Hexo","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/Hexo/"}],"tags":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Network/"},{"name":"Server","slug":"Server","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Server/"},{"name":"Git","slug":"Git","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Git/"},{"name":"Blog","slug":"Blog","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Blog/"},{"name":"Wiki","slug":"Wiki","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Wiki/"}]},{"title":"Hexo安裝","slug":"Network/Hexo/2-installation","date":"2021-07-12T03:11:22.837Z","updated":"2021-07-12T03:11:22.837Z","comments":true,"path":"wiki/Network/Hexo/2-installation/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Network/Hexo/2-installation/","excerpt":"前言Hexo是個很簡單好用的靜態網頁產生工具,基本上就是需要npm+node.js","text":"前言Hexo是個很簡單好用的靜態網頁產生工具,基本上就是需要npm+node.js 相關工具Git Linux Arch系列 1sudo pacman -S git Debian/Ubuntu系 1sudo apt-get install git-core 由於Github Desktop Linux版的安裝比較麻煩,尤其是在強國天朝內沒有翻牆的情況下安裝比較累 所以會建議用Command Line的git就好了,大不了寫成script還是很方便 WindowsWindows下建議直接下載Github Desktop會比較方便,可以在官方網頁上下載安裝也可以透過chocolatey安裝 1choco install github-desktop node.js &amp; npm Linux Arch系列 1sudo pacman -S nodejs npm Debian/Ubuntu系 1sudo apt-get install -y nodejs npm Windows同Github Desktop,可以去node.js下載安裝,裝的時候就會包含npm一起裝了,或是透過chocolatey安裝 1choco install nodejs Hexo安裝Hexo是利用npm安裝的,我沒在WIndows下安裝過,但是我想應該都是一樣的 1npm install -g hexo-cli 跑完就裝好了","categories":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/"},{"name":"Hexo","slug":"Network/Hexo","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/Hexo/"}],"tags":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Network/"},{"name":"Server","slug":"Server","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Server/"},{"name":"Git","slug":"Git","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Git/"},{"name":"Blog","slug":"Blog","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Blog/"},{"name":"Wiki","slug":"Wiki","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Wiki/"}]},{"title":"Hexo基本設定與使用","slug":"Network/Hexo/3-Hexo-setting","date":"2021-07-12T03:11:22.837Z","updated":"2021-07-13T04:11:41.497Z","comments":true,"path":"wiki/Network/Hexo/3-Hexo-setting/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Network/Hexo/3-Hexo-setting/","excerpt":"Hexo本體設定Hexo本體的設定均在&lt;folder&gt;/_config.yml裡面,大多數的設定都可以直接沿用很方便只有一些部分需要修改調整 詳細的Hexo Configuration","text":"Hexo本體設定Hexo本體的設定均在&lt;folder&gt;/_config.yml裡面,大多數的設定都可以直接沿用很方便只有一些部分需要修改調整 詳細的Hexo Configuration #Site Section12345678# Sitetitle: Kiwi&#x27;s Blogsubtitle: 中年大叔的自言自語description: &#x27;&#x27;keywords:author: Kiwi language: zh_TWtimezone: 設定 描述 title 網站標題 subtitle 網站副標題 description 網站描述 keywords 網站的關鍵詞。支援多個關鍵詞。 author 您的名字 language 網站使用的語言，參考 2-lettter ISO-639-1 code，預設為 en timezone 網站時區，Hexo 預設使用您電腦的時區，您可以在 時區列表 尋找適當的時區，例如 America/New_York 、 Japan 與 UTC #URL Section如果您的網站存放在子目錄中，例如 http://example.org/blog，請將您的 url 設為 http://example.org/blog 並把 root 設為 /blog/。 12345678# URLurl: https://kiwi0093.github.io/root: /permalink: :year/:month/:day/:title/permalink_defaults:pretty_urls: trailing_index: true trailing_html: true 設定 描述 預設值 url 網站的網址，must starts with http:// or https:// root 網站的根目錄 permalink 文章 永久連結 的格式 :year/:month/:day/:title/ permalink_defaults permalink 中各區段的預設值 pretty_urls 改寫 permalink 的值來美化 URL pretty_urls.trailing_index 是否在永久鏈接中保留尾部的 index.html，設置為 false 時去除 true pretty_urls.trailing_html 是否在永久鏈接中保留尾部的 .html, 設置為 false 時去除 (對尾部的 index.html無效) true #Directory Section123456789# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render: 設定 描述 預設值 source_dir 原始檔案資料夾，這個資料夾用於存放您的內容 source public_dir 靜態檔案資料夾，這個資料夾用於存放建立完畢的檔案 public tag_dir 標籤資料夾 tags archive_dir 彙整資料夾 archives category_dir 分類資料夾 categories code_dir Include code 資料夾 downloads/code i18n_dir 國際化（i18n）資料夾 :lang skip_render 跳過指定檔案的渲染，您可使用 glob 表達式 來配對路徑 # Writing Section12345678910111213141516171819202122232425# Writingnew_post_name: :title.mddefault_layout: posttitlecase: falseexternal_link: enable: true field: site exclude: &#x27;&#x27;filename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace: &#x27;&#x27; wrap: true hljs: falseprismjs: enable: false preprocess: true line_number: true tab_replace: &#x27;&#x27; 設定 描述 預設值 new_post_name 新文章的檔案名稱 :title.md default_layout 預設佈局 post auto_spacing 在西方文字與東方文字中加入空白 false titlecase 把標題轉換為 title case false external_link 在新頁籤中開啟連結 true external_link.enable 在新頁籤中開啟連結 true external_link.field Applies to the whole site or post only site external_link.exclude Exclude hostname. Specify subdomain when applicable, including www [] filename_case 把檔案名稱轉換為: 1 小寫或 2 大寫 0 render_drafts 顯示草稿 false post_asset_folder 啟動 Asset 資料夾 false relative_link 把連結改為與根目錄的相對位址 false future 顯示未來的文章 true highlight 程式碼區塊的設定, see Highlight.js section for usage guide prismjs 程式碼區塊的設定, see PrismJS section for usage guide # Homepage Section12345678# Home page setting# path: Root path for your blogs index page. (default = &#x27;&#x27;)# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: &#x27;&#x27; per_page: 10 order_by: -date # Category &amp; Tag Section1234# Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map: 設定 描述 預設值 default_category 預設分類 uncategorized category_map 分類別名 tag_map 標籤別名 # Date &amp; Time Section12345678# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss## updated_option supports &#x27;mtime&#x27;, &#x27;date&#x27;, &#x27;empty&#x27;updated_option: &#x27;mtime&#x27; # Pagination Section123# Paginationper_page: 10pagination_dir: page 設定 描述 預設值 per_page 一頁顯示的文章量 (0 = 關閉分頁功能) 10 pagination_dir 分頁目錄 page # Include / Exclude Section12345# Include / Exclude file(s)## include:/exclude: options only apply to the &#x27;source/&#x27; folderinclude:exclude:ignore: 設定 描述 include Hexo 預設會忽略隱藏檔與隱藏資料夾，但列在這個欄位中的檔案，Hexo 仍然會去處理 exclude 列在這裡的檔案將會被 Hexo 忽略 ignore Ignore files/folders # Extension Section1234567891011# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy: type: git repo: https://github.com/Kiwi0093/Kiwi0093.github.io branch: master 設定 描述 theme 使用主題名稱, 設為 false 表示關閉主題功能 deploy 佈署設定 Hexo使用方式12345678#清除建立好的資料hexo clean#建立靜態網頁hexo g#啟動Local Serverhexo s#Deploy到Server上hexo d Hexo剛建好的時候需要手動建立以下頁面 新增一個分類主頁：hexo new page categories 新增一個Tag主頁：hexo new page tags 在 source/tags/index.md 编辑: 123---type: &quot;tags&quot;--- Hexo使用其他config.yml的方法12345# 使用自訂的 &#x27;custom.yml&#x27; 取代預設的 &#x27;_config.yml&#x27;$ hexo server --config custom.yml# 使用多個配置檔, 有衝突時優先使用 &#x27;custom2.json&#x27;$ hexo server --config custom.yml,custom2.json 參考資料OHLIA’s Wiki Hexo的官方文件 同場加映最近更新後常常會有 123456789101112131415161718192021222324252627282930313233FATAL YAMLException: unknown tag !&lt;tag:yaml.org,2002:js/regexp&gt; (116:49) 113 | ... ttributes: true 114 | ... ce: true 115 | ... ore --&gt;&#x27; https://hexo.io/docs/tag-plugins#Post-Excerpt 116 | ... ents: [ !!js/regexp /^\\s*more/]------------------------------------------^ 117 | ... true 118 | ... butes: true at generateError (/home/kiwi/GitHub/Wiki-site/node_modules/js-yaml/lib/loader.js:183:10) at throwError (/home/kiwi/GitHub/Wiki-site/node_modules/js-yaml/lib/loader.js:187:9) at composeNode (/home/kiwi/GitHub/Wiki-site/node_modules/js-yaml/lib/loader.js:1521:7) at readFlowCollection (/home/kiwi/GitHub/Wiki-site/node_modules/js-yaml/lib/loader.js:780:5) at composeNode (/home/kiwi/GitHub/Wiki-site/node_modules/js-yaml/lib/loader.js:1442:11) at readBlockMapping (/home/kiwi/GitHub/Wiki-site/node_modules/js-yaml/lib/loader.js:1164:11) at composeNode (/home/kiwi/GitHub/Wiki-site/node_modules/js-yaml/lib/loader.js:1441:12) at readBlockMapping (/home/kiwi/GitHub/Wiki-site/node_modules/js-yaml/lib/loader.js:1164:11) at composeNode (/home/kiwi/GitHub/Wiki-site/node_modules/js-yaml/lib/loader.js:1441:12) at readDocument (/home/kiwi/GitHub/Wiki-site/node_modules/js-yaml/lib/loader.js:1625:3) at loadDocuments (/home/kiwi/GitHub/Wiki-site/node_modules/js-yaml/lib/loader.js:1688:5) at Object.load (/home/kiwi/GitHub/Wiki-site/node_modules/js-yaml/lib/loader.js:1714:19) at Hexo.yamlHelper (/home/kiwi/GitHub/Wiki-site/node_modules/hexo/lib/plugins/renderer/yaml.js:7:15) at Hexo.tryCatcher (/home/kiwi/GitHub/Wiki-site/node_modules/bluebird/js/release/util.js:16:23) at Hexo.&lt;anonymous&gt; (/home/kiwi/GitHub/Wiki-site/node_modules/bluebird/js/release/method.js:15:34) at /home/kiwi/GitHub/Wiki-site/node_modules/hexo/lib/hexo/render.js:75:22 at tryCatcher (/home/kiwi/GitHub/Wiki-site/node_modules/bluebird/js/release/util.js:16:23) at Promise._settlePromiseFromHandler (/home/kiwi/GitHub/Wiki-site/node_modules/bluebird/js/release/promise.js:547:31) at Promise._settlePromise (/home/kiwi/GitHub/Wiki-site/node_modules/bluebird/js/release/promise.js:604:18) at Promise._settlePromise0 (/home/kiwi/GitHub/Wiki-site/node_modules/bluebird/js/release/promise.js:649:10) at Promise._settlePromises (/home/kiwi/GitHub/Wiki-site/node_modules/bluebird/js/release/promise.js:729:18) at _drainQueueStep (/home/kiwi/GitHub/Wiki-site/node_modules/bluebird/js/release/async.js:93:12) &#123; reason: &#x27;unknown tag !&lt;tag:yaml.org,2002:js/regexp&gt;&#x27;,....... 這樣的錯誤訊息跑出來,解決方案如下 123456789101112131415# /under/your/web/_config.yml---------------------------------------------------------------------------------------------------------------------------------....html_minifier: collapseBooleanAttributes: true collapseWhitespace: true # Ignore &#x27;&lt;!-- more --&gt;&#x27; https://hexo.io/docs/tag-plugins#Post-Excerpt #ignoreCustomComments: [ !!js/regexp /^\\s*more/] #把這行Mark掉就好了 removeComments: true removeEmptyAttributes: true removeScriptTypeAttributes: true removeStyleLinkTypeAttributes: true minifyJS: true minifyCSS: true...","categories":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/"},{"name":"Hexo","slug":"Network/Hexo","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/Hexo/"}],"tags":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Network/"},{"name":"Server","slug":"Server","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Server/"},{"name":"Git","slug":"Git","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Git/"},{"name":"Blog","slug":"Blog","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Blog/"},{"name":"Wiki","slug":"Wiki","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Wiki/"}]},{"title":"Hexo的Plugin與使用","slug":"Network/Hexo/4-Hexo-plugin","date":"2021-07-12T03:11:22.837Z","updated":"2021-07-13T04:18:20.014Z","comments":true,"path":"wiki/Network/Hexo/4-Hexo-plugin/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Network/Hexo/4-Hexo-plugin/","excerpt":"Plugin安裝方法Hexo Plugin官方網頁:https://hexo.io/plugins/","text":"Plugin安裝方法Hexo Plugin官方網頁:https://hexo.io/plugins/ 基本命令123456#安裝npm install &lt;plugin&gt; --save#解除安裝npm uninstall &lt;plugin&gt; --save#更新plugin &amp; Framework(under Hexo Dir)npm update 追加指令先安裝npm-check-update 12#Manjaro環境pacman -S npm-check-update 有用的指令 123456789#確認哪些package過期了npm outdate#確認是否有最新的packagenpm-check-update#update package.jsonncu -u#更新packagenpm install 另外,當git clone下整個Blog(包含package.json)時可以不用重新下安裝指令 12#依照package.json更新整個node_modulenpm update 本站有安裝的Plugin hexo-deployer-git hexo-renderer-markdown-it-plus hexo-html-minifier 相關設定Render-markdown-it-plus Section12345678910markdown_it_plus: highlight: true html: true xhtmlOut: true breaks: true langPrefix: linkify: true typographer: quotes: “”‘’ pre_class: highlight Deployment Section1234deploy: type: git repo: https://github.com/&lt;Username&gt;/&lt;username&gt;.github.io branch: &lt;branch_name&gt; Hexo-html-minifier1234567891011html_minifier: collapseBooleanAttributes: true collapseWhitespace: true # Ignore &#x27;&lt;!-- more --&gt;&#x27; https://hexo.io/docs/tag-plugins#Post-Excerpt ignoreCustomComments: [ !!js/regexp /^\\s*more/] removeComments: true removeEmptyAttributes: true removeScriptTypeAttributes: true removeStyleLinkTypeAttributes: true minifyJS: true minifyCSS: true","categories":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/"},{"name":"Hexo","slug":"Network/Hexo","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/Hexo/"}],"tags":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Network/"},{"name":"Server","slug":"Server","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Server/"},{"name":"Git","slug":"Git","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Git/"},{"name":"Blog","slug":"Blog","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Blog/"},{"name":"Wiki","slug":"Wiki","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Wiki/"}]},{"title":"Mirrorlist選用","slug":"Linux/Manjaro/4-mirrorlist_choose","date":"2021-07-12T03:11:22.833Z","updated":"2021-07-12T03:11:22.833Z","comments":true,"path":"wiki/Linux/Manjaro/4-mirrorlist_choose/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Manjaro/4-mirrorlist_choose/","excerpt":"參考網頁FOSS Linux","text":"參考網頁FOSS Linux By Country選擇1sudo pacman-mirrors --country &lt;County Name&gt; 這個指令會依照選定的Country的server列表進行速度確認建立mirror-list By 速度選擇1sudo pacman-mirrors --fasttrack &lt;數量&gt;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Manjaro","slug":"Linux/Manjaro","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Manjaro/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"Manjaro","slug":"Manjaro","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Manjaro/"},{"name":"Arch","slug":"Arch","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Arch/"}]},{"title":"Manjaro21 for VMware Guest issue","slug":"Linux/Manjaro/5-Manjaro_v21_VMWARE_guest","date":"2021-07-12T03:11:22.833Z","updated":"2021-07-12T03:11:22.833Z","comments":true,"path":"wiki/Linux/Manjaro/5-Manjaro_v21_VMWARE_guest/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Manjaro/5-Manjaro_v21_VMWARE_guest/","excerpt":"前言Manjaro 21 KDE,不知道發了什麼瘋,安裝到VMWare Workstation裡面的時候會有下面兩個問題 用Free driver &amp; none-Free driver無法開機(21.0.7修好了) 安裝後沒有VM用的Display driver顯示有問題","text":"前言Manjaro 21 KDE,不知道發了什麼瘋,安裝到VMWare Workstation裡面的時候會有下面兩個問題 用Free driver &amp; none-Free driver無法開機(21.0.7修好了) 安裝後沒有VM用的Display driver顯示有問題 Boot from USB/ISO雖然問題解決了,但是補充一下對策 12# 開機的時候進入grub editor把driver=free 改成 driver=mesa 就可以了 Dispaly issue fix基本上就是缺安裝video-virtualmachine這個Vmware跟virtualbox通吃的driver 12345#先安裝上需要的packagesudo pacman -S virtualbox-guest-utils open-vm-toolssudo mhwd -i pci video-virtualmachinesudo systemctl enable vmtoolsd.servicesudo systemctl start vmtoolsd.service 理論上這樣就好了","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Manjaro","slug":"Linux/Manjaro","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Manjaro/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"Manjaro","slug":"Manjaro","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Manjaro/"}]},{"title":"bsnmp & check_mk_agent","slug":"FreeBSD/3-SNMP & Check_MK_agent","date":"2021-07-12T03:11:22.823Z","updated":"2021-07-12T03:11:22.823Z","comments":true,"path":"wiki/FreeBSD/3-SNMP & Check_MK_agent/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/FreeBSD/3-SNMP%20&%20Check_MK_agent/","excerpt":"前言Librenms需要SNMP才能監控,另外也可以使用check_mk_agent來輔助","text":"前言Librenms需要SNMP才能監控,另外也可以使用check_mk_agent來輔助 參考資料柯仓无居所 bsnmpFreeBSD有內建的bsnmp vi /etc/rc.conf 123# /etc/rc.conf--------------------------------------------------------------------------------------------------------------------------------bsnmpd_enable=&quot;YES&quot; pkg install bsnmp-ucd vi /etc/snmpd.conf 123456789101112131415161718192021222324252627282930313233343536373839404142# /etc/snmpd.conf 加上以下內容--------------------------------------------------------------------------------------------------------------------------------begemotSnmpdModulePath.&quot;ucd&quot; = &quot;/usr/local/lib/snmp_ucd.so&quot;%ucdupdateInterval = 500extCheckInterval = 100extUpdateInterval = 3000extTimeout = 60memMinimumSwap = 1600memSwapErrorMsg = &quot;No free swap!&quot;laConfig.1 = &quot;6.0&quot;laConfig.2 = &quot;5.0&quot;laConfig.3 = &quot;4.0&quot;laErrMessage.1 = &quot;1min load average is high!&quot;laErrMessage.2 = &quot;5min load average is high!&quot;laErrMessage.3 = &quot;15min load average is high!&quot;# Process tableprNames.0 = &quot;httpd&quot;prMin.0 = 3prMax.0 = 100prErrFix.0 = 1prErrFixCmd.0 = &quot;/usr/local/etc/rc.d/apache22 restart&quot;# Extension commands (extTable)extNames.0 = &quot;uname&quot;extCommand.0 = &quot;/usr/bin/uname -a&quot;extNames.1 = &quot;uptime&quot;extCommand.1 = &quot;/usr/bin/uptime&quot;# example of extension with fix commandextNames.2 = &quot;apache&quot;extCommand.2 = &quot;/usr/local/etc/rc.d/apache status&quot;extErrFix.2 = 1extErrFixCmd.2 = &quot;/usr/local/etc/rc.d/apache restart&quot; /etc/rc.d/bsnmpd restart bsnmpwalk -v 2c -c public 確認有取得資料就是OK了 check_mk_agentpre-install needed1pkg install bash ipmitool libstatgrab git 因為check_mk_agent需要用bash跑,沒有bash是不會動的 Install and setup 取得check_mk_agent & 賦予執行權限 123git clone https://github.com/librenms/librenms-agent.gitcp librenms-agent/check_mk_agent_freebsd /usr/local/bin/check_mk_agentchmod +x /usr/local/bin/check_mk_agent 上述的方法過時了..因為現在port裡面就有支援 /usr/ports/net-mgmt/check_mk_agent/ 12cd /usr/ports/net-mgmt/check_mk_agent/make install clean vi /etc/services 123# /etc/services--------------------------------------------------------------------------------------------------------------------------------check_mk 6556/tcp #check_mk agent 這個是加進去的 vi /etc/inetd.conf 123#/etc/inetd.conf--------------------------------------------------------------------------------------------------------------------------------check_mk stream tcp nowait root /usr/local/bin/check_mk_agent check_mk_agent 這個也是加進去的 vi /etc/rc.conf 1234#/etc/rc.conf--------------------------------------------------------------------------------------------------------------------------------inetd_enable=yesinetd_flags=-wW 這個也是加進去的 vi /etc/hosts.allow 12345#/etc/hosts.allow--------------------------------------------------------------------------------------------------------------------------------# Allow nagios server to access uscheck_mk_agent : 192.168.56.3 : allowcheck_mk_agent : ALL : deny 這個也是加進去 /etc/rc.d/inetd start telnet確認一下 1234telnet bsdhost 6556&lt;&lt;&lt;check_mk&gt;&gt;&gt;Version: 1.1.13i1AgentOS: freebsd 這樣就好了 結論雖然我不是很喜歡開inetd來跑,不過這些機器跟port基本上都用FW限制死了連線,加上librenms架在裡面,所以問題應該沒有那麼大 勉強還是可以這樣用的","categories":[{"name":"FreeBSD","slug":"FreeBSD","permalink":"http://kiwi0093.github.io/Wiki-site/categories/FreeBSD/"}],"tags":[{"name":"FreeBSD","slug":"FreeBSD","permalink":"http://kiwi0093.github.io/Wiki-site/tags/FreeBSD/"}]},{"title":"Use SSH Key to improve connection security","slug":"FreeBSD/1-SSH_KEY","date":"2021-07-12T03:11:22.823Z","updated":"2021-07-13T01:38:58.768Z","comments":true,"path":"wiki/FreeBSD/1-SSH_KEY/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/FreeBSD/1-SSH_KEY/","excerpt":"前言為了家中主Server的安全,ssh的登入採用ssh key的方式進行","text":"前言為了家中主Server的安全,ssh的登入採用ssh key的方式進行 參考網頁MIS腳印 - Windows 使用 SSH 金鑰免密碼登入 Linux 需求工具 Windows - Putty, Puttygen 基本概念基本上想要利用SSH Key來連線就是需要在Client端有private Key,對應Server上的public Key去進行連線,而Putty,WinSCP這些程式吃Putty的ppk格式,所以建立好的private key還需要轉換成ppk格式才能讓這些client使用 作法有兩個方法都可以達成 從Linux/FreeBSD生成Key,然後用Puttygen轉換成ppk檔 從Puttygen生成Key,然後把public Key轉貼到Linux/FreeBSD上 從Linux/FreeBSD生成Key12#確認你在登入的帳號下ssh-keygen -b 4096 -t rsa ssh-keygen其實就可以了,後面的參數是指定一些條件 -b 4096 這是採取4096 bits的加密編碼 -r rsa 這是指定產生的是rsa格式的key 執行後會產生 12~/.ssh/id_rsa~/.ssh/id_rsa.pub 這兩個檔案 id_rsa是Private Key, id_rsa是public key 然後把public key變成sshd_config內定義的檔案 12#預設的在/etc/ssh/sshd_config內AuthorizedKeysFile .ssh/authorized_keys 若不打算修改檔名那就需要修改public key的檔名就好了(複數Key的使用我沒試過但是大概都是放在同一個檔裡面就好了) 12#使用預設的設定mv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys 由於ssh的權限設定要求所以需要調整權限 12chmod 700 ~/.sshchmod 644 ~/.ssh/authorized_keys 然後利用sftp把id_rsa檔弄到你的windows裡面去,利用puttygen轉換檔案 讀進去後,可以加上自己的密碼 鍵入自己想要的密碼後Save as a ppk file就好了 從Puttygen生成 基本上是一樣的在右下角設定好bits,確認是哪一種,然後按下Generate 就會產生Private key跟Public Key 之後只要儲存ppk檔的Private key,跟把public key的內容塞進~/.ssh/authorized_keys 就算完工,要是一個Client要管很多台,其實用puttygen生成後去塞public Key是比較方便也比較快的 sshd_config要讓SSHD接受KEY並且取消密碼登入(換言之就是只吃Key)的設定方法 123456789101112131415161718#我只打算port 22可以接受sshPort 22#禁止Root帳號透過ssh登入PermitRootLogin no#接受Public Key認證方式PubkeyAuthentication yes#預設的Public Key位置檔名AuthorizedKeysFile .ssh/authorized_keys#不使用Build-in的密碼認證系統也禁止空白密碼PasswordAuthentication noPermitEmptyPasswords no#禁止使用密碼認證登入ChallengeResponseAuthentication noUsePAM no 改好後重新啟動sshd就好了 同場加映 - 在企鵝下的ppk-&gt;pem因為時常會用Manjaro client,所以去查了一下, Manjaro安裝putty後就自動裝上puttygen了,所以不需要再安裝,使用Ubuntu/Debian的人還還需要裝上 12#安裝Putty工具apt install putty-tools 有了工具就轉檔 12#把你的ppk檔轉成pem檔供ssh client直接使用puttygen yourkey.ppk -O private-openssh -o yourkey.pem 轉好後就可以用以下指令登入 12#使用pem登入ssh -i /your/key/file user@hostname.or.ip","categories":[{"name":"FreeBSD","slug":"FreeBSD","permalink":"http://kiwi0093.github.io/Wiki-site/categories/FreeBSD/"}],"tags":[{"name":"FreeBSD","slug":"FreeBSD","permalink":"http://kiwi0093.github.io/Wiki-site/tags/FreeBSD/"},{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"}]},{"title":"Dummynet & IPFW","slug":"FreeBSD/2-dummynet&ipfw","date":"2021-07-12T03:11:22.823Z","updated":"2021-07-12T03:11:22.823Z","comments":true,"path":"wiki/FreeBSD/2-dummynet&ipfw/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/FreeBSD/2-dummynet&ipfw/","excerpt":"前言FreeBSD Gateway可以利用ipfw來達成流量限制的功能,想要使用這個除了/etc/rc.conf需要設定以外,還需要讓kernel的dummynet啟動才會正常啟動","text":"前言FreeBSD Gateway可以利用ipfw來達成流量限制的功能,想要使用這個除了/etc/rc.conf需要設定以外,還需要讓kernel的dummynet啟動才會正常啟動 Dummynet動態載入由於現在都是使用Generic的Kernel(減少compile Kernel的動作)所以使用kldload來load dummynet.ko 手動載入 1kldload dummynet 想要確認有沒有跑起來請用 1kldstat 這個指令會列出所有動態載入的.ko 開機自動載入12# /boot/loader.confdummynet_load=&quot;YES&quot; 之後重開機的時候就會自動載入了 ipfw/etc/rc.conf123firewall_enable=&quot;YES&quot;firewall_script=&quot;/etc/ipfw.conf&quot;natd_enable=&quot;NO&quot; 上述設定的意思就是啟動ipfw,設定檔為/etc/ipfw.conf,並且不啟動natd /etc/ipfw.conf1234567891011121314151617181920212223242526272829303132333435363738#定義介面EXT_IF=&quot;ext0&quot;INT_IF=&quot;int0&quot;#定義網路DMZ_NET=&quot;192.168.0.0/24&quot;#定義特定IP與名稱RDP_PROXY=&quot;192.168.0.13&quot;#定義類型與速度P2P_UP=&quot;100KBytes/s&quot;VPN_UP=&quot;500KBytes/s&quot;RDP_P2P=&quot;500KBytes/s&quot;RDP_BAND=&quot;100KBytes/s&quot;SERV_UP=&quot;350KBytes/s&quot;GUEST_BAND=&quot;30KBytes/s&quot;#流量限制完整設定#清除規則,並加上全部通行的規則ipfw -f flushipfw -q add 10 allow all from any to any#使用ipfw pipe來定義每一項流量限制與編號ipfw pipe 1 config bw $VPN_UPipfw pipe 2 config bw $P2P_UPipfw pipe 3 config bw $RDP_P2Pipfw pipe 4 config bw $SERV_UPipfw pipe 5 config bw $GUEST_BAND#利用pipe定義從哪裡到哪裡的流量ipfw add 20 pipe 1 ip from any to $VPN_NETipfw add 25 pipe 3 ip from $P2P1_IP to any 3389 in recv $INT_IFipfw add 30 pipe 2 ip from $P2P1_IP to any in recv $INT_IFipfw add 40 pipe 2 ip from $P2P2_IP to any in recv $INT_IFipfw add 110 pipe 5 ip from $GUEST_NET to anyipfw add 120 pipe 5 ip from any to $GUEST_NETipfw add 210 pipe 4 ip from $DMZ_NET to any via ext0 這個規則基本上依照ipfw add 後的數字定義優先權數字越少的規則優先權越高","categories":[{"name":"FreeBSD","slug":"FreeBSD","permalink":"http://kiwi0093.github.io/Wiki-site/categories/FreeBSD/"}],"tags":[{"name":"FreeBSD","slug":"FreeBSD","permalink":"http://kiwi0093.github.io/Wiki-site/tags/FreeBSD/"}]},{"title":"整合型Archlinux安裝Script - 8.arch_v2ray_gate_k.sh說明","slug":"Linux/Arch Linux/8-arch_v2ray_gate_k","date":"2021-06-22T16:00:00.000Z","updated":"2021-07-12T03:11:22.830Z","comments":true,"path":"wiki/Linux/Arch Linux/8-arch_v2ray_gate_k/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Arch%20Linux/8-arch_v2ray_gate_k/","excerpt":"本條目已不再適用,不僅停止維護,原先的script也被移除了","text":"本條目已不再適用,不僅停止維護,原先的script也被移除了 使用前 這個script預設是自動帶出來跑的,但是也是可以手動自己跑 這個script是用在有兩張網路卡的條件下的 Script的直接位置如下： https://Kiwi0093.github.io/script/Arch/arch_v2ray_gate_k.sh Script內容Script內容說明基本定義12345#!/bin/zsh#Parmeter Pre-DefineCOLOR1=&#x27;\\e[94m&#x27;COLOR2=&#x27;\\e[32m&#x27;NC=&#x27;\\e[0m&#x27; 定義Script中字串的顏色 設定時區與硬體時間1234567891011121314151617181920212223242526#change Timezone to CTS(Taipei)echo -e &quot;$&#123;COLOR1&#125;Please select your time zone\\n1)Taipei\\n2)Shanghai\\n*)Whatever..I don&#x27;t care\\n$&#123;NC&#125;&quot;while :do read ZONE case $ZONE in 1) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Taipei$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime hwclock --systohc --utc break ;; 2) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Shanghai$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime hwclock --systohc --utc break ;; *) echo -e &quot;$&#123;COLOR1&#125;Nobody cares the local time!!$&#123;NC&#125;&quot; hwclock --systohc --utc break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 網路設定Hostname設定123456#Hostnameecho -e &quot;$&#123;COLOR1&#125;Please input your hostname\\n$&#123;NC&#125;&quot;read HOSTNAMEecho $&#123;HOSTNAME&#125; &gt; /etc/hostnameecho &quot;127.0.0.1 localhost $&#123;HOSTNAME&#125;&quot; &gt;&gt; /etc/hostsecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 輸入卡號定義NIC名稱123456789#Set Mac Addressecho -e &quot;$&#123;COLOR1&#125;Define your NIC by Mac address$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Please input your EXT Mac Address:\\n$&#123;NC&#125;&quot;read OUTSIDEecho &#x27;SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, ATTR&#123;address&#125;==&quot;&#x27;$&#123;OUTSIDE&#125;&#x27;&quot;, NAME=&quot;EXT0&quot;&#x27; &gt; /etc/udev/rules.d/10-network.rulesecho -e &quot;$&#123;COLOR1&#125;Please input your INT Mac Address:\\n$&#123;NC&#125;&quot;read INSIDEecho &#x27;SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, ATTR&#123;address&#125;==&quot;&#x27;$&#123;INSIDE&#125;&#x27;&quot;, NAME=&quot;INT0&quot;&#x27; &gt;&gt; /etc/udev/rules.d/10-network.rulesecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 這個設定是利用固定的**Mac Address來定義NIC Interface的名字為EXT0** 設定對內固定IP123456789101112# Set INT networkecho -e &quot;$&#123;COLOR1&#125;Setting your INT0$&#123;NC&#125;&quot;echo &quot;Description=&#x27;INT0 IP SETTING&#x27;&quot; &gt; /etc/netctl/INT0.serviceecho &quot;Interface=INT0&quot; &gt;&gt; /etc/netctl/INT0.serviceecho &quot;Connection=ethernet&quot; &gt;&gt; /etc/netctl/INT0.serviceecho &quot;IP=static&quot; &gt;&gt; /etc/netctl/INT0.serviceecho -e &quot;$&#123;COLOR1&#125;Please input your INT IP:\\n$&#123;NC&#125;&quot;read INT_IPecho &quot;Address=(&#x27;$&#123;INT_IP&#125;/24&#x27;)&quot; &gt;&gt; /etc/netctl/INT0.serviceecho -e &quot;$&#123;COLOR2&#125;Enable INT0$&#123;NC&#125;&quot;netctl enable INT0.serviceecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot; IP請設定在192.168/16的範圍內 設定對外網路,可選固定IP或是PPPOE方式連線123456789101112131415161718192021222324252627282930313233343536373839404142434445# Set EXT networkecho -e &quot;$&#123;COLOR1&#125;Please select your connection\\n1)PPPOE\\n2)Static IP\\n&quot;whiledo read CONNECT case $CONNECT in 1) echo -e &quot;$&#123;COLOR1&#125;Setting your PPPOE$&#123;NC&#125;&quot; echo &quot;Description=&#x27;EXT0 PPPOE SETTING&#x27;&quot; &gt; /etc/netctl/EXT0.service echo &quot;Interface=EXT0&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;Connection=pppoe&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input your PPPOE Account:\\n:$&#123;NC&#125;&quot; read ISP echo &quot;User=&#x27;$&#123;ISP&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input your PPPOE password:\\n$&#123;NC&#125;&quot; read ISPPW echo &quot;Password=&#x27;$&#123;ISPPW&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;ConnectionMode=&#x27;persist&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;UsePeerDNS=false&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Enable EXT0&#123;NC&#125;&quot; netctl enable EXT0.service break ;; 2) echo -e &quot;$&#123;COLOR1&#125;Setting your Static IP$&#123;NC&#125;&quot; echo &quot;Description=&#x27;EXT0 IP SETTING&#x27;&quot; &gt; /etc/netctl/EXT0.service echo &quot;Interface=EXT0&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;Connection=ethernet&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;IP=static&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input your IP address:\\n$&#123;NC&#125;&quot; read EXT_IP echo &quot;Address=(&#x27;$&#123;EXT_IP&#125;/24&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input Gateway IP address:\\n$&#123;NC&#125;&quot; read GATE_IP echo &quot;Gateway=&#x27;$&#123;GATE_IP&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input DNS IP address:\\n$&#123;NC&#125;&quot; read DNS_IP echo &quot;DNS=(&#x27;$&#123;DNS_IP&#125;&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR2&#125;Enable EXT0$&#123;NC&#125;&quot; netctl enable EXT0.service break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;EXT set completed.$&#123;NC&#125;&quot; 設定Gateway Routing1234#Set Natecho -e &quot;$&#123;COLOR1&#125;Open package fowrading$&#123;NC&#125;&quot;echo &quot;net.ipv4.ip_forward=1&quot; &gt; /etc/sysctl/30-ipforward.confecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot; iptable設定與systemd12345678910111213141516171819# iptable scriptecho -e &quot;$&#123;COLOR1&#125;Create Iptable start script$&#123;NC&#125;&quot;echo &quot;#Natd&quot; &gt; /etc/iptables/iptable.shecho &quot;iptables -t nat -A POSTROUTING -s 192.168/16 -j MASQUERADE&quot; &gt;&gt; /etc/iptables/iptable.shchmod 750 /etc/iptables/iptable.shecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot;# systemdecho -e &quot;$&#123;COLOR1&#125;Create Systemd Service$&#123;NC&#125;&quot;echo &quot;[Unit] &gt; /etc/systemd/system/iptables.serviceecho &quot;Description=iptables rules &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot; &quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot;[Service]&quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot;ExecStart=/bin/sh /etc/iptables/iptable.sh&quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot; &quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot;[Install]&quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot;WantedBy=multi-user.target&quot; &gt;&gt; /etc/systemd/system/iptables.servicesystemctl enable iptables.serviceecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot; 變更root密碼與建立其他帳號123456789101112131415161718#Root Passwordecho -e &quot;$&#123;COLOR1&#125;設定你的root密碼$&#123;NC&#125;&quot;passwdchsh -s /bin/zshecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#add Userecho -e &quot;$&#123;COLOR1&#125;Add user account:$&#123;NC&#125;&quot;echo -n &quot;$&#123;COLOR1&#125;What ID you want:$&#123;NC&#125;&quot;read YOURIDuseradd -m -g root -s /bin/zsh $&#123;YOURID&#125;passwd $&#123;YOURID&#125;echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Add $YOURID into sudo list$&#123;NC&#125;&quot;pacman -Syu sudoecho &quot;$&#123;YOURID&#125; ALL=(ALL) ALL&quot; &gt;&gt; /etc/sudoersecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 安裝程式12345#install Toolsecho -e &quot;$&#123;COLOR1&#125;Install Packages$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;screen$&#123;NC&#125;&quot;pacman -Sy screen v2rayecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 安裝Bootloader12345#install Bootloaderecho -e &quot;$&#123;COLOR1&#125;Install grub Boot Loader into /dev/sda$&#123;NC&#125;&quot;grub-install --target=i386-pc /dev/sdagrub-mkconfig -o /boot/grub/grub.cfgecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 同步後離開Arch-chroot12345#Finished installsyncsyncsyncexit 完整版的script123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166#------------------------------------------------------------------------------#(所有動作都是在change root內完成的)#------------------------------------------------------------------------------#!/bin/zsh#Parmeter Pre-DefineCOLOR1=&#x27;\\e[94m&#x27;COLOR2=&#x27;\\e[32m&#x27;NC=&#x27;\\e[0m&#x27;#change Timezone to CTS(Taipei)echo -e &quot;$&#123;COLOR1&#125;Please select your time zone\\n1)Taipei\\n2)Shanghai\\n*)Whatever..I don&#x27;t care\\n$&#123;NC&#125;&quot;while :do read ZONE case $ZONE in 1) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Taipei$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime hwclock --systohc --utc break ;; 2) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Shanghai$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime hwclock --systohc --utc break ;; *) echo -e &quot;$&#123;COLOR1&#125;Nobody cares the local time!!$&#123;NC&#125;&quot; hwclock --systohc --utc break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#Set Mac Addressecho -e &quot;$&#123;COLOR1&#125;Define your NIC by Mac address$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Please input your EXT Mac Address:\\n$&#123;NC&#125;&quot;read OUTSIDEecho &#x27;SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, ATTR&#123;address&#125;==&quot;&#x27;$&#123;OUTSIDE&#125;&#x27;&quot;, NAME=&quot;EXT0&quot;&#x27; &gt; /etc/udev/rules.d/10-network.rulesecho -e &quot;$&#123;COLOR1&#125;Please input your INT Mac Address:\\n$&#123;NC&#125;&quot;read INSIDEecho &#x27;SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, ATTR&#123;address&#125;==&quot;&#x27;$&#123;INSIDE&#125;&#x27;&quot;, NAME=&quot;INT0&quot;&#x27; &gt;&gt; /etc/udev/rules.d/10-network.rulesecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;# Set INT networkecho -e &quot;$&#123;COLOR1&#125;Setting your INT0$&#123;NC&#125;&quot;echo &quot;Description=&#x27;INT0 IP SETTING&#x27;&quot; &gt; /etc/netctl/INT0.serviceecho &quot;Interface=INT0&quot; &gt;&gt; /etc/netctl/INT0.serviceecho &quot;Connection=ethernet&quot; &gt;&gt; /etc/netctl/INT0.serviceecho &quot;IP=static&quot; &gt;&gt; /etc/netctl/INT0.serviceecho -e &quot;$&#123;COLOR1&#125;Please input your INT IP:\\n$&#123;NC&#125;&quot;read INT_IPecho &quot;Address=(&#x27;$&#123;INT_IP&#125;/24&#x27;)&quot; &gt;&gt; /etc/netctl/INT0.serviceecho -e &quot;$&#123;COLOR2&#125;Enable INT0$&#123;NC&#125;&quot;netctl enable INT0.serviceecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot;# Set EXT networkecho -e &quot;$&#123;COLOR1&#125;Please select your connection\\n1)PPPOE\\n2)Static IP\\n&quot;whiledo read CONNECT case $CONNECT in 1) echo -e &quot;$&#123;COLOR1&#125;Setting your PPPOE$&#123;NC&#125;&quot; echo &quot;Description=&#x27;EXT0 PPPOE SETTING&#x27;&quot; &gt; /etc/netctl/EXT0.service echo &quot;Interface=EXT0&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;Connection=pppoe&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input your PPPOE Account:\\n:$&#123;NC&#125;&quot; read ISP echo &quot;User=&#x27;$&#123;ISP&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input your PPPOE password:\\n$&#123;NC&#125;&quot; read ISPPW echo &quot;Password=&#x27;$&#123;ISPPW&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;ConnectionMode=&#x27;persist&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;UsePeerDNS=false&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Enable EXT0&#123;NC&#125;&quot; netctl enable EXT0.service break ;; 2) echo -e &quot;$&#123;COLOR1&#125;Setting your Static IP$&#123;NC&#125;&quot; echo &quot;Description=&#x27;EXT0 IP SETTING&#x27;&quot; &gt; /etc/netctl/EXT0.service echo &quot;Interface=EXT0&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;Connection=ethernet&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;IP=static&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input your IP address:\\n$&#123;NC&#125;&quot; read EXT_IP echo &quot;Address=(&#x27;$&#123;EXT_IP&#125;/24&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input Gateway IP address:\\n$&#123;NC&#125;&quot; read GATE_IP echo &quot;Gateway=&#x27;$&#123;GATE_IP&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input DNS IP address:\\n$&#123;NC&#125;&quot; read DNS_IP echo &quot;DNS=(&#x27;$&#123;DNS_IP&#125;&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR2&#125;Enable EXT0$&#123;NC&#125;&quot; netctl enable EXT0.service break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;EXT set completed.$&#123;NC&#125;&quot;#Set Natecho -e &quot;$&#123;COLOR1&#125;Open package fowrading$&#123;NC&#125;&quot;echo &quot;net.ipv4.ip_forward=1&quot; &gt; /etc/sysctl/30-ipforward.confecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot;# iptable scriptecho -e &quot;$&#123;COLOR1&#125;Create Iptable start script$&#123;NC&#125;&quot;echo &quot;#Natd&quot; &gt; /etc/iptables/iptable.shecho &quot;iptables -t nat -A POSTROUTING -s 192.168/16 -j MASQUERADE&quot; &gt;&gt; /etc/iptables/iptable.shchmod 750 /etc/iptables/iptable.shecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot;# systemdecho -e &quot;$&#123;COLOR1&#125;Create Systemd Service$&#123;NC&#125;&quot;echo &quot;[Unit] &gt; /etc/systemd/system/iptables.serviceecho &quot;Description=iptables rules &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot; &quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot;[Service]&quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot;ExecStart=/bin/sh /etc/iptables/iptable.sh&quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot; &quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot;[Install]&quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot;WantedBy=multi-user.target&quot; &gt;&gt; /etc/systemd/system/iptables.servicesystemctl enable iptables.serviceecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot;#Root Passwordecho -e &quot;$&#123;COLOR1&#125;設定你的root密碼$&#123;NC&#125;&quot;passwdchsh -s /bin/zshecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#add Userecho -e &quot;$&#123;COLOR1&#125;Add user account:$&#123;NC&#125;&quot;echo -n &quot;$&#123;COLOR1&#125;What ID you want:$&#123;NC&#125;&quot;read YOURIDuseradd -m -g root -s /bin/zsh $&#123;YOURID&#125;passwd $&#123;YOURID&#125;echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Add $YOURID into sudo list$&#123;NC&#125;&quot;pacman -Syu sudoecho &quot;$&#123;YOURID&#125; ALL=(ALL) ALL&quot; &gt;&gt; /etc/sudoersecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#install Toolsecho -e &quot;$&#123;COLOR1&#125;Install Packages$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;screen$&#123;NC&#125;&quot;pacman -Sy screen v2rayecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#install Bootloaderecho -e &quot;$&#123;COLOR1&#125;Install grub Boot Loader into /dev/sda$&#123;NC&#125;&quot;grub-install --target=i386-pc /dev/sdagrub-mkconfig -o /boot/grub/grub.cfgecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#Finished installsyncsyncsyncexit","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Arch Linux","slug":"Linux/Arch-Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Arch-Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"Archlinux","slug":"Archlinux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Archlinux/"}]},{"title":"Manajro Tweak & Application","slug":"Linux/Manjaro/3-tweek&application","date":"2021-06-22T16:00:00.000Z","updated":"2021-07-13T07:48:53.749Z","comments":true,"path":"wiki/Linux/Manjaro/3-tweek&application/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Manjaro/3-tweek&application/","excerpt":"前言雖然寫了一個Manjaro的自動安裝script,但是某程度上並不是很實用,因為Manjaro在我個人的使用上是當Desktop使用的,其實不是真的很需要自動安裝的script 所以我就針對現在(21.0.7)整理一下我個人會使用的程式與系統調整","text":"前言雖然寫了一個Manjaro的自動安裝script,但是某程度上並不是很實用,因為Manjaro在我個人的使用上是當Desktop使用的,其實不是真的很需要自動安裝的script 所以我就針對現在(21.0.7)整理一下我個人會使用的程式與系統調整 Tweak環境條件 Manjaro KDE 21.0.7 變更Mirror-listManjaro比Arch人性化的地方在於它有提供工具可以直接變更Mirror-list而不用靠編輯文件檔(可能其他人會覺得那樣比較簡潔乾淨又快速) 1234#依照國別選擇sudo pacman-mirrors --country &lt;County Name&gt;#依照速度選擇sudo pacman-mirrors --fasttrack &lt;數量&gt; 之前我還住在中國的時候習慣性是把Mirror-list設成中國這樣可以省掉很多因為牆的問題 現在回台灣了應該都會改以速度為原則來選,甚至不選就可以了 安裝VGA Driver1sudo mhwd -a [pci or usb connection] [free or nonfree drivers] 0300 這個就會自動確認並且下載安裝了 VM Guest OS安裝ISO無法開機這個發生在21.0.6版,理由大概是因為Manjaro針對VM Guest的Driver做了調整,所以導致預設開機的driver=free無法正確驅動顯示,導致會卡在mhwd偵測 解決方案就是在開機選單中手動修改grub的開機參數 1234#將原先預設參數中的driver=free#改成driver=mesa 改用mesa來驅動顯示就可以了開了,不過21.0.7的時候這個問題又被改好了 進入VM後無法resize解析度以及不會自動fit畫面大小這個是目前21版的毛病(以前用20或是19沒有這個問題不知道後面的版本會不會修正)原因是因為缺乏VM顯示的driver造成的 12#安裝需要的Packagesudo pacman -S open-vm-tools virtualbox-guest-utils 雖然不算是正式的解決,因為沒裝上video-virtualmachine這個driver(怎麼安裝怎麼fail,後面可能會修好吧) 但是這樣畫面就可以動了,於是我也就先不管了 Console之前我會自己裝powerline,或是power10k這種東西來美化我的console,但是很神奇的是,21.0.7開始Manjaro的zsh就有寫好漂漂亮亮的powerline顯示可以使用,我就不用自己再弄,但是還是需要調整一下 tmuxTmux其實就是我以前愛用的Screen的強化版(真的強很多) 1234567#安裝tmuxsudo pacman -S tmux#加裝oh-my-tmux美化cdgit clone https://github.com/gpakosz/.tmux.gitln -s -f .tmux/.tmux.confcp .tmux/.tmux.conf.local . 使用oh-my-tmux的最大好處除了漂亮以外就是他增加了C-a作為他的prefix,這比起他預設的C-b更接近screen的用法 幾個常用的快捷鍵如下 指令 效果 C-a + % 分隔左右 C-a + - 分隔上下 C-a + “ 分隔上下 C-a + 方向鍵 選擇區塊 C-a + c 新的分頁 C-a + 數字 跳去數字的分頁 C-a + w 從列表選擇窗口 C-a + , 重新命名分頁 C-a + d Detach 整個tmux(同screen) 其他的啟動參數 1234#列出在跑的tmux sessiontmux ls#接著第$數字個sessiontmxu at -t $數字 參考資料 阮一峰的网络日志 ryerh的github yakuake這是一個下拉式的console,以前我會移除,但是最近發現他其實很好用,所以就保留著,設定上沒什麼特別的,基本上就是 調整下拉後的寬度,我習慣是90% 調整下拉後的高度,我習慣是80% 設定使用的是/bin/zsh,這個也可以用chsh把shell都改過就好了 要使用的時候按F12就可以了(應該可以設定改成其他的鍵,但是我個人覺得F12蠻好的),用其他的GUI程式的時候就會自動縮起來不佔空間 沒有exit前再次按F12會回到正在跑的console,這點很好用 yay1sudo pacman -S base-devel yay 這是神器肯定要上的 中文輸入這個是我們作為中文使用者需要的東西,在Linux上我喜歡用新酷音 1yay -S fcitx fcitx-qt5 fcitx-configtool fcitx-chewing fcitx-mozc 安裝後還需要增加以下設定才可以正常運作 12345#/etc/profile內加入以下# Add Chinese Input Supportexport GTK_IM_MODULE=fcitxexport XMODIFIERS=@im=fcitxexport QT_IM_MODULE=fcitx 然後重跑fcitx就可以用了 Application因為我都是拿Manjaro當desktop使用,所以也沒用什麼太花俏的程式 網路相關Browser目前我都是用Brave作為我的主力browser,但是Brave是在AUR裡面的所以要用yay安裝 1yay -S brave 這樣就好了,通常我還會移除firefox,因為我沒用上 FTP client1yay -S filezilla Filezilla也支援SFTP跟ppk檔,所以蠻方便的,不過近日大家都在用web的cloud在傳輸,傳統的ftp/sftp使用的機率越來越低,其實不裝也可以 RDP1yay -S remmina freerdp 這樣就可以用rdp遠端控制其他的windwos了 Github-desktop(Optional)1yay -S github-desktop 雖然可以用console的git,但是有時候GUI還是比較好用的 Hexo(Optional)1yay -S nodejs npm 因為我基本上安裝Hexo都是為了我自己的Blog/Wiki,若不是的可以任意找一個目錄 1sudo npm install -g hexo-cli 就可以開始使用了 Putty(Optional)1yay -S putty 其實在Linux下Putty不是很需要,但是因為我會有ppk檔的使用需求所以還是加上會比較好(或是用比較傳統的方式把ssh-key放進console裡面也可以) 文書工作相關Typora1yay -S typora 這個是我用來寫Blog/Wiki用的主要工具,是個很好用的Markdown編輯器,記得搭配上picogo來上傳圖片 Onlyoffice1yay -S onlyoffice-desktopeditors 這是一個跟M$ Office相容性很高的免費Office程式,安裝後只有Word,Excel,Powerpoint相容程式可以用,本來想弄server版的但是一直沒成功就懶了 VM相關VMWare Workstation1yay -S vmware-workstation 沒什麼特別的,但是記得要去找SN不然不能用","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Manjaro","slug":"Linux/Manjaro","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Manjaro/"}],"tags":[{"name":"Linunx","slug":"Linunx","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linunx/"},{"name":"Manjaro","slug":"Manjaro","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Manjaro/"}]},{"title":"整合型Archlinux安裝Script - 1.Before Start","slug":"Linux/Arch Linux/1-intro","date":"2021-06-14T16:00:00.000Z","updated":"2021-07-12T03:11:22.827Z","comments":true,"path":"wiki/Linux/Arch Linux/1-intro/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Arch%20Linux/1-intro/","excerpt":"前言在Linux的世界裡,我最喜歡Arch系的系統,但是Arch Linux的安裝並不是很人性化所以我就想說自己寫script來進行安裝","text":"前言在Linux的世界裡,我最喜歡Arch系的系統,但是Arch Linux的安裝並不是很人性化所以我就想說自己寫script來進行安裝 適用範圍這是一個用在**VMware ESXi上的汎用型Arch linux**安裝script,基本預設條件如下 Intel CPU(Script裡面有AMD-ucode) 1~2GB的RAM 20GB以上的HDD空間 這個版本會做以下可選項目 *update 2021/06/15 因為搬回台灣用不上了所以刪除 Ver.K並不再維護該條目 Simple Arch linux 基本型Arch Linux,只安裝基本的系統工具 單NIC with固定MAC Address &amp; static IP Copy Live CD中的zsh設定 V2Ray Server Arch Linux with V2Ray without V2Ray 設定 單NIC with固定MAC Address &amp; Static IP Copy Live CD中的zsh設定 V2Ray Client Gateway Arch Linux with V2Ray without V2Ray 設定 無ipatable設定 雙NIC with固定MAC Address 外網可選PPPOE或Static IP 內網為固定IP Copy Live CD中的zsh設定 V2Ray Client Gateway Kiwi private version Arch Linux with V2Ray with現有Kiwi的相關設定(加密,私人使用) 直接套用Kiwi現有的iptable(加密,私人使用) 雙NIC with固定MAC Address 外網可選PPPOE或Static IP 內網為固定IP Copy Live CD中的zsh設定 Nextcloud Server(後面發現其實用docker比較快) Arch Linux With Nextcloud from package 單NIC with固定MAC Address &amp; Static IP Copy Live CD中的zsh設定 使用方式用LiveCD開機後,確認網路是好的的狀態下執行 1zsh &lt;(curl -L -s https://Kiwi0093.gitub.io/script/Arch/arch.sh) *牆國天朝會用DNS污染來擋 https://raw.githubusercontent.com/ 所以,若在牆內使用可以先設定好/etc/hosts看看是不是可以克服 *後來我都改用https://Kiwi0093.github.io這個web直接放我的Script 參考資料 Arch Wiki - 非常詳細的Arch Wiki幾乎所有Archlinux的設定都有相關說明,而且很多都有中文翻譯非常好用 Archlinux Install Guide - 這是中文的官方安裝說明文件,算是安裝的最基礎,實際上就是Arch Wiki的一部分 Miro’s Blog - 這份Archlinux的安裝筆記寫得很不錯","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Arch Linux","slug":"Linux/Arch-Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Arch-Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"Archlinux","slug":"Archlinux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Archlinux/"}]},{"title":"整合型Archlinux安裝Script - 3.arch.sh說明","slug":"Linux/Arch Linux/3-arch_sh","date":"2021-06-14T16:00:00.000Z","updated":"2021-07-12T03:11:22.827Z","comments":true,"path":"wiki/Linux/Arch Linux/3-arch_sh/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Arch%20Linux/3-arch_sh/","excerpt":"使用前 先確認用LiveCD開起來的系統有網路 用host raw.githubusercontent.com確認是否可以連上script,不行的話請設定/etc/hosts或DNS設定 Script的直接位置如下： https://Kiwi0093.github.io/script/Arch/arch.sh 可以手動設定網路(若網路沒有DCHP可以跑的話) 123#利用ip指令設定網路連線ip address add $YOUR_IP/24 dev $your_devip route add default $Gateway_IP dev $your_dev","text":"使用前 先確認用LiveCD開起來的系統有網路 用host raw.githubusercontent.com確認是否可以連上script,不行的話請設定/etc/hosts或DNS設定 Script的直接位置如下： https://Kiwi0093.github.io/script/Arch/arch.sh 可以手動設定網路(若網路沒有DCHP可以跑的話) 123#利用ip指令設定網路連線ip address add $YOUR_IP/24 dev $your_devip route add default $Gateway_IP dev $your_dev Script內容Script內容說明基本定義1234567891011#!/bin/sh#Parmeter Pre-Define#Color for warningCOLOR_W=&#x27;\\e[35m&#x27;#Color for descriptionCOLOR1=&#x27;\\e[94m&#x27;COLOR2=&#x27;\\e[32m&#x27;# Color for Highlight packageCOLOR_H1=&#x27;\\e[96m&#x27;COLOR_H2=&#x27;\\e[34m&#x27;NC=&#x27;\\e[0m&#x27; 這個script default只有顯示顏色是寫死的,可以參考Script語法說明裡面的說明修改顏色,或是自己修改的時候增加變數設定 *Update 2021/06/15 修改為四色,同Manjaro script 警示標語12345678#Notice before useecho -e &quot;$&#123;COLOR_W&#125;=====================Warning=======================\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Kiwi&#x27;s Arch linux Auto install script Ver.1.1 =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= This Script for Kiwi private use. =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= If you have any issue on usage, =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Please DON&#x27;T Feedback to Kiwi =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= And you should take your own responsibility =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;===================================================\\n$&#123;NC&#125;&quot; 同Manjaro script加上警示標語,並且加上版號管控 設定時區1234#start ntpecho -e &quot;$&#123;COLOR1&#125;Starting NTP Service$&#123;NC&#125;&quot;timedatectl set-ntp trueecho -e &quot;$&#123;COLOR2&#125;NTP Setup Completed$&#123;NC&#125;&quot; 設定Mirror list1234567891011121314151617181920212223#Modify Mirrorlist to setting countryecho -n &quot;$&#123;COLOR1&#125;Please Select the country you want to set for mirror list\\n$&#123;NC&#125;$&#123;COLOR_H1&#125;C)China\\nT)Taiwan\\n*)whatever..I don&#x27;t care\\n$&#123;NC&#125;&quot;while :do read COUNTRY case $COUNTRY in C) echo -e &quot;$&#123;COLOR2&#125;Set China$&#123;NC&#125;&quot; sed -i &#x27;/Score/&#123;/China/!&#123;n;s/^/#/&#125;&#125;&#x27; /etc/pacman.d/mirrorlist break ;; T) echo -e &quot;$&#123;COLOR2&#125;SetTaiwan$&#123;NC&#125;&quot; sed -i &#x27;/Score/&#123;/Taiwan/!&#123;n;s/^/#/&#125;&#125;&#x27; /etc/pacman.d/mirrorlist break ;; *) echo -e &quot;$&#123;COLOR2&#125;Keep original Setting$&#123;NC&#125;&quot; break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 由於Archlinux內建沒有pacman-mirrors指令可以使用,所以只能採用官方的方式用sed去處理/etc/pacman.d/mirrorlist達到設定mirror list的內容 後面加上的pacman -Syyu主要是用來更新mirror list的使用所下的指令 *Update 2021/06/15 選項全數加上顏色tag增加目視辨識度 Fdisk &amp; Mount123456789101112131415161718#Fdiskecho -e &quot;$&#123;COLOR1&#125;Partition your HDD please create sda1 for Data and sda2 for Swap.$&#123;NC&#125;&quot;fdisk /dev/sdaecho -e &quot;$&#123;COLOR2&#125;Partition Setup Completed$&#123;NC&#125;&quot;#Formatecho -e &quot;$&#123;COLOR1&#125;Format /dev/sda1 as EXT4 format$&#123;NC&#125;&quot;mkfs.ext4 /dev/sda1echo -e &quot;$&#123;COLOR2&#125;EXT4 formatting Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Format /dev/sda2 as Linux Swap$&#123;NC&#125;&quot;mkswap /dev/sda2echo -e &quot;$&#123;COLOR2&#125;Swap Formatting Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Mount /dev/sda1 to /mnt$&#123;NC&#125;&quot;mount /dev/sda1 /mntecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Mount Swap$&#123;NC&#125;&quot;swapon /dev/sda2echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 這裡是為什麼這個script無法成為萬用script的主要原因之一,因為這裡的**format**部份寫死了HDD分割後的定義與mount,使其失去彈性 加以因為所有使用這個script的場合都是在**VMware ESXi*下安裝Archlinux guest的關係,所以採用簡單的fdisk取代其他類型分割軟體,也是在這裡等於限死了後面的grub得安裝在MBR內而非現在流行的UFEI* script中採用最常見但是效率不是最好的ext4格式作為這個archlinux的系統格式,喜歡的話可以自己改成自己喜歡的方式進行 安裝12345678910111213141516171819202122232425262728293031323334353637383940414243444546#Installecho -e &quot;$&#123;COLOR1&#125;Starting Install Archlinux into /mnt$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Please select your CPU vendor and Linux Kernel you want:\\n$&#123;NC&#125;$&#123;COLOR_H1&#125;1)Intel+Linux\\n2)Intel+Linux-LTS\\n3)Amd+Linux\\n4)Amd+Linux-LTS\\n5)Linux-LTS Kernel\\n*)Whatever, Normal Linux Kernel is good enough to me\\n$&#123;NC&#125;&quot;while :do read CPU case $CPU in 1) echo -e &quot;$&#123;COLOR2&#125;Linux Kernel＋Intel$&#123;NC&#125;&quot; pacman -Syyu pacstrap /mnt base linux linux-firmware vim zsh curl netctl intel-ucode grub dnsutils open-vm-tools vim net-tools openssh break ;; 2) echo -e &quot;$&#123;COLOR2&#125;Linux-LTS Kernel＋Intel$&#123;NC&#125;&quot; pacman -Syyu pacstrap /mnt base linux-lts linux-firmware vim zsh curl netctl intel-ucode grub dnsutils open-vm-tools vim net-tools openssh break ;; 3) echo -e &quot;$&#123;COLOR2&#125;Linux Kernel＋Amd$&#123;NC&#125;&quot; pacman -Syyu pacstrap /mnt base linux linux-firmware vim zsh curl netctl amd-ucode grub dnsutils open-vm-tools vim net-tools openssh break ;; 4) echo -e &quot;$&#123;COLOR2&#125;Linux-LTS Kernel＋Amd$&#123;NC&#125;&quot; pacman -Syyu pacstrap /mnt base linux-lts linux-firmware vim zsh curl netctl amd-ucode grub dnsutils open-vm-tools vim net-tools openssh break ;; 5) echo -e &quot;$&#123;COLOR2&#125;Linux-LTS Kernel$&#123;NC&#125;&quot; pacman -Syyu pacstrap /mnt base linux-lts linux-firmware vim zsh curl netctl grub dnsutils open-vm-tools vim net-tools openssh break ;; *) echo -e &quot;$&#123;COLOR2&#125;Linux Kernel$&#123;NC&#125;&quot; pacman -Syyu pacstrap /mnt base linux linux-firmware vim zsh curl netctl grub dnsutils open-vm-tools vim net-tools openssh break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 因為這個安裝動作是在Live CD的系統內替HDD安裝package,所以不能用**pacman指令只能用pacstrap**指令package安裝到指定的位置去 pacstrap /&lt;location&gt; package1 package2 .... 我們可以利用這個指令把本來要到archchroot內才安裝的程式中的共用部份直接放在這裡直接跑就好了,目前還沒實驗過全部的程式都放在這個地方跑,但是應該部會影響systemd的運作 替新系統建立fstab1234#fstabecho -e &quot;$&#123;COLOR1&#125;Starting Gernerate fstab$&#123;NC&#125;&quot;genfstab -U -p /mnt &gt;&gt; /mnt/etc/fstabecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 因為Archlinux沒有一個所謂的安裝程式會在HDD分割後自動建立fstab到新系統內,所以會使用genfstab指令建立後直接送到HDD內的*/etc/*內 Copy zsh的設定到新系統1234#Copy Zshecho -e &quot;$&#123;COLOR1&#125;Starting Copy ZSH setting file to new Archlinux$&#123;NC&#125;&quot;cp -Rv /etc/zsh /mnt/etc/echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 因為我個人蠻喜歡Arch linux Live CD裡面預設的zshrc設定風格,所以就乾脆在安裝的時候會自動copy設定檔,以後所有透過這個安裝的Arch linux就可以有統一個shell sytle. 選擇fetch哪一個安裝script並且進入arch-root1234567891011121314151617181920212223242526272829303132echo -n &quot;$&#123;COLOR1&#125;Please select which type you want$&#123;NC&#125;$&#123;COLOR_H1&#125;\\na)Simple Server\\nb)Nextcloud Server\\nc)V2Ray Server\\nd)V2Ray Gateway\\n*)I&#x27;m the best! let me do by my own!!\\n$&#123;NC&#125;&quot;while :do read SCRIPT case $SCRIPT in a) echo -e &quot;$&#123;COLOR2&#125;Simple Arch Linux$&#123;NC&#125;&quot; arch-chroot /mnt /bin/zsh &lt;(curl -L -s https://Kiwi0093.github.io/script/simple_arch.sh) break ;; b) echo -e &quot;$&#123;COLOR2&#125;Nextcloud Server$&#123;NC&#125;&quot; arch-chroot /mnt /bin/zsh &lt;(curl -L -s https://Kiwi0093.github.io/script/nextc_arch.sh) break ;; c) echo -e &quot;$&#123;COLOR2&#125;V2Ray Server$&#123;NC&#125;&quot; arch-chroot /mnt /bin/zsh &lt;(curl -L -s https://Kiwi0093.github.io/script/arch_v2ray.sh) break ;; d) echo -e &quot;$&#123;COLOR2&#125;V2Ray Gateway$&#123;NC&#125;&quot; arch-chroot /mnt /bin/zsh &lt;(curl -L -s https://Kiwi0093.github.io/script/arch_v2ray_gate.sh) break ;; *) echo -e &quot;$&#123;COLOR2&#125;Yes! you&#x27;re the chosen one!$&#123;NC&#125;&quot; arch-root /mnt /bin/zsh break ;; esacdone 由於Arch linux的安裝邏輯是 先在Live CD的OS內對HDD進行處理,然後把透過網路把新的archlinux的系統裝進HDD內,然後chroot到新的系統內,利用新的系統的東西,進行初步的設定與啟動設定等動作,最後再完全退出重開改以HDD進行開機這樣算是完成了一個新的系統的安裝 所以做成選項自動在進入arch-chroot後執行該跑得script,或是空的進入arch-chroot後讓人自己處理 *Update 2021/06/15 刪除Kiwi’s Private Router選項,因為用不到了 進入Arch-chroot與離開後自動重開機12345echo -e &quot;$&#123;COLOR2&#125;Finished Installation, will reboot, Good luck$&#123;NC&#125;&quot;# Rebootecho -e &quot;$&#123;COLOR2&#125;Rebooting...$&#123;NC&#125;&quot;reboot 完整內容123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163#!/bin/sh#Parmeter Pre-Define#Color for warningCOLOR_W=&#x27;\\e[35m&#x27;#Color for descriptionCOLOR1=&#x27;\\e[94m&#x27;COLOR2=&#x27;\\e[32m&#x27;# Color for Highlight packageCOLOR_H1=&#x27;\\e[96m&#x27;COLOR_H2=&#x27;\\e[34m&#x27;NC=&#x27;\\e[0m&#x27;#Notice before useecho -e &quot;$&#123;COLOR_W&#125;=====================Warning=======================\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Kiwi&#x27;s Arch linux Auto install script Ver.1.1 =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= This Script for Kiwi private use. =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= If you have any issue on usage, =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Please DON&#x27;T Feedback to Kiwi =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= And you should take your own responsibility =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;===================================================\\n$&#123;NC&#125;&quot;#start ntpecho -e &quot;$&#123;COLOR1&#125;Starting NTP Service$&#123;NC&#125;&quot;timedatectl set-ntp trueecho -e &quot;$&#123;COLOR2&#125;NTP Setup Completed$&#123;NC&#125;&quot;#Modify Mirrorlist to setting countryecho -n &quot;$&#123;COLOR1&#125;Please Select the country you want to set for mirror list\\n$&#123;NC&#125;$&#123;COLOR_H1&#125;C)China\\nT)Taiwan\\n*)whatever..I don&#x27;t care\\n$&#123;NC&#125;&quot;while :do read COUNTRY case $COUNTRY in C) echo -e &quot;$&#123;COLOR2&#125;Set China$&#123;NC&#125;&quot; sed -i &#x27;/Score/&#123;/China/!&#123;n;s/^/#/&#125;&#125;&#x27; /etc/pacman.d/mirrorlist break ;; T) echo -e &quot;$&#123;COLOR2&#125;SetTaiwan$&#123;NC&#125;&quot; sed -i &#x27;/Score/&#123;/Taiwan/!&#123;n;s/^/#/&#125;&#125;&#x27; /etc/pacman.d/mirrorlist break ;; *) echo -e &quot;$&#123;COLOR2&#125;Keep original Setting$&#123;NC&#125;&quot; break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#Fdiskecho -e &quot;$&#123;COLOR1&#125;Partition your HDD please create sda1 for Data and sda2 for Swap.$&#123;NC&#125;&quot;fdisk /dev/sdaecho -e &quot;$&#123;COLOR2&#125;Partition Setup Completed$&#123;NC&#125;&quot;#Formatecho -e &quot;$&#123;COLOR1&#125;Format /dev/sda1 as EXT4 format$&#123;NC&#125;&quot;mkfs.ext4 /dev/sda1echo -e &quot;$&#123;COLOR2&#125;EXT4 formatting Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Format /dev/sda2 as Linux Swap$&#123;NC&#125;&quot;mkswap /dev/sda2echo -e &quot;$&#123;COLOR2&#125;Swap Formatting Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Mount /dev/sda1 to /mnt$&#123;NC&#125;&quot;mount /dev/sda1 /mntecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Mount Swap$&#123;NC&#125;&quot;swapon /dev/sda2echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#Installecho -e &quot;$&#123;COLOR1&#125;Starting Install Archlinux into /mnt$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Please select your CPU vendor and Linux Kernel you want:\\n$&#123;NC&#125;$&#123;COLOR_H1&#125;1)Intel+Linux\\n2)Intel+Linux-LTS\\n3)Amd+Linux\\n4)Amd+Linux-LTS\\n5)Linux-LTS Kernel\\n*)Whatever, Normal Linux Kernel is good enough to me\\n$&#123;NC&#125;&quot;while :do read CPU case $CPU in 1) echo -e &quot;$&#123;COLOR2&#125;Linux Kernel＋Intel$&#123;NC&#125;&quot; pacman -Syyu pacstrap /mnt base linux linux-firmware vim zsh curl netctl intel-ucode grub dnsutils open-vm-tools vim net-tools openssh break ;; 2) echo -e &quot;$&#123;COLOR2&#125;Linux-LTS Kernel＋Intel$&#123;NC&#125;&quot; pacman -Syyu pacstrap /mnt base linux-lts linux-firmware vim zsh curl netctl intel-ucode grub dnsutils open-vm-tools vim net-tools openssh break ;; 3) echo -e &quot;$&#123;COLOR2&#125;Linux Kernel＋Amd$&#123;NC&#125;&quot; pacman -Syyu pacstrap /mnt base linux linux-firmware vim zsh curl netctl amd-ucode grub dnsutils open-vm-tools vim net-tools openssh break ;; 4) echo -e &quot;$&#123;COLOR2&#125;Linux-LTS Kernel＋Amd$&#123;NC&#125;&quot; pacman -Syyu pacstrap /mnt base linux-lts linux-firmware vim zsh curl netctl amd-ucode grub dnsutils open-vm-tools vim net-tools openssh break ;; 5) echo -e &quot;$&#123;COLOR2&#125;Linux-LTS Kernel$&#123;NC&#125;&quot; pacman -Syyu pacstrap /mnt base linux-lts linux-firmware vim zsh curl netctl grub dnsutils open-vm-tools vim net-tools openssh break ;; *) echo -e &quot;$&#123;COLOR2&#125;Linux Kernel$&#123;NC&#125;&quot; pacman -Syyu pacstrap /mnt base linux linux-firmware vim zsh curl netctl grub dnsutils open-vm-tools vim net-tools openssh break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#fstabecho &quot;$&#123;COLOR1&#125;Starting Gernerate fstab$&#123;NC&#125;&quot;genfstab -U -p /mnt &gt;&gt; /mnt/etc/fstabecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#Copy Zshecho &quot;$&#123;COLOR1&#125;Starting Copy ZSH setting file to new Archlinux$&#123;NC&#125;&quot;cp -Rv /etc/zsh /mnt/etc/echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -n &quot;$&#123;COLOR1&#125;Please select which type you want$&#123;NC&#125;$&#123;COLOR_H1&#125;\\na)Simple Server\\nb)Nextcloud Server\\nc)V2Ray Server\\nd)V2Ray Gateway\\n*)I&#x27;m the best! let me do by my own!!\\n$&#123;NC&#125;&quot;while :do read SCRIPT case $SCRIPT in a) echo -e &quot;$&#123;COLOR2&#125;Simple Arch Linux$&#123;NC&#125;&quot; arch-chroot /mnt /bin/zsh &lt;(curl -L -s https://Kiwi0093.github.io/script/simple_arch.sh) break ;; b) echo -e &quot;$&#123;COLOR2&#125;Nextcloud Server$&#123;NC&#125;&quot; arch-chroot /mnt /bin/zsh &lt;(curl -L -s https://Kiwi0093.github.io/script/nextc_arch.sh) break ;; c) echo -e &quot;$&#123;COLOR2&#125;V2Ray Server$&#123;NC&#125;&quot; arch-chroot /mnt /bin/zsh &lt;(curl -L -s https://Kiwi0093.github.io/script/arch_v2ray.sh) break ;; d) echo -e &quot;$&#123;COLOR2&#125;V2Ray Gateway$&#123;NC&#125;&quot; arch-chroot /mnt /bin/zsh &lt;(curl -L -s https://Kiwi0093.github.io/script/arch_v2ray_gate.sh) break ;; *) echo -e &quot;$&#123;COLOR2&#125;Yes! you&#x27;re the chosen one!$&#123;NC&#125;&quot; arch-root /mnt /bin/zsh break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;Finished Installation, will reboot, Good luck$&#123;NC&#125;&quot;# Rebootecho -e &quot;$&#123;COLOR2&#125;Rebooting...$&#123;NC&#125;&quot;reboot","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Arch Linux","slug":"Linux/Arch-Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Arch-Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"Archlinux","slug":"Archlinux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Archlinux/"}]},{"title":"整合型Archlinux安裝Script - 4.simple_arch.sh說明","slug":"Linux/Arch Linux/4-simple_arch","date":"2021-06-14T16:00:00.000Z","updated":"2021-07-12T03:11:22.827Z","comments":true,"path":"wiki/Linux/Arch Linux/4-simple_arch/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Arch%20Linux/4-simple_arch/","excerpt":"使用前 這個script預設是自動帶出來跑的,但是也是可以手動自己跑 Script的直接位置如下： https://Kiwi0093.github.io/script/Arch/simple_arch.sh","text":"使用前 這個script預設是自動帶出來跑的,但是也是可以手動自己跑 Script的直接位置如下： https://Kiwi0093.github.io/script/Arch/simple_arch.sh Script內容Script內容說明基本定義1234567891011#!/bin/sh#Parmeter Pre-Define#Color for warningCOLOR_W=&#x27;\\e[35m&#x27;#Color for descriptionCOLOR1=&#x27;\\e[94m&#x27;COLOR2=&#x27;\\e[32m&#x27;# Color for Highlight packageCOLOR_H1=&#x27;\\e[96m&#x27;COLOR_H2=&#x27;\\e[34m&#x27;NC=&#x27;\\e[0m&#x27; 定義Script中字串的顏色 *Update 2021/06/15 統一改為四色 增加警語123456789#Notice before useecho -e &quot;$&#123;COLOR_W&#125;=====================Warning=======================\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Kiwi&#x27;s Arch linux Auto install script Ver.1.1 =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Simple Arch linus Install script Ver.1.1 =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= This Script for Kiwi private use. =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= If you have any issue on usage, =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Please DON&#x27;T Feedback to Kiwi =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= And you should take your own responsibility =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;===================================================\\n$&#123;NC&#125;&quot; 設定時區與硬體時間1234567891011121314151617181920212223242526#change Timezoneecho -e &quot;$&#123;COLOR1&#125;Please select your time zone\\n$&#123;NC&#125;$&#123;COLOR_H1&#125;1)Taipei\\n2)Shanghai\\n*)Whatever..I don&#x27;t care\\n$&#123;NC&#125;&quot;while :do read ZONE case $ZONE in 1) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Taipei$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime hwclock --systohc --utc break ;; 2) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Shanghai$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime hwclock --systohc --utc break ;; *) echo -e &quot;$&#123;COLOR1&#125;Nobody cares the local time!!$&#123;NC&#125;&quot; hwclock --systohc --utc break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 設定Locale確認terminal是UTF8(不然Tmux不能動)12345678910#locale-gen to add en_US &amp; zh_TWecho -e &quot;$&#123;COLOR1&#125;Setting local file$&#123;NC&#125;&quot;echo &quot;en_US.UTF-8 UTF-8&quot; &gt;&gt; /etc/locale.genecho &quot;zh_TW.UTF-8 UTF-8&quot; &gt;&gt; /etc/locale.genecho -e &quot;$&#123;COLOR1&#125;Generate locale.conf$&#123;NC&#125;&quot;locale-genecho -e &quot;$&#123;COLOR1&#125;Setting locale.conf$&#123;NC&#125;&quot;echo LANG=en_US.UTF-8 &gt; /etc/locale.confexport LANG=en_US.UTF-8echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 網路設定123456789101112131415161718192021222324252627282930#Hostnameecho -e &quot;$&#123;COLOR1&#125;Please input your hostname\\n$&#123;NC&#125;&quot;read HOSTNAMEecho $&#123;HOSTNAME&#125; &gt; /etc/hostnameecho &quot;127.0.0.1 localhost $&#123;HOSTNAME&#125;&quot; &gt;&gt; /etc/hostsecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Define your NIC by Mac address$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Please input your MAC Address(need to be lowcase):\\n$&#123;NC&#125;&quot;read OUTSIDEecho &#x27;SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, ATTR&#123;address&#125;==&quot;&#x27;$&#123;OUTSIDE&#125;&#x27;&quot;, NAME=&quot;EXT0&quot;&#x27; &gt; /etc/udev/rules.d/10-network.rulesecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Define your IP for EXT0:$&#123;NC&#125;&quot;echo &quot;Description=&#x27;EXT0 IP SETTING&#x27;&quot; &gt; /etc/netctl/EXT0.serviceecho &quot;Interface=EXT0&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho &quot;Connection=ethernet&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho &quot;IP=static&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your IP address:\\n$&#123;NC&#125;&quot;read EXT_IPecho &quot;Address=(&#x27;$&#123;EXT_IP&#125;/24&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your Gateway IP address:\\n$&#123;NC&#125;&quot;read GATE_IPecho &quot;Gateway=&#x27;$&#123;GATE_IP&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your DNS IP address:\\n$&#123;NC&#125;&quot;read DNS_IPecho &quot;DNS=(&#x27;$&#123;DNS_IP&#125;&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -e &quot;$&#123;COLOR2&#125;Enable EXT0$&#123;NC&#125;&quot;netctl enable EXT0.serviceecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot; 這個設定是利用固定的**Mac Address來定義NIC Interface的名字為EXT0** MAC address記得要用全小寫不然會有問題 這個設定是使用netctl進行的 變更root密碼與建立其他帳號123456789101112131415161718#Root Passwordecho -e &quot;$&#123;COLOR1&#125;Set your root password$&#123;NC&#125;&quot;passwdchsh -s /bin/zshecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#add Userecho -e &quot;$&#123;COLOR1&#125;Add user account:$&#123;NC&#125;&quot;echo -n &quot;$&#123;COLOR1&#125;What ID you want:$&#123;NC&#125;&quot;read YOURIDuseradd -m -g root -s /bin/zsh $&#123;YOURID&#125;passwd $&#123;YOURID&#125;echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Add $YOURID into sudo list$&#123;NC&#125;&quot;pacman -Syu sudoecho &quot;$&#123;YOURID&#125; ALL=(ALL) ALL&quot; &gt;&gt; /etc/sudoersecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 安裝程式12345#install Toolsecho -e &quot;$&#123;COLOR1&#125;Install Packages$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;screen$&#123;NC&#125;&quot;pacman -Sy screenecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 因為是Simple Arch,所以預設只裝了screen 安裝Bootloader12345#install Bootloaderecho -e &quot;$&#123;COLOR1&#125;Install grub Boot Loader into /dev/sda$&#123;NC&#125;&quot;grub-install --target=i386-pc /dev/sdagrub-mkconfig -o /boot/grub/grub.cfgecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 同步後離開Arch-chroot12345#Finished installsyncsyncsyncexit 完整版的script123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127#!/bin/sh#Parmeter Pre-Define#Color for warningCOLOR_W=&#x27;\\e[35m&#x27;#Color for descriptionCOLOR1=&#x27;\\e[94m&#x27;COLOR2=&#x27;\\e[32m&#x27;# Color for Highlight packageCOLOR_H1=&#x27;\\e[96m&#x27;COLOR_H2=&#x27;\\e[34m&#x27;NC=&#x27;\\e[0m&#x27;#Notice before useecho -e &quot;$&#123;COLOR_W&#125;=====================Warning=======================\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Kiwi&#x27;s Arch linux Auto install script Ver.1.1 =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Simple Arch linus Install script Ver.1.1 =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= This Script for Kiwi private use. =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= If you have any issue on usage, =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Please DON&#x27;T Feedback to Kiwi =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= And you should take your own responsibility =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;===================================================\\n$&#123;NC&#125;&quot;#change Timezoneecho -e &quot;$&#123;COLOR1&#125;Please select your time zone\\n$&#123;NC&#125;$&#123;COLOR_H1&#125;1)Taipei\\n2)Shanghai\\n*)Whatever..I don&#x27;t care\\n$&#123;NC&#125;&quot;while :do read ZONE case $ZONE in 1) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Taipei$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime hwclock --systohc --utc break ;; 2) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Shanghai$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime hwclock --systohc --utc break ;; *) echo -e &quot;$&#123;COLOR1&#125;Nobody cares the local time!!$&#123;NC&#125;&quot; hwclock --systohc --utc break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#locale-gen to add en_US &amp; zh_TWecho -e &quot;$&#123;COLOR1&#125;Setting local file$&#123;NC&#125;&quot;echo &quot;en_US.UTF-8 UTF-8&quot; &gt;&gt; /etc/locale.genecho &quot;zh_TW.UTF-8 UTF-8&quot; &gt;&gt; /etc/locale.genecho -e &quot;$&#123;COLOR1&#125;Generate locale.conf$&#123;NC&#125;&quot;locale-genecho -e &quot;$&#123;COLOR1&#125;Setting locale.conf$&#123;NC&#125;&quot;echo LANG=en_US.UTF-8 &gt; /etc/locale.confexport LANG=en_US.UTF-8echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#Hostnameecho -e &quot;$&#123;COLOR1&#125;Please input your hostname\\n$&#123;NC&#125;&quot;read HOSTNAMEecho $&#123;HOSTNAME&#125; &gt; /etc/hostnameecho &quot;127.0.0.1 localhost $&#123;HOSTNAME&#125;&quot; &gt;&gt; /etc/hostsecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Define your NIC by Mac address$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Please input your MAC Address(need to be lowcase):\\n$&#123;NC&#125;&quot;read OUTSIDEecho &#x27;SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, ATTR&#123;address&#125;==&quot;&#x27;$&#123;OUTSIDE&#125;&#x27;&quot;, NAME=&quot;EXT0&quot;&#x27; &gt; /etc/udev/rules.d/10-network.rulesecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Define your IP for EXT0:$&#123;NC&#125;&quot;echo &quot;Description=&#x27;EXT0 IP SETTING&#x27;&quot; &gt; /etc/netctl/EXT0.serviceecho &quot;Interface=EXT0&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho &quot;Connection=ethernet&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho &quot;IP=static&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your IP address:\\n$&#123;NC&#125;&quot;read EXT_IPecho &quot;Address=(&#x27;$&#123;EXT_IP&#125;/24&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your Gateway IP address:\\n$&#123;NC&#125;&quot;read GATE_IPecho &quot;Gateway=&#x27;$&#123;GATE_IP&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your DNS IP address:\\n$&#123;NC&#125;&quot;read DNS_IPecho &quot;DNS=(&#x27;$&#123;DNS_IP&#125;&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -e &quot;$&#123;COLOR2&#125;Enable EXT0$&#123;NC&#125;&quot;netctl enable EXT0.serviceecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot;#Root Passwordecho -e &quot;$&#123;COLOR1&#125;Set your root password$&#123;NC&#125;&quot;passwdchsh -s /bin/zshecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#add Userecho -e &quot;$&#123;COLOR1&#125;Add user account:$&#123;NC&#125;&quot;echo -n &quot;$&#123;COLOR1&#125;What ID you want:$&#123;NC&#125;&quot;read YOURIDuseradd -m -g root -s /bin/zsh $&#123;YOURID&#125;passwd $&#123;YOURID&#125;echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Add $YOURID into sudo list$&#123;NC&#125;&quot;pacman -Syu sudoecho &quot;$&#123;YOURID&#125; ALL=(ALL) ALL&quot; &gt;&gt; /etc/sudoersecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#install Toolsecho -e &quot;$&#123;COLOR1&#125;Install Packages$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;tmux$&#123;NC&#125;&quot;pacman -Syu tmuxecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#install Bootloaderecho -e &quot;$&#123;COLOR1&#125;Install grub Boot Loader into /dev/sda$&#123;NC&#125;&quot;grub-install --target=i386-pc /dev/sdagrub-mkconfig -o /boot/grub/grub.cfgecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#Finished installsyncsyncsyncexit","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Arch Linux","slug":"Linux/Arch-Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Arch-Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"Archlinux","slug":"Archlinux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Archlinux/"}]},{"title":"BATTLETECH - Mod武器修改技巧","slug":"Game/PC/Battletech/1-weapon_modify","date":"2021-05-18T16:00:00.000Z","updated":"2021-07-12T03:11:22.827Z","comments":true,"path":"wiki/Game/PC/Battletech/1-weapon_modify/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Game/PC/Battletech/1-weapon_modify/","excerpt":"Mod這個遊戲的Mod在Nexus mods裡面就有","text":"Mod這個遊戲的Mod在Nexus mods裡面就有 Modify 修改武器參數,可隨意複製後修改 改入商店作法 使用Save Editor直接修改入Save檔套用 複製武器/裝備 檔名不能重複,可直接複製想要的類型後加**_數字** 修改檔案 武器設定檔是json檔案,用notepad++ 範例如下 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768&#123; &quot;Category&quot; : &quot;Ballistic&quot;, --類型 &quot;Type&quot; : &quot;Autocannon&quot;, &quot;WeaponSubType&quot; : &quot;UAC20&quot;, &quot;MinRange&quot; : 0, --最短有效距離 &quot;MaxRange&quot; : 400, --最長有效距離 &quot;RangeSplit&quot; : [ 180, 180, 270 ], &quot;AmmoCategory&quot; : &quot;AC20&quot;, --彈藥類型 &quot;StartingAmmoCapacity&quot; : 0, --初始彈藥量 &quot;HeatGenerated&quot; : 48, --熱量 &quot;Damage&quot; : 200, --傷害 &quot;OverheatedDamageMultiplier&quot; : 0, &quot;EvasiveDamageMultiplier&quot; : 0, &quot;EvasivePipsIgnored&quot; : 0, &quot;DamageVariance&quot; : 0, &quot;HeatDamage&quot; : 0, &quot;StructureDamage&quot; : 0, &quot;AccuracyModifier&quot; : 0, &quot;CriticalChanceMultiplier&quot; : 1, &quot;AOECapable&quot; : false, &quot;IndirectFireCapable&quot; : false, &quot;RefireModifier&quot; : 0, &quot;ShotsWhenFired&quot; : 10, &quot;ProjectilesPerShot&quot; : 3, --每次開槍會有幾顆子彈 &quot;AttackRecoil&quot; : 4, --後座力 &quot;Instability&quot; : 1, --不穩定性 &quot;WeaponEffectID&quot; : &quot;WeaponEffect-Weapon_AC20_Ultra&quot;, &quot;Description&quot; : &#123; &quot;Cost&quot; : 650000, &quot;Rarity&quot; : 99, &quot;Purchasable&quot; : true, &quot;Manufacturer&quot; : &quot;Kiwi Tech&quot;, --顯示的製造商可以任意修改 &quot;Model&quot; : &quot;Shredder Autocannon&quot;, &quot;UIName&quot; : &quot;UAC/20 Ver.K&quot;, --顯示的武器名稱 &quot;Id&quot; : &quot;Weapon_Autocannon_UAC20_4-Kali_Yama&quot;, --這個要同檔名 &quot;Name&quot; : &quot;UAC/20 Ver.K&quot;, --同UIName &quot;Details&quot; : &quot;Delivering unparalleled damage output, Ultra AC/20s issue nightmarish volleys of devastation. Like all Ultra Autocannon weaponry, UAC/20s suffer from substantial recoil effects from firing and consume two ammo per attack.&quot;, --細項可以任意編輯 &quot;Icon&quot; : &quot;uixSvgIcon_weapon_Ballistic&quot; &#125;, &quot;BonusValueA&quot; : &quot;+ 50 Dmg.&quot;, --額外效果 &quot;BonusValueB&quot; : &quot;- 3000 Heat / Turn&quot;, --額外效果 &quot;ComponentType&quot; : &quot;Weapon&quot;, &quot;ComponentSubType&quot; : &quot;Weapon&quot;, &quot;PrefabIdentifier&quot; : &quot;uac5&quot;, &quot;InventorySize&quot; : 1, --佔多少格子 &quot;Tonnage&quot; : 20, --裝備重量 &quot;AllowedLocations&quot; : &quot;All&quot;, &quot;DisallowedLocations&quot; : &quot;All&quot;, &quot;CriticalComponent&quot; : false, &quot;statusEffects&quot; : [ ], &quot;ComponentTags&quot; : &#123; &quot;items&quot; : [ &quot;component_type_variant&quot;, &quot;component_type_variant2&quot;, &quot;range_standard&quot;, &quot;component_type_lostech&quot;, &quot;BLACKLISTED&quot; ], &quot;tagSetSourceFile&quot; : &quot;&quot; &#125;&#125; Save Editor使用這個mod","categories":[{"name":"Game","slug":"Game","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Game/"},{"name":"PC","slug":"Game/PC","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Game/PC/"},{"name":"Battletech","slug":"Game/PC/Battletech","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Game/PC/Battletech/"}],"tags":[{"name":"Game","slug":"Game","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Game/"},{"name":"PC-Game","slug":"PC-Game","permalink":"http://kiwi0093.github.io/Wiki-site/tags/PC-Game/"},{"name":"SLG","slug":"SLG","permalink":"http://kiwi0093.github.io/Wiki-site/tags/SLG/"}]},{"title":"Manajro Auto configure script - Intro","slug":"Linux/Manjaro/1-autoinstall","date":"2020-12-24T16:00:00.000Z","updated":"2021-07-12T03:11:22.833Z","comments":true,"path":"wiki/Linux/Manjaro/1-autoinstall/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Manjaro/1-autoinstall/","excerpt":"前言老實說這個script的實用性不是很高,充其量是拿來恢復自己使用的Manjaro-KDE,即使如此,後來還是發現因為會改來改去,可能後面拆成多個小的script還比較實在","text":"前言老實說這個script的實用性不是很高,充其量是拿來恢復自己使用的Manjaro-KDE,即使如此,後來還是發現因為會改來改去,可能後面拆成多個小的script還比較實在 基本介紹使用指令1bash &lt;(curl -L https://Kiwi0093.github.io/script/Manajro/manjaro.sh) 這裡還是使用萬用的shell &lt;(Curl -L URL/script)語法來跑,試過改用curl -L URL/script | shell來跑的結果就是script中的一些等待輸入都會有問題,詳細細節我也不是懂為什麼,反正就是盡量不要用pipe去跑shell script比較不會有問題 內容介紹這個script的內容主要是讓我可以快速的把自己在用的Manjro環境快速的port到新裝的機器或是VM上,減少重複設定調整工作環境的作業,這份主要會先說明整體會裝上什麼跟會產生什麼,詳細的script後面會分段來說明 Terminator : 一個console程式支援分頁使用,上次看到Garuda裡面用的terminal看起來也蠻好看的若有找到其他更順手的會把他換掉 PowerLevel10k : 這個基本上就是個terminal美化工具,但是在企鵝下使用terminal的機率那麼高弄的漂漂亮亮的賞心悅目不好嗎？,基本就是powerlevel10k加上一些nerd font,最多還會在加個neofetch V2ray系列 : 因為身在牆國天朝所以這個變成必裝的程式(其實在只在宿舍內使用的機器到是可以不裝因為已經在gateway處理掉了)主要是裝Qv2ray跟V2ray用圖形界面來控制 ‘*’其實要再更Nerdy一點的話可以拋棄圖形界面只用單純的v2ray+config.json搭配systemed來跑也是可以的…不過Desktop嘛…還是弄個GUI比較應景 不過這幾次試跑都發現安裝Qv2ray很浪費時間…還常常error…可能再多幾次讓我沒耐心了就會拿掉(或是做成選項！？) Rambox : 作為一個有朋友的人(這個毋庸置疑…),我還是會需要一些IM,以及Mail的client,Rambox目前算是用起來很順的整合型界面,(YES,他只是整合了各種web界面的東西) Brave : 因為我不是那麼喜歡firefox所以會改用Brave Blog/Wiki寫作系列 : 這裡面包含了Typora - 我目前最喜歡的Markdown編輯器, Git &amp; Github-Desktop - 我知道其實CLI的git就應該夠用了,但是GUI的Githhub-Desktop其實也是很好用的尤其是沒有把git的CLI指令弄的那麼熟的我來說…,另外還要加上Typora上傳圖片需要的Picgo Putty : 其實某程度上直接使用terminal來跑ssh client是比Linux版的Putty好用的,但是這樣pkk的key就沒辦法直接用,加上要開ssh tunel的話還是寫好設定的Putty比較方便所以我都會裝上但是大概只有連回老家的時候才會用 Remmina : 這個其實還要裝上freerdp才能直接跑rdp,我基本上都是用這玩意+ssh tunel連回老家的P2P windows Filezilla : 其實這個東西現在已經沒什麼用了,因為還會採取FTP/SFTP傳輸的事情少了…但是還是會習慣性的裝上以備不時之需 gnome-pie : 這個是個Launcher,但是看起來很炫所以我現在很喜歡會放在必安裝的清單中使用 fcitx系列 : 作為一個非英語母語的人,我絕對需要非英語的輸入法…所以我一般會用這個裝上chewing(酷音)以及Mozc來應付我的中日文打字需求… teamviewer : 其實我沒有很常用teamviewer,只是會習慣性裝上以備不時之需 VMware Workstation pro (optional) : 這個我做成選項,因為我有些機器是裝在VM裡面的就不搞VM中的VM這種把戲了… KDE 個人趣味小東西 (optional) ： 這個其實就是安裝一些Widget或是開機動畫等…後面可能會連多重開機的主題都放進去…. 結論雖然一開始是我自己用的私人script,不過我還是會盡量寫成可以通用(沒什麼意義就是了),然後把個人色彩很強的東西盡量都做成optional","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Manjaro","slug":"Linux/Manjaro","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Manjaro/"}],"tags":[{"name":"Linunx","slug":"Linunx","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linunx/"},{"name":"Manjaro","slug":"Manjaro","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Manjaro/"}]},{"title":"Manajro Auto configure script - script","slug":"Linux/Manjaro/2-Installscript","date":"2020-12-24T16:00:00.000Z","updated":"2021-07-12T03:11:22.833Z","comments":true,"path":"wiki/Linux/Manjaro/2-Installscript/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Manjaro/2-Installscript/","excerpt":"前言這個script就跟自動安裝一樣其實用處不大,主要還是拿來當作shell script的寫作練習","text":"前言這個script就跟自動安裝一樣其實用處不大,主要還是拿來當作shell script的寫作練習 基本定義與警告1234567891011121314151617181920#!/bin/sh#Parmeter Pre-Define#Color for warningCOLOR_W=&#x27;\\e[35m&#x27;#Color for descriptionCOLOR1=&#x27;\\e[94m&#x27;COLOR2=&#x27;\\e[32m&#x27;# Color for Highlight packageCOLOR_H1=&#x27;\\e[96m&#x27;COLOR_H2=&#x27;\\e[34m&#x27;NC=&#x27;\\e[0m&#x27;clear#Notice before useecho -e &quot;$&#123;COLOR_W&#125;=====================Warning=====================\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= This Script for Kiwi private use. =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= If you have any issue on usage, =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Please DON&#x27;T Feedback to Kiwi =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= And you should take your own responsibility =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;=================================================\\n$&#123;NC&#125;&quot; 這次我把顏色分成五種(很厚工吧),然後加上一個警告標語在最前面,我想後面應該會把所有的script都重新以這個表頭開始重寫,這樣看起來比較像一回事 Mirrorlist定義與套用(加上系統更新)12345678910111213141516171819202122232425262728293031323334353637# Choose Country for pacman-mirrorsecho -e &quot;$&#123;COLOR1&#125;Please choose the loaction you want to set for Mirror\\n $&#123;COLOR_H&#125;C) China\\n T) Taiwan\\n L) Let me type what I want\\n F) Fastest Mirror from all country\\n Any other) Use Manjaro Default\\n &gt;$&#123;NC&#125;&quot;while :do read COUNTRY case $COUNTRY in C) echo -e &quot;$&#123;COLOR2&#125;Using China Mirrors$&#123;NC&#125;&quot; sudo pacman-mirrors -c China break ;; T) echo -e &quot;$&#123;COLOR2&#125;Using Taiwan Mirrors$&#123;NC&#125;&quot; sudo pacman-mirrors -c Taiwan break ;; L) echo -e &quot;$&#123;COLOR2&#125;Please input coutry you want (ie:United_States)\\n$&#123;NC&#125;&quot; read COUNTRY_INPUT sudo pacman-mirrors -c $COUNTRY_INPUT break ;; F) echo -e &quot;$&#123;COLOR2&#125;Use All Country for Fastest Mirror$&#123;NC&#125;&quot; sudo pacman-mirrors --fasttrack 3 break ;; *) echo -e &quot;$&#123;COLOR2&#125;Use Default setting$&#123;NC&#125;&quot; break ;; esacdone# Apply Mirrorlist and update systemecho -e &quot;$&#123;COLOR1&#125;Update your system$&#123;NC&#125;&quot;sudo pacman -Syyu 由於Manjaro有pacman-mirrors可以用,所以就跟**Arch Linux**的Script不同可以直接用指令,這裡我還加上了四種選項 牆國天朝(現在物理上待在這裡所以肯定要有這個選項) 台灣(畢竟是老家還是放一下) 自己輸入(這算是要是有要用的其他人可以靠手打或是我有時候手賤…) 依照速度排序全世界前三快的機器,(理論上這個最好,不用分國家,但是..一套跑下來很耗時間…) 使用原來的設定啥都不改 接著就是一個單純的sudo pacman -Syyu利用-Syy更新Mirrorlist,就算不想upgrade系統也得跑一下sudo pacman -Syy不然前面弄mirrorlist弄半天就是浪費時間 安裝基本軟體123# Install Basic toolsecho -e &quot;$&#123;COLOR1&#125;Install Packages$&#123;NC&#125;&quot;sudo pacman -S --noconfirm yay gcc make patch fakeroot binutils neofetch vim terminator pkgconf fcitx fcitx-qt5 fcitx-configtool fcitx-chewing fcitx-mozc zsh zsh-syntax-highlighting zsh-autosuggestions zsh-theme-powerlevel10k awesome-terminal-fonts v2ray putty filezilla remmina freerdp git 如同簡介說的我會把一些常用的東西都裝上會放在這個secssion主要是因為這些都是直接用sudo pacman就可以很快裝上的東西 安裝**ttf-meslo-nerd-font-powerlevel10k**123456789101112131415161718192021222324252627282930313233echo -e &quot;$&#123;COLOR1&#125;Do you need pre-download ttf files for $&#123;COLOR_H2&#125;ttf-meslo-nerd-font-powerlevel10k$&#123;NC&#125;\\n $&#123;COLOR_H1&#125;Y) Yes\\n N) No need.\\n &gt;$&#123;NC&#125;&quot;while :do read TTF case $TTF in Y) echo -e &quot;$&#123;COLOR2&#125;Download TTF files for install Issue$&#123;NC&#125;&quot; mkdir ~/.cache/yay/ttf-meslo-nerd-font-powerlevel10k curl -o ~/.cache/yay/ttf-meslo-nerd-font-powerlevel10k/MesloLGS-NF-Bold-1.000.ttf https://Kiwi0093.github.io/script/Manjaro/MesloLGS-NF-Bold-1.000.ttf curl -o ~/.cache/yay/ttf-meslo-nerd-font-powerlevel10k/MesloLGS-NF-Bold-Italic-1.000.ttf https://Kiwi0093.github.io/script/Manjaro/MesloLGS-NF-Bold-Italic-1.000.ttf curl -o ~/.cache/yay/ttf-meslo-nerd-font-powerlevel10k/MesloLGS-NF-Italic-1.000.ttf https://Kiwi0093.github.io/script/Manjaro/MesloLGS-NF-Italic-1.000.ttf curl -o ~/.cache/yay/ttf-meslo-nerd-font-powerlevel10k/MesloLGS-NF-Regular-1.000.ttf https://Kiwi0093.github.io/script/Manjaro/MesloLGS-NF-Regular-1.000.ttf yay -S --noconfirm ttf-meslo-nerd-font-powerlevel10k # Download Zeon.ttf &amp; Install echo -e &quot;$&#123;COLOR2&#125;Download &amp; Install Zeon font for Zeon Icon$&#123;NC&#125;&quot; sudo mkdir /usr/local/share/fonts/z sudo curl -o /usr/local/share/fonts/z/zeon.ttf https://Kiwi0093.github.io/script/Manjaro/zeon.ttf break ;; N) echo -e &quot;$&#123;COLOR2&#125;Normal Installation$&#123;NC&#125;&quot; yay -S --noconfirm ttf-meslo-nerd-font-powerlevel10k # Download Zeon.ttf &amp; Install echo -e &quot;$&#123;COLOR2&#125;Download &amp; Install Zeon font for Zeon Icon$&#123;NC&#125;&quot; sudo mkdir /usr/local/share/fonts/z sudo curl -o /usr/local/share/fonts/z/zeon.ttf https://Kiwi0093.github.io/script/Manjaro/zeon.ttf break ;; *) echo -e &quot;$&#123;COLOR_H1&#125;Please enter your choice Y or A or N$&#123;NC&#125;&quot; ;; esacdone 本來是很簡單的yay -S ttf-meslo-nerd-font-powerlevel10k就該搞定的,但是由於牆國天朝的網路特殊性很容易下載不下來安裝所需要的ttf檔案 所以才會採取預下載的方式先從script放置點(這裡要是連不上一開始就拿不到script可以跑) 至於這個nerd-font的用途就是當我在使用powerlevel10k的時候需要用到一些文字圖示來美化,所以需要這些font檔才能正確顯示 另外我也惡趣味的做了一個zeon.ttf裡面只有兩個字,就是我光榮ジオン公国＆ネオ ジオン的國徽自己用就不太管是不是合法使用圖像了 安裝yay才能裝的軟體12# Install yay package echo -e &quot;$&#123;COLOR1&#125;Prepare to install package via yay$&#123;NC&#125;&quot; 因為用yay安裝程式通常需要比較長的下載時間跟compile時間所以我就把所有透過這個安裝的全部做成選項 Brave1234567891011121314151617181920# Install Braveecho -e &quot;$&#123;COLOR1&#125;Do you want to install $&#123;COLOR_H2&#125;Brave-bin$&#123;NC&#125; for your browser?\\nIt should spend much time\\n $&#123;COLOR_H1&#125;Y) Yes\\n N) No please skip this \\n &gt;$&#123;NC&#125;&quot;while :do read BRAVE case $BRAVE in Y) echo -e &quot;$&#123;COLOR2&#125;Install Brave-bin via yay$&#123;NC&#125;&quot; yay -S --noconfirm brave-bin break ;; N) echo -e &quot;$&#123;COLOR2&#125;Skip Brave installation$&#123;NC&#125;&quot; break ;; *) echo -e &quot;$&#123;COLOR_H1&#125;Please enter your choice Y or A or N$&#123;NC&#125;&quot; ;; esacdone Qv2ray1234567891011121314151617181920212223242526272829# Install Qv2rayecho -e &quot;$&#123;COLOR1&#125;Do you want to install $&#123;COLOR_H2&#125;Qv2ray$&#123;NC&#125;?\\nIt should spend much time\\n $&#123;COLOR_H1&#125;Y) Yes install via yay\\n A) Using AppImage version\\n N)No Need\\n &gt;$&#123;NC&#125;&quot;while :do read QV2RAY case $QV2RAY in Y) echo -e &quot;$&#123;COLOR2&#125;Install QV2Ray via yay$&#123;NC&#125;&quot; yay -S --noconfirm qv2ray break ;; A) echo -e &quot;$&#123;COLOR_H1&#125;Please enter Qv2ray Version(ie:2.6.3)$&#123;NC&#125;&quot; read Q_VERSION echo -e &quot;$&#123;COLOR2&#125;Download QV2Ray AppImage from Github$&#123;NC&#125;&quot; mkdir ~/Applications wget https://github.com/Qv2ray/Qv2ray/releases/download/v$&#123;Q_VERSION&#125;/Qv2ray.v$&#123;Q_VERSION&#125;.linux-x64.AppImage mv ./Qv2ray.v* ~/Applications/Qv2ray.v$&#123;Q_VERSION&#125;.linux-x64.AppImage break ;; N) echo -e &quot;$&#123;COLOR2&#125;Skip Qv2ray Installation$&#123;NC&#125;&quot; break ;; *) echo -e &quot;$&#123;COLOR_H1&#125;Please enter your choice Y or A or N$&#123;NC&#125;&quot; ;; esacdone 基於經驗,Qv2ray的安裝很容易會卡住很難裝,所以我就額外加了一個安裝AppImage版的作法 Teamviewer1234567891011121314151617181920# Install Teamviewerecho -e &quot;$&#123;COLOR1&#125;Do you want to install $&#123;COLOR_H2&#125;Teamviewer$&#123;NC&#125;?\\nIt should spend much time\\n $&#123;COLOR_H1&#125;Y) Yes\\n N) No please skip this\\n &gt;$&#123;NC&#125;&quot;while :do read TEAM case $TEAM in Y) echo -e &quot;$&#123;COLOR2&#125;Install Teamviewer via yay$&#123;NC&#125;&quot; yay -S --noconfirm teamviewer break ;; N) echo -e &quot;$&#123;COLOR2&#125;Skip teamviewer Installation$&#123;NC&#125;&quot; break ;; *) echo -e &quot;$&#123;COLOR_H1&#125;Please enter your choice Y or A or N$&#123;NC&#125;&quot; ;; esacdone Typora123456789101112131415161718192021222324252627282930313233343536373839# Install Typoraecho -e &quot;$&#123;COLOR1&#125;Do you want to install $&#123;COLOR_H2&#125;Typora$&#123;NC&#125;?\\nIt should spend much time\\n $&#123;COLOR_H1&#125;Y) Yes\\n N) No please skip this\\n &gt;$&#123;NC&#125;&quot;while :do read TYPORA case $TYPORA in Y) echo -e &quot;$&#123;COLOR2&#125;Install Typora via yay$&#123;NC&#125;&quot; yay -S --noconfirm typora echo -e &quot;$&#123;COLOR1&#125;Do you need to Install/Set up $&#123;COLOR_H2&#125;Pigco$&#123;NC&#125; for picture upload\\n $&#123;COLOR_H1&#125;Y) Yes\\n N) Please Skip\\n &gt;$&#123;NC&#125;&quot; while : do read PICGO case $PICGO in Y) echo -e &quot;$&#123;COLOR2&#125;Please install by Typora$&#123;NC&#125;&quot; typora break ;; N) echo -e &quot;$&#123;COLOR2&#125;Skip Picgo$&#123;NC&#125;&quot; break ;; *) echo -e &quot;$&#123;COLOR2&#125;Please enter your choice Y or A or N$&#123;NC&#125;&quot; ;; esac done break ;; N) echo -e &quot;$&#123;COLOR2&#125;Skip Typora Installation$&#123;NC&#125;&quot; break ;; *) echo -e &quot;$&#123;COLOR_H1&#125;Please enter your choice Y or A or N$&#123;NC&#125;&quot; ;; esacdone 因為Typora跟Picgo基本上都是配套的而且我試過最方便的安裝方式就是打開Typora用他的GUI安裝,所以這個部份在選擇要安裝Picgo後會啟動你的Typora讓你手工安裝 VMware Workstation123456789101112131415161718192021222324# Install VMware Workstationecho -e &quot;$&#123;COLOR1&#125;Do you want to install $&#123;COLOR_H2&#125;VMware Workstation$&#123;NC&#125;?\\nIt should spend much time\\n $&#123;COLOR_H1&#125;Y) Yes\\n N) No please skip this\\n &gt;$&#123;NC&#125;&quot;while :do read VMW case $TEAM in Y) echo -e &quot;$&#123;COLOR2&#125;Install VMware Workstation via yay$&#123;NC&#125;&quot; yay -S --noconfirm vmware-workstation sudo systemctl enable vmware-networks sudo systemctl start vmware-networks sudo systemctl enable vmware-usbarbitrator.service sudo systemctl start vmware-usbarbitrator.service break ;; N) echo -e &quot;$&#123;COLOR2&#125;Skip VMware Workstation Installation$&#123;NC&#125;&quot; break ;; *) echo -e &quot;$&#123;COLOR_H1&#125;Please enter your choice Y or A or N$&#123;NC&#125;&quot; ;; esacdone Github-Desktop1234567891011121314151617181920# Install Github-Desktopecho -e &quot;$&#123;COLOR1&#125;Do you want to install $&#123;COLOR_H2&#125;Github-desktop-bin$&#123;NC&#125;?\\nIt should spend much time\\n $&#123;COLOR_H1&#125;Y) Yes\\n N) No please skip this\\n &gt;$&#123;NC&#125;&quot;while :do read GITH case $GITH in Y) echo -e &quot;$&#123;COLOR2&#125;Install Github-Desktop via yay$&#123;NC&#125;&quot; yay -S --noconfirm github-desktop-bin break ;; N) echo -e &quot;$&#123;COLOR2&#125;Skip Github-Desktop Installation$&#123;NC&#125;&quot; break ;; *) echo -e &quot;$&#123;COLOR_H1&#125;Please enter your choice Y or A or N$&#123;NC&#125;&quot; ;; esacdone Hexo套裝1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253# Install Hexo Setecho -e &quot;$&#123;COLOR1&#125;Do you want to install Do you need to Install $&#123;COLOR_H2&#125;Hexo$&#123;NC&#125; for Blog or Wiki?\\nIt should spend much time\\n $&#123;COLOR_H1&#125;Y) Yes\\n N) No please skip this\\n &gt;$&#123;NC&#125;&quot;while :do read HEXO case $HEXO in Y) echo -e &quot;$&#123;COLOR2&#125;Install basic packages for Hexo$&#123;NC&#125;&quot; yay -S --noconfirm nodejs npm echo -e &quot;$&#123;COLOR1&#125;Do you have set your own Hexo?\\n $&#123;COLOR_H1&#125;Y) Yes\\n K)I&#x27;m Kiwi please apply my setting\\n &gt;$&#123;NC&#125;&quot; while : do read H_SET case $H_SET in Y) echo -e &quot;$&#123;COLOR_H1&#125;Please input your Hexo Blog folder with full path(ie:~/hexo)\\n &gt;$&#123;NC&#125;&quot; read PATH mkdir $PATH cd $PATH sudo npm install -g hexo-cli break ;; K) echo -e &quot;$&#123;COLOR2&#125;Please start restore Kiwi&#x27;s Blog setting$&#123;NC&#125;&quot; mkdir ~/GitHub cd ~/GitHub git clone https://github.com/Kiwi0093/Blog.git git clone https://github.com/Kiwi0093/Wiki-site.git cd ~/GitHub/Blog/ sudo npm install -g hexo-cli npm install hexo-theme-next cd ~/GitHub/Wiki-site sudo npm install -g hexo-cli git clone https://github.com/zthxxx/hexo-theme-Wikitten.git themes/Wikitten npm i -S hexo-autonofollow hexo-directory-category hexo-generator-feed hexo-generator-json-content hexo-generator-sitemap break ;; *) echo -e &quot;$&#123;COLOR_H1&#125;Please enter your choice Y or A or N$&#123;NC&#125;&quot; ;; esac done break ;; N) echo -e &quot;$&#123;COLOR2&#125;Skip Hexo Installation$&#123;NC&#125;&quot; break ;; *) echo -e &quot;$&#123;COLOR_H1&#125;Please enter your choice Y or A or N$&#123;NC&#125;&quot; ;; esacdone 這個Secssion主要是用來恢復我的Blog&amp;Wiki,但是考慮到這個scipt要有某程度上的彈性,所以我加了一個**Are you Kiwi?**的相關選項,因為clone我的git也不好upload所以….git clone他也沒什麼用唷 個人設定相關設定zsh相關12345678910111213# Personal setting# change shell to zsh &amp; import powerlevel10k settingecho -e &quot;$&#123;COLOR2&#125;Change default shell to zsh$&#123;NC&#125;&quot;sudo chsh -s /bin/zshchsh -s /bin/zsh# download setting and applyecho -e &quot;$&#123;COLOR2&#125;Download and apply powerlevel10k setting$&#123;NC&#125;&quot;sudo curl -o /etc/zsh/zshrc https://kiwi0093.github.io/script/Manjaro/zsh/zshrcsudo curl -o /etc/zsh/aliasrc https://kiwi0093.github.io/script/Manjaro/zsh/aliasrcsudo curl -o /etc/zsh/p10k.zsh https://Kiwi0093.github.io/script/Manjaro/zsh/p10k.zshsudo cp /etc/zsh/zshrc /root/.zshrccp /etc/zsh/zshrc ~/.zshrc 設定中文輸入法環境1234# Chinese Input ENV Settingecho -e &quot;$&#123;COLOR2&#125;Setting Fcitx Chinese Input ENV $&#123;NC&#125;&quot;curl -o profile https://Kiwi0093.github.io/script/Manjaro/profilesudo mv ./profile /etc/profile 恢復Qv2ray設定1234567891011121314151617181920212223242526272829303132333435363738394041# Restore Qv2ray Settingecho -e &quot;$&#123;COLOR1&#125;Are you Kiwi?\\nIf you are, do you need to restore your private $&#123;COLOR_H2&#125;Qv2ray$&#123;NC&#125; setting\\n $&#123;COLOR_H1&#125;Y) Yes\\n N) No I don&#x27;t need\\n &gt;$&#123;NC&#125;&quot;while :do read Q_SET case $Q_SET in Y) echo -e &quot;$&#123;COLOR1&#125;Check QV2ray installed$&#123;NC&#125;&quot; if [ -f &quot;~/Applications/Qv2ray*AppImage&quot; ]; then echo -e &quot;$&#123;COLOR2&#125;AppImage Version Installed$&#123;NC&#125;&quot; curl -o qv2ray.e.tar.gz https://Kiwi0093.github.io/script/Manjaro/qv2ray.e.tar.gz openssl enc -d -aes256 -in qv2ray.e.tar.gz -out qv2ray.tar.gz tar zxvf qv2ray.tar.gz rm -rf ~/.config/qv2ray mv ./qv2ray ~/.config/ rm -rf ./qv2ray.* else echo -e &quot;$&#123;COLOR2&#125;No Qv2ray AppImage found$&#123;NC&#125;&quot; fi if [ -f &quot;/usr/bin/qv2ray&quot; ]; then echo -e &quot;$&#123;COLOR2&#125;Qv2ray Installed$&#123;NC&#125;&quot; curl -o qv2ray.e.tar.gz https://Kiwi0093.github.io/script/Manjaro/qv2ray.e.tar.gz openssl enc -d -aes256 -in qv2ray.e.tar.gz -out qv2ray.tar.gz tar zxvf qv2ray.tar.gz rm -rf ~/.config/qv2ray mv ./qv2ray ~/.config/ rm -rf ./qv2ray.* else echo -e &quot;$&#123;COLOR2&#125;No Qv2ray found$&#123;NC&#125;&quot; fi break ;; N) echo -e &quot;$&#123;COLOR2&#125;Skip QV2Ray Setting$&#123;NC&#125;&quot; break ;; *) echo -e &quot;$&#123;COLOR_H1&#125;Please enter your choice Y or A or N$&#123;NC&#125;&quot; ;; esacdone 這裡加上了確認是否有安裝Qv2ray的判別式,沒安裝的話就不會restore,另外因為都是私人的設定所以我的設定檔都有openssl加密沒有密碼也沒用 同步Brave1234567891011121314151617181920212223242526272829303132333435363738# Open Brave to set SYNCecho -e &quot;$&#123;COLOR1&#125;Are you Kiwi?\\nIf you are, do you need to SYNC your private $&#123;COLOR_H2&#125;Brave$&#123;NC&#125; setting\\n $&#123;COLOR_H1&#125;Y) Yes\\n N) No I don&#x27;t need\\n &gt;$&#123;NC&#125;&quot;while :do read B_SET case $B_SET in Y) echo -e &quot;$&#123;COLOR1&#125;Check Brave installed$&#123;NC&#125;&quot; if [ -f &quot;/usr/bin/brave&quot; ]; then echo -e &quot;$&#123;COLOR2&#125;Brave Installed$&#123;NC&#125;&quot; curl -o brave.e https://Kiwi0093.github.io/script/Manjaro/brave.e openssl enc -d -aes256 -in brave.e -out brave clear echo &quot;&quot; echo &quot;&quot; echo &quot;&quot; cat ./brave echo &quot;&quot; echo &quot;&quot; echo &quot;&quot; echo -e &quot;$&#123;COLOR2&#125;please set SYNC for your brave$&#123;NC&#125;&quot; brave rm ./brave* else echo -e &quot;$&#123;COLOR2&#125;No Brave found$&#123;NC&#125;&quot; echo -e &quot;$&#123;COLOR2&#125;Skip Brave Setting$&#123;NC&#125;&quot; fi break ;; N) echo -e &quot;$&#123;COLOR2&#125;Skip Brave Setting$&#123;NC&#125;&quot; break ;; *) echo -e &quot;$&#123;COLOR_H1&#125;Please enter your choice Y or A or N$&#123;NC&#125;&quot; ;; esacdone 因為Brave的同步只能把他打開然後貼上SYNC CODE(不然就得Backup整個conf檔)所以我就弄了一個加密檔案,解密後會打開brave並且把code打在terminal上 Restore Picgo設定1234567891011121314151617181920212223242526272829# Open restart picgo settingecho -e &quot;$&#123;COLOR1&#125;Are you Kiwi?\\nIf you are, do you need to SYNC your private $&#123;COLOR_H2&#125;Picgo$&#123;NC&#125; setting\\n $&#123;COLOR_H1&#125;Y) Yes\\n N) No I don&#x27;t need\\n &gt;$&#123;NC&#125;&quot;while :do read P_SET case $P_SET in Y) echo -e &quot;$&#123;COLOR1&#125;Check Picgo installed$&#123;NC&#125;&quot; if [ -f &quot;~/.config/Typora/picgo/linux/picgo&quot; ]; then echo -e &quot;$&#123;COLOR2&#125;Picgo Installed$&#123;NC&#125;&quot; curl -o config.json.e https://Kiwi0093.github.io/script/Manjaro/picgo/config.json.e openssl enc -d -aes256 -in config.json.e -out config.json mv ./config.json ~/.picgo/ rm config.json.e else echo -e &quot;$&#123;COLOR2&#125;No Picgo found$&#123;NC&#125;&quot; echo -e &quot;$&#123;COLOR2&#125;Skip picgo Setting$&#123;NC&#125;&quot; fi break ;; N) echo -e &quot;$&#123;COLOR2&#125;Skip Picgo Setting$&#123;NC&#125;&quot; break ;; *) echo -e &quot;$&#123;COLOR_H1&#125;Please enter your choice Y or A or N$&#123;NC&#125;&quot; ;; esacdone 因為這個裡面有我的Github token,所以我只能加密.. Restore Gnome-pie1234567891011121314151617181920212223242526272829# Restore Gnome-pie Settingecho -e &quot;$&#123;COLOR1&#125;Are you Kiwi?\\nIf you are, do you need to restore your $&#123;COLOR_H2&#125;gnome-pie$&#123;NC&#125; setting\\n $&#123;COLOR_H1&#125;Y) Yes\\n N) No I don&#x27;t need\\n &gt;$&#123;NC&#125;&quot;while :do read P_SET case $P_SET in Y) echo -e &quot;$&#123;COLOR1&#125;Check Gnome-Pie installed$&#123;NC&#125;&quot; if [ -f &quot;/usr/bin/gnome-pie&quot; ]; then echo -e &quot;$&#123;COLOR2&#125;Gnome-pie Installed$&#123;NC&#125;&quot; curl -o gnome-pie.tar.gz https://Kiwi0093.github.io/script/Manjaro/gnome-pie.tar.gz tar zxvf gnome-pie.tar.gz rm -rf ~/.config/gnome-pie mv ./gnome-pie ~/.config else echo -e &quot;$&#123;COLOR2&#125;No Gnome-pie found$&#123;NC&#125;&quot; echo -e &quot;$&#123;COLOR2&#125;Skip Gnome-pie Setting$&#123;NC&#125;&quot; fi break ;; N) echo -e &quot;$&#123;COLOR2&#125;Skip Gnome-pie Setting$&#123;NC&#125;&quot; break ;; *) echo -e &quot;$&#123;COLOR_H1&#125;Please enter your choice Y or A or N$&#123;NC&#125;&quot; ;; esacdone Gnome-pie這個玩意沒什麼隱私需求所以是直接copy明碼來恢復 KDE Plasmaoid1234567891011121314151617# Install Kde Plasmaoidecho -e &quot;$&#123;COLOR1&#125;Install KDE plasma Widget &amp; Splash\\n$&#123;NC&#125;&quot;if [ -d &quot;/usr/include/plasma&quot; ];then echo -e &quot;$&#123;COLOR2&#125;KDE Plasma Found$&#123;NC&#125;&quot; curl -o plasma-simpleMonitor-v0.6.plasmoid https://Kiwi0093.github.io/script/Manjaro/plasma-simpleMonitor-v0.6.plasmoid plasmapkg2 -i plasma-simpleMonitor-v0.6.plasmoid ~/.local/share/plasma/plasmoids/ rm -f plasma-simpleMonitor-v0.6.plasmoid curl -o VioletEvergarden-Splash.tar.gz https://Kiwi0093.github.io/script/Manjaro/VioletEvergarden-Splash.tar.gz plasmapkg2 -i VioletEvergarden-Splash.tar.gz ~/.local/share/plasma/look-and-feel/ rm -f VioletEvergarden-Splash.tar.gz curl -o plasma-org.kde.plasma.desktop-appletsrc https://Kiwi0093.github.io/script/Manjaro/plasma-org.kde.plasma.desktop-appletsrc mv ./plasma-org.kde.plasma.desktop-appletsrc ~/.config/else echo -e &quot;$&#123;COLOR2&#125;KDE Plasma NOT found$&#123;NC&#125;&quot;fi 其實就是自動裝上我喜歡的simple monitor跟一個很騷的開機splash,但是裝完後還是得手動調整 結論這個script寫起來還蠻開心的,可能後面會找機會把**Arch Linux**的安裝script照這個標準重寫一下","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Manjaro","slug":"Linux/Manjaro","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Manjaro/"}],"tags":[{"name":"Linunx","slug":"Linunx","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linunx/"},{"name":"Manjaro","slug":"Manjaro","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Manjaro/"}]},{"title":"Ansible Installation","slug":"Network/Ansible/Basic/Install","date":"2020-12-17T16:00:00.000Z","updated":"2021-06-30T08:59:28.525Z","comments":true,"path":"wiki/Network/Ansible/Basic/Install/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Network/Ansible/Basic/Install/","excerpt":"","text":"Ansible這是一個Redhat支持開發的IT Automation工具, 基礎是python3+ssh Push mode這是Ansible的基本功用由一台安裝Ansible的機器push指令到Inventory的機器上一次性進行所有的同步指令進行管理 Ad-Hoc指令這是一次性的指令基本用法是 1ansible [pattern] -m [module] -a &quot;[module options]&quot; Playbook這個可以視為是事先寫好的script可以讓Ansible直接依照該Playbook去跑複雜的動作進行管理後續會把自己寫的一部分整理起來 Pull Mode這個是使用ansible-pull指令,將某地的Playbook拉到本機上套用,很適合用來進行單機的自動環境設定,像我這種會日益增加Linux機台的人很適合寫好playbook然後採用**ansible-pull+Github**的組合去儲存我的各種機器設定,缺點就是變成每一台機器都得要安裝ansible不然的話無法套用(push mode不用每台都安裝也可以跑) 安裝安裝非常的簡單就我自己常用的Arch系與Debian/Ubuntu系的機器都是一行指令安裝完成 Arch/Manjaro 1sudo pacman -S ansible Debian/Ubuntu 1apt install ansible 基本連線1ansible &lt;IP or name&gt; --ask-pass -m [module] 若是使用ssh key的話就不需要--ask-pass參數來要求手動輸入ssh password 有些Server會check host ssh key,所以可以去ansible.cfg裡面加上host_key_checking = False","categories":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/"},{"name":"Ansible","slug":"Network/Ansible","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/Ansible/"},{"name":"Basic","slug":"Network/Ansible/Basic","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/Ansible/Basic/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Network/"},{"name":"VPS","slug":"VPS","permalink":"http://kiwi0093.github.io/Wiki-site/tags/VPS/"}]},{"title":"INventory - hosts","slug":"Network/Ansible/Basic/host","date":"2020-12-17T16:00:00.000Z","updated":"2021-06-30T08:59:28.525Z","comments":true,"path":"wiki/Network/Ansible/Basic/host/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Network/Ansible/Basic/host/","excerpt":"","text":"ansible inventoryansible利用/etc/ansible/hosts這個檔案來控制他的連線inventory,這個檔案的格式可以是[INI]或是yml格式 我個人比較喜歡用[INI]的方式來寫 基本語法12345678[tag1]server1.example.com[tag2]server2.example.com[tag3]server[a:z].example.com[tag4]192.168.0.101 上述的意思為有四個tag,一個是tag1有一台server1, tag2有一台server2,tag3有servera.example.com,serverb.example.com...serverz.example.com等26台server.tag4是ip表示的server 群組 :children123456789101112[group1:children]tag1tag2[tag1]server1.example.com[tag2]server2.example.com[tag3]server[a:z].example.com[tag4]192.168.0.101 有一個群組裡面包括了tag1&amp;tag2,這個指令可以群組裡面包含群組弄成很多層 變數 :vars123456789101112131415[group1:children]tag1tag2[tag1]server1.example.com ansible_user=myuser[tag2]server2.example.com[tag3]server[a:z].example.com[tag4]192.168.0.101[tag3:vars]ansible_passwd=mypassword 這裡設定了單項變數ansible_user=myuser在server1以及整體變數ansible_passwd=mypassword給tag3所有的機器上 參考資料Ansible official document - How to build Inventory","categories":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/"},{"name":"Ansible","slug":"Network/Ansible","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/Ansible/"},{"name":"Basic","slug":"Network/Ansible/Basic","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/Ansible/Basic/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Network/"},{"name":"VPS","slug":"VPS","permalink":"http://kiwi0093.github.io/Wiki-site/tags/VPS/"}]},{"title":"整合型Archlinux安裝Script - 2.架構說明","slug":"Linux/Arch Linux/2-construction","date":"2020-12-03T16:00:00.000Z","updated":"2021-07-12T03:11:22.827Z","comments":true,"path":"wiki/Linux/Arch Linux/2-construction/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Arch%20Linux/2-construction/","excerpt":"前言其實不用搞成這麼複雜的,但是寫的時候想說寫的細一點,順便拿來練習寫shell script","text":"前言其實不用搞成這麼複雜的,但是寫的時候想說寫的細一點,順便拿來練習寫shell script 架構說明因為**Arch Linux**的安裝邏輯如下 先在Live CD的OS內對HDD進行處理,然後把透過網路把新的archlinux的系統裝進HDD內,然後chroot到新的系統內,利用新的系統的東西,進行初步的設定與啟動設定等動作,最後再完全退出重開改以HDD進行開機這樣算是完成了一個新的系統的安裝 所以在Script的使用上是把所有的選項在arch-chroot後都做成獨立的script進行如同下面的圖","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Arch Linux","slug":"Linux/Arch-Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Arch-Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"Archlinux","slug":"Archlinux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Archlinux/"}]},{"title":"整合型Archlinux安裝Script - 6.arch_v2ray.sh說明","slug":"Linux/Arch Linux/6-arch_v2ray","date":"2020-12-03T16:00:00.000Z","updated":"2021-07-12T03:11:22.830Z","comments":true,"path":"wiki/Linux/Arch Linux/6-arch_v2ray/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Arch%20Linux/6-arch_v2ray/","excerpt":"使用前 這個script預設是自動帶出來跑的,但是也是可以手動自己跑 Script的直接位置如下： https://Kiwi0093.github.io/script/Arch/arch_v2ray.sh","text":"使用前 這個script預設是自動帶出來跑的,但是也是可以手動自己跑 Script的直接位置如下： https://Kiwi0093.github.io/script/Arch/arch_v2ray.sh Script內容Script內容說明基本定義12345#!/bin/zsh#Parmeter Pre-DefineCOLOR1=&#x27;\\e[94m&#x27;COLOR2=&#x27;\\e[32m&#x27;NC=&#x27;\\e[0m&#x27; 定義Script中字串的顏色 設定時區與硬體時間1234567891011121314151617181920212223242526#change Timezone to CTS(Taipei)echo -e &quot;$&#123;COLOR1&#125;Please select your time zone\\n1)Taipei\\n2)Shanghai\\n*)Whatever..I don&#x27;t care\\n$&#123;NC&#125;&quot;while :do read ZONE case $ZONE in 1) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Taipei$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime hwclock --systohc --utc break ;; 2) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Shanghai$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime hwclock --systohc --utc break ;; *) echo -e &quot;$&#123;COLOR1&#125;Nobody cares the local time!!$&#123;NC&#125;&quot; hwclock --systohc --utc break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 網路設定123456789101112131415161718192021222324252627282930#Hostnameecho -e &quot;$&#123;COLOR1&#125;Please input your hostname\\n$&#123;NC&#125;&quot;read HOSTNAMEecho $&#123;HOSTNAME&#125; &gt; /etc/hostnameecho &quot;127.0.0.1 localhost $&#123;HOSTNAME&#125;&quot; &gt;&gt; /etc/hostsecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Define your NIC by Mac address$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Please input your MAC Address:\\n$&#123;NC&#125;&quot;read OUTSIDEecho &#x27;SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, ATTR&#123;address&#125;==&quot;&#x27;$&#123;OUTSIDE&#125;&#x27;&quot;, NAME=&quot;EXT0&quot;&#x27; &gt; /etc/udev/rules.d/10-network.rulesecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Define your IP for EXT0:$&#123;NC&#125;&quot;echo &quot;Description=&#x27;EXT0 IP SETTING&#x27;&quot; &gt; /etc/netctl/EXT0.serviceecho &quot;Interface=EXT0&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho &quot;Connection=ethernet&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho &quot;IP=static&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your IP address:\\n$&#123;NC&#125;&quot;read EXT_IPecho &quot;Address=(&#x27;$&#123;EXT_IP&#125;/24&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your Gateway IP address:\\n$&#123;NC&#125;&quot;read GATE_IPecho &quot;Gateway=&#x27;$&#123;GATE_IP&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your DNS IP address:\\n$&#123;NC&#125;&quot;read DNS_IPecho &quot;DNS=(&#x27;$&#123;DNS_IP&#125;&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -e &quot;$&#123;COLOR2&#125;Enable EXT0$&#123;NC&#125;&quot;netctl enable EXT0.serviceecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot; 這個設定是利用固定的**Mac Address來定義NIC Interface的名字為EXT0** 這個設定是使用netctl進行的 變更root密碼與建立其他帳號123456789101112131415161718#Root Passwordecho -e &quot;$&#123;COLOR1&#125;Set your root password$&#123;NC&#125;&quot;passwdchsh -s /bin/zshecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#add Userecho -e &quot;$&#123;COLOR1&#125;Add user account:$&#123;NC&#125;&quot;echo -n &quot;$&#123;COLOR1&#125;What ID you want:$&#123;NC&#125;&quot;read YOURIDuseradd -m -g root -s /bin/zsh $&#123;YOURID&#125;passwd $&#123;YOURID&#125;echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Add $YOURID into sudo list$&#123;NC&#125;&quot;pacman -Syu sudoecho &quot;$&#123;YOURID&#125; ALL=(ALL) ALL&quot; &gt;&gt; /etc/sudoersecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 安裝程式12345#install Toolsecho -e &quot;$&#123;COLOR1&#125;Install Packages$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;screen$&#123;NC&#125;&quot;pacman -Sy screen v2ray certbot certbot-nginx nginxecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 裝上screen,v2ray, certbot,certbot-nginx,nginx,因為不想直接放config.json也不想盜用別人的一鍵安裝script所以只有把基本的裝上,其他的設定還是參考其他資料自己手工來吧 安裝Bootloader12345#install Bootloaderecho -e &quot;$&#123;COLOR1&#125;Install grub Boot Loader into /dev/sda$&#123;NC&#125;&quot;grub-install --target=i386-pc /dev/sdagrub-mkconfig -o /boot/grub/grub.cfgecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 同步後離開Arch-chroot12345#Finished installsyncsyncsyncexit 完整版的script123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103#------------------------------------------------------------------------------#(所有動作都是在change root內完成的)#------------------------------------------------------------------------------#!/bin/zsh#Parmeter Pre-DefineCOLOR1=&#x27;\\e[94m&#x27;COLOR2=&#x27;\\e[32m&#x27;NC=&#x27;\\e[0m&#x27;#change Timezone to CTS(Taipei)echo -e &quot;$&#123;COLOR1&#125;Please select your time zone\\n1)Taipei\\n2)Shanghai\\n*)Whatever..I don&#x27;t care\\n$&#123;NC&#125;&quot;while :do read ZONE case $ZONE in 1) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Taipei$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime hwclock --systohc --utc break ;; 2) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Shanghai$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime hwclock --systohc --utc break ;; *) echo -e &quot;$&#123;COLOR1&#125;Nobody cares the local time!!$&#123;NC&#125;&quot; hwclock --systohc --utc break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#Hostnameecho -e &quot;$&#123;COLOR1&#125;Please input your hostname\\n$&#123;NC&#125;&quot;read HOSTNAMEecho $&#123;HOSTNAME&#125; &gt; /etc/hostnameecho &quot;127.0.0.1 localhost $&#123;HOSTNAME&#125;&quot; &gt;&gt; /etc/hostsecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Define your NIC by Mac address$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Please input your MAC Address:\\n$&#123;NC&#125;&quot;read OUTSIDEecho &#x27;SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, ATTR&#123;address&#125;==&quot;&#x27;$&#123;OUTSIDE&#125;&#x27;&quot;, NAME=&quot;EXT0&quot;&#x27; &gt; /etc/udev/rules.d/10-network.rulesecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Define your IP for EXT0:$&#123;NC&#125;&quot;echo &quot;Description=&#x27;EXT0 IP SETTING&#x27;&quot; &gt; /etc/netctl/EXT0.serviceecho &quot;Interface=EXT0&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho &quot;Connection=ethernet&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho &quot;IP=static&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your IP address:\\n$&#123;NC&#125;&quot;read EXT_IPecho &quot;Address=(&#x27;$&#123;EXT_IP&#125;/24&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your Gateway IP address:\\n$&#123;NC&#125;&quot;read GATE_IPecho &quot;Gateway=&#x27;$&#123;GATE_IP&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your DNS IP address:\\n$&#123;NC&#125;&quot;read DNS_IPecho &quot;DNS=(&#x27;$&#123;DNS_IP&#125;&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -e &quot;$&#123;COLOR2&#125;Enable EXT0$&#123;NC&#125;&quot;netctl enable EXT0.serviceecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot;#Root Passwordecho -e &quot;$&#123;COLOR1&#125;Set your root password$&#123;NC&#125;&quot;passwdchsh -s /bin/zshecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#add Userecho -e &quot;$&#123;COLOR1&#125;Add user account:$&#123;NC&#125;&quot;echo -n &quot;$&#123;COLOR1&#125;What ID you want:$&#123;NC&#125;&quot;read YOURIDuseradd -m -g root -s /bin/zsh $&#123;YOURID&#125;passwd $&#123;YOURID&#125;echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Add $YOURID into sudo list$&#123;NC&#125;&quot;pacman -Syu sudoecho &quot;$&#123;YOURID&#125; ALL=(ALL) ALL&quot; &gt;&gt; /etc/sudoersecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#install Toolsecho -e &quot;$&#123;COLOR1&#125;Install Packages$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;screen$&#123;NC&#125;&quot;pacman -Sy screen v2ray certbot certbot-nginx nginxecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#install Bootloaderecho -e &quot;$&#123;COLOR1&#125;Install grub Boot Loader into /dev/sda$&#123;NC&#125;&quot;grub-install --target=i386-pc /dev/sdagrub-mkconfig -o /boot/grub/grub.cfgecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#Finished installsyncsyncsyncexit","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Arch Linux","slug":"Linux/Arch-Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Arch-Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"Archlinux","slug":"Archlinux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Archlinux/"}]},{"title":"整合型Archlinux安裝Script - 7.arch_v2ray_gate.sh說明","slug":"Linux/Arch Linux/7-arch_v2ray_gate","date":"2020-12-03T16:00:00.000Z","updated":"2021-07-12T03:11:22.830Z","comments":true,"path":"wiki/Linux/Arch Linux/7-arch_v2ray_gate/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Arch%20Linux/7-arch_v2ray_gate/","excerpt":"使用前 這個script預設是自動帶出來跑的,但是也是可以手動自己跑 這個script是用在有兩張網路卡的條件下的 Script的直接位置如下： https://Kiwi0093.github.io/script/Arch/arch_v2ray_gate.sh","text":"使用前 這個script預設是自動帶出來跑的,但是也是可以手動自己跑 這個script是用在有兩張網路卡的條件下的 Script的直接位置如下： https://Kiwi0093.github.io/script/Arch/arch_v2ray_gate.sh Script內容Script內容說明基本定義12345#!/bin/zsh#Parmeter Pre-DefineCOLOR1=&#x27;\\e[94m&#x27;COLOR2=&#x27;\\e[32m&#x27;NC=&#x27;\\e[0m&#x27; 定義Script中字串的顏色 設定時區與硬體時間1234567891011121314151617181920212223242526#change Timezone to CTS(Taipei)echo -e &quot;$&#123;COLOR1&#125;Please select your time zone\\n1)Taipei\\n2)Shanghai\\n*)Whatever..I don&#x27;t care\\n$&#123;NC&#125;&quot;while :do read ZONE case $ZONE in 1) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Taipei$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime hwclock --systohc --utc break ;; 2) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Shanghai$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime hwclock --systohc --utc break ;; *) echo -e &quot;$&#123;COLOR1&#125;Nobody cares the local time!!$&#123;NC&#125;&quot; hwclock --systohc --utc break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 網路設定Hostname設定123456#Hostnameecho -e &quot;$&#123;COLOR1&#125;Please input your hostname\\n$&#123;NC&#125;&quot;read HOSTNAMEecho $&#123;HOSTNAME&#125; &gt; /etc/hostnameecho &quot;127.0.0.1 localhost $&#123;HOSTNAME&#125;&quot; &gt;&gt; /etc/hostsecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 輸入卡號定義NIC名稱123456789#Set Mac Addressecho -e &quot;$&#123;COLOR1&#125;Define your NIC by Mac address$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Please input your EXT Mac Address:\\n$&#123;NC&#125;&quot;read OUTSIDEecho &#x27;SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, ATTR&#123;address&#125;==&quot;&#x27;$&#123;OUTSIDE&#125;&#x27;&quot;, NAME=&quot;EXT0&quot;&#x27; &gt; /etc/udev/rules.d/10-network.rulesecho -e &quot;$&#123;COLOR1&#125;Please input your INT Mac Address:\\n$&#123;NC&#125;&quot;read INSIDEecho &#x27;SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, ATTR&#123;address&#125;==&quot;&#x27;$&#123;INSIDE&#125;&#x27;&quot;, NAME=&quot;INT0&quot;&#x27; &gt;&gt; /etc/udev/rules.d/10-network.rulesecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 這個設定是利用固定的**Mac Address來定義NIC Interface的名字為EXT0** 設定對內固定IP123456789101112# Set INT networkecho -e &quot;$&#123;COLOR1&#125;Setting your INT0$&#123;NC&#125;&quot;echo &quot;Description=&#x27;INT0 IP SETTING&#x27;&quot; &gt; /etc/netctl/INT0.serviceecho &quot;Interface=INT0&quot; &gt;&gt; /etc/netctl/INT0.serviceecho &quot;Connection=ethernet&quot; &gt;&gt; /etc/netctl/INT0.serviceecho &quot;IP=static&quot; &gt;&gt; /etc/netctl/INT0.serviceecho -e &quot;$&#123;COLOR1&#125;Please input your INT IP:\\n$&#123;NC&#125;&quot;read INT_IPecho &quot;Address=(&#x27;$&#123;INT_IP&#125;/24&#x27;)&quot; &gt;&gt; /etc/netctl/INT0.serviceecho -e &quot;$&#123;COLOR2&#125;Enable INT0$&#123;NC&#125;&quot;netctl enable INT0.serviceecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot; IP請設定在192.168/16的範圍內 設定對外網路,可選固定IP或是PPPOE方式連線123456789101112131415161718192021222324252627282930313233343536373839404142434445# Set EXT networkecho -e &quot;$&#123;COLOR1&#125;Please select your connection\\n1)PPPOE\\n2)Static IP\\n&quot;whiledo read CONNECT case $CONNECT in 1) echo -e &quot;$&#123;COLOR1&#125;Setting your PPPOE$&#123;NC&#125;&quot; echo &quot;Description=&#x27;EXT0 PPPOE SETTING&#x27;&quot; &gt; /etc/netctl/EXT0.service echo &quot;Interface=EXT0&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;Connection=pppoe&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input your PPPOE Account:\\n:$&#123;NC&#125;&quot; read ISP echo &quot;User=&#x27;$&#123;ISP&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input your PPPOE password:\\n$&#123;NC&#125;&quot; read ISPPW echo &quot;Password=&#x27;$&#123;ISPPW&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;ConnectionMode=&#x27;persist&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;UsePeerDNS=false&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Enable EXT0&#123;NC&#125;&quot; netctl enable EXT0.service break ;; 2) echo -e &quot;$&#123;COLOR1&#125;Setting your Static IP$&#123;NC&#125;&quot; echo &quot;Description=&#x27;EXT0 IP SETTING&#x27;&quot; &gt; /etc/netctl/EXT0.service echo &quot;Interface=EXT0&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;Connection=ethernet&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;IP=static&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input your IP address:\\n$&#123;NC&#125;&quot; read EXT_IP echo &quot;Address=(&#x27;$&#123;EXT_IP&#125;/24&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input Gateway IP address:\\n$&#123;NC&#125;&quot; read GATE_IP echo &quot;Gateway=&#x27;$&#123;GATE_IP&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input DNS IP address:\\n$&#123;NC&#125;&quot; read DNS_IP echo &quot;DNS=(&#x27;$&#123;DNS_IP&#125;&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR2&#125;Enable EXT0$&#123;NC&#125;&quot; netctl enable EXT0.service break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;EXT set completed.$&#123;NC&#125;&quot; 設定Gateway Routing1234#Set Natecho -e &quot;$&#123;COLOR1&#125;Open package fowrading$&#123;NC&#125;&quot;echo &quot;net.ipv4.ip_forward=1&quot; &gt; /etc/sysctl/30-ipforward.confecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot; iptable設定與systemd12345678910111213141516171819# iptable scriptecho -e &quot;$&#123;COLOR1&#125;Create Iptable start script$&#123;NC&#125;&quot;echo &quot;#Natd&quot; &gt; /etc/iptables/iptable.shecho &quot;iptables -t nat -A POSTROUTING -s 192.168/16 -j MASQUERADE&quot; &gt;&gt; /etc/iptables/iptable.shchmod 750 /etc/iptables/iptable.shecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot;# systemdecho -e &quot;$&#123;COLOR1&#125;Create Systemd Service$&#123;NC&#125;&quot;echo &quot;[Unit] &gt; /etc/systemd/system/iptables.serviceecho &quot;Description=iptables rules &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot; &quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot;[Service]&quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot;ExecStart=/bin/sh /etc/iptables/iptable.sh&quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot; &quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot;[Install]&quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot;WantedBy=multi-user.target&quot; &gt;&gt; /etc/systemd/system/iptables.servicesystemctl enable iptables.serviceecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot; 變更root密碼與建立其他帳號123456789101112131415161718#Root Passwordecho -e &quot;$&#123;COLOR1&#125;Set your root password$&#123;NC&#125;&quot;passwdchsh -s /bin/zshecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#add Userecho -e &quot;$&#123;COLOR1&#125;Add user account:$&#123;NC&#125;&quot;echo -n &quot;$&#123;COLOR1&#125;What ID you want:$&#123;NC&#125;&quot;read YOURIDuseradd -m -g root -s /bin/zsh $&#123;YOURID&#125;passwd $&#123;YOURID&#125;echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Add $YOURID into sudo list$&#123;NC&#125;&quot;pacman -Syu sudoecho &quot;$&#123;YOURID&#125; ALL=(ALL) ALL&quot; &gt;&gt; /etc/sudoersecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 安裝程式12345#install Toolsecho -e &quot;$&#123;COLOR1&#125;Install Packages$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;screen$&#123;NC&#125;&quot;pacman -Sy screen v2rayecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 裝上screen,v2ray, certbot,python3-certbot-nginx,因為不想直接放config.json也不想盜用別人的一鍵安裝script所以只有把基本的裝上,其他的設定還是參考其他資料自己手工來吧 安裝Bootloader12345#install Bootloaderecho -e &quot;$&#123;COLOR1&#125;Install grub Boot Loader into /dev/sda$&#123;NC&#125;&quot;grub-install --target=i386-pc /dev/sdagrub-mkconfig -o /boot/grub/grub.cfgecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 同步後離開Arch-chroot12345#Finished installsyncsyncsyncexit 完整版的script123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173#------------------------------------------------------------------------------#(所有動作都是在change root內完成的)#------------------------------------------------------------------------------#!/bin/zsh#Parmeter Pre-DefineCOLOR1=&#x27;\\e[94m&#x27;COLOR2=&#x27;\\e[32m&#x27;NC=&#x27;\\e[0m&#x27;#change Timezone to CTS(Taipei)echo -e &quot;$&#123;COLOR1&#125;Please select your time zone\\n1)Taipei\\n2)Shanghai\\n*)Whatever..I don&#x27;t care\\n$&#123;NC&#125;&quot;while :do read ZONE case $ZONE in 1) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Taipei$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime hwclock --systohc --utc break ;; 2) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Shanghai$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime hwclock --systohc --utc break ;; *) echo -e &quot;$&#123;COLOR1&#125;Nobody cares the local time!!$&#123;NC&#125;&quot; hwclock --systohc --utc break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#Hostnameecho -e &quot;$&#123;COLOR1&#125;Please input your hostname\\n$&#123;NC&#125;&quot;read HOSTNAMEecho $&#123;HOSTNAME&#125; &gt; /etc/hostnameecho &quot;127.0.0.1 localhost $&#123;HOSTNAME&#125;&quot; &gt;&gt; /etc/hostsecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#Set Mac Addressecho -e &quot;$&#123;COLOR1&#125;Define your NIC by Mac address$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Please input your EXT Mac Address:\\n$&#123;NC&#125;&quot;read OUTSIDEecho &#x27;SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, ATTR&#123;address&#125;==&quot;&#x27;$&#123;OUTSIDE&#125;&#x27;&quot;, NAME=&quot;EXT0&quot;&#x27; &gt; /etc/udev/rules.d/10-network.rulesecho -e &quot;$&#123;COLOR1&#125;Please input your INT Mac Address:\\n$&#123;NC&#125;&quot;read INSIDEecho &#x27;SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, ATTR&#123;address&#125;==&quot;&#x27;$&#123;INSIDE&#125;&#x27;&quot;, NAME=&quot;INT0&quot;&#x27; &gt;&gt; /etc/udev/rules.d/10-network.rulesecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;# Set INT networkecho -e &quot;$&#123;COLOR1&#125;Setting your INT0$&#123;NC&#125;&quot;echo &quot;Description=&#x27;INT0 IP SETTING&#x27;&quot; &gt; /etc/netctl/INT0.serviceecho &quot;Interface=INT0&quot; &gt;&gt; /etc/netctl/INT0.serviceecho &quot;Connection=ethernet&quot; &gt;&gt; /etc/netctl/INT0.serviceecho &quot;IP=static&quot; &gt;&gt; /etc/netctl/INT0.serviceecho -e &quot;$&#123;COLOR1&#125;Please input your INT IP:\\n$&#123;NC&#125;&quot;read INT_IPecho &quot;Address=(&#x27;$&#123;INT_IP&#125;/24&#x27;)&quot; &gt;&gt; /etc/netctl/INT0.serviceecho -e &quot;$&#123;COLOR2&#125;Enable INT0$&#123;NC&#125;&quot;netctl enable INT0.serviceecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot;# Set EXT networkecho -e &quot;$&#123;COLOR1&#125;Please select your connection\\n1)PPPOE\\n2)Static IP\\n&quot;whiledo read CONNECT case $CONNECT in 1) echo -e &quot;$&#123;COLOR1&#125;Setting your PPPOE$&#123;NC&#125;&quot; echo &quot;Description=&#x27;EXT0 PPPOE SETTING&#x27;&quot; &gt; /etc/netctl/EXT0.service echo &quot;Interface=EXT0&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;Connection=pppoe&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input your PPPOE Account:\\n:$&#123;NC&#125;&quot; read ISP echo &quot;User=&#x27;$&#123;ISP&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input your PPPOE password:\\n$&#123;NC&#125;&quot; read ISPPW echo &quot;Password=&#x27;$&#123;ISPPW&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;ConnectionMode=&#x27;persist&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;UsePeerDNS=false&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Enable EXT0&#123;NC&#125;&quot; netctl enable EXT0.service break ;; 2) echo -e &quot;$&#123;COLOR1&#125;Setting your Static IP$&#123;NC&#125;&quot; echo &quot;Description=&#x27;EXT0 IP SETTING&#x27;&quot; &gt; /etc/netctl/EXT0.service echo &quot;Interface=EXT0&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;Connection=ethernet&quot; &gt;&gt; /etc/netctl/EXT0.service echo &quot;IP=static&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input your IP address:\\n$&#123;NC&#125;&quot; read EXT_IP echo &quot;Address=(&#x27;$&#123;EXT_IP&#125;/24&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input Gateway IP address:\\n$&#123;NC&#125;&quot; read GATE_IP echo &quot;Gateway=&#x27;$&#123;GATE_IP&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR1&#125;Please input DNS IP address:\\n$&#123;NC&#125;&quot; read DNS_IP echo &quot;DNS=(&#x27;$&#123;DNS_IP&#125;&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.service echo -e &quot;$&#123;COLOR2&#125;Enable EXT0$&#123;NC&#125;&quot; netctl enable EXT0.service break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;EXT set completed.$&#123;NC&#125;&quot;#Set Natecho -e &quot;$&#123;COLOR1&#125;Open package fowrading$&#123;NC&#125;&quot;echo &quot;net.ipv4.ip_forward=1&quot; &gt; /etc/sysctl/30-ipforward.confecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot;# iptable scriptecho -e &quot;$&#123;COLOR1&#125;Create Iptable start script$&#123;NC&#125;&quot;echo &quot;#Natd&quot; &gt; /etc/iptables/iptable.shecho &quot;iptables -t nat -A POSTROUTING -s 192.168/16 -j MASQUERADE&quot; &gt;&gt; /etc/iptables/iptable.shchmod 750 /etc/iptables/iptable.shecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot;# systemdecho -e &quot;$&#123;COLOR1&#125;Create Systemd Service$&#123;NC&#125;&quot;echo &quot;[Unit] &gt; /etc/systemd/system/iptables.serviceecho &quot;Description=iptables rules &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot; &quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot;[Service]&quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot;ExecStart=/bin/sh /etc/iptables/iptable.sh&quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot; &quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot;[Install]&quot; &gt;&gt; /etc/systemd/system/iptables.serviceecho &quot;WantedBy=multi-user.target&quot; &gt;&gt; /etc/systemd/system/iptables.servicesystemctl enable iptables.serviceecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot;#Root Passwordecho -e &quot;$&#123;COLOR1&#125;Set your root password$&#123;NC&#125;&quot;passwdchsh -s /bin/zshecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#add Userecho -e &quot;$&#123;COLOR1&#125;Add user account:$&#123;NC&#125;&quot;echo -n &quot;$&#123;COLOR1&#125;What ID you want:$&#123;NC&#125;&quot;read YOURIDuseradd -m -g root -s /bin/zsh $&#123;YOURID&#125;passwd $&#123;YOURID&#125;echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Add $YOURID into sudo list$&#123;NC&#125;&quot;pacman -Syu sudoecho &quot;$&#123;YOURID&#125; ALL=(ALL) ALL&quot; &gt;&gt; /etc/sudoersecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#install Toolsecho -e &quot;$&#123;COLOR1&#125;Install Packages$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;screen$&#123;NC&#125;&quot;pacman -Sy screen v2rayecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#install Bootloaderecho -e &quot;$&#123;COLOR1&#125;Install grub Boot Loader into /dev/sda$&#123;NC&#125;&quot;grub-install --target=i386-pc /dev/sdagrub-mkconfig -o /boot/grub/grub.cfgecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#Finished installsyncsyncsyncexit","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Arch Linux","slug":"Linux/Arch-Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Arch-Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"Archlinux","slug":"Archlinux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Archlinux/"}]},{"title":"Shell Script - Case迴圈","slug":"Linux/Tips/Shell Script/4-loop","date":"2020-12-03T16:00:00.000Z","updated":"2021-07-12T03:11:22.837Z","comments":true,"path":"wiki/Linux/Tips/Shell Script/4-loop/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Tips/Shell%20Script/4-loop/","excerpt":"前言Loop是shell script裡面很重要的一個function","text":"前言Loop是shell script裡面很重要的一個function Case迴圈1234567891011121314151617181920212223echo -e &quot;想要給你看的a)A b)B c)C&quot;while:do read 變數 case $變數 in a) 選A要做的事情 break ;; b) 選B要做的事情 continue ;; c) 選C要做的事情 exit ;; *) 選ABC以外任意鍵要做的事情 exit ;; esacdone 這是應用了echo,while,do,case做出來的讓人選ABC,然後依照其輸入的選擇做反應的寫法 break - 離開迴圈繼續跑後面的東西 continue - 回到迴圈的頭重新等待輸入 exit - 離開這個script","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Tips","slug":"Linux/Tips","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Tips/"},{"name":"Shell Script","slug":"Linux/Tips/Shell-Script","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Tips/Shell-Script/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"script","slug":"script","permalink":"http://kiwi0093.github.io/Wiki-site/tags/script/"}]},{"title":"Shell Script - 字元定義","slug":"Linux/Tips/Shell Script/1-font","date":"2020-12-03T16:00:00.000Z","updated":"2021-07-12T03:11:22.833Z","comments":true,"path":"wiki/Linux/Tips/Shell Script/1-font/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Tips/Shell%20Script/1-font/","excerpt":"參考資料參考iT邦幫忙-30天不間斷-資工隨筆大雜燴系列第20篇","text":"參考資料參考iT邦幫忙-30天不間斷-資工隨筆大雜燴系列第20篇 特殊字元 符號 名稱 意義 $ 變數 取變數名稱對應的值 # 註解 跳脫符號 特殊及萬用字元還原成一般字元 | 管線 ; 分隔連續指令符號 $ 工作控制 將指令變成背景執行 / 目錄符號 分隔路徑 &gt;,&gt;&gt; 資料重導向(輸出) &lt;，&lt;&lt; 資料重導向(輸入) ‘’ 單引號 無法取變數值 “” 雙引號 可以取變數值 \\ 或是 $() 裏面包執行的指令 () 子 shell的始末 {} 中間爲命令區塊 萬用字元 符號 功能 * 0到無窮多個任意字元 ? 一個以上的任意字元 [] 一個以上括號內的字元 - 編碼範圍內的所有字元，例如[0-9]代表0到9之間的所有數字 ^ 後面接的字元都不要，例如[^0-9]代表0-9之間的所有字元都不接","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Tips","slug":"Linux/Tips","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Tips/"},{"name":"Shell Script","slug":"Linux/Tips/Shell-Script","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Tips/Shell-Script/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"script","slug":"script","permalink":"http://kiwi0093.github.io/Wiki-site/tags/script/"}]},{"title":"Shell Script - echo語法的用法","slug":"Linux/Tips/Shell Script/2-echo","date":"2020-12-03T16:00:00.000Z","updated":"2021-07-12T03:11:22.837Z","comments":true,"path":"wiki/Linux/Tips/Shell Script/2-echo/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Tips/Shell%20Script/2-echo/","excerpt":"參考資料參考FLOZz’ MISC的說明頁面","text":"參考資料參考FLOZz’ MISC的說明頁面 基本語法1echo -? &quot;you can see this&quot; echo的後面可以加-e, -n , -p等 最常見的是使用-e因為加上-e後可以讓&quot;&quot;內的顏色控制碼生效,換行碼生效等等效果 內文使用可以使用 \\n - 換行 \\e - 跟字型有關的控制碼開頭 FormattingSet Code Description Example Preview 1 Bold/Bright echo -e &quot;Normal \\e[1mBold&quot; Normal Bold 2 Dim echo -e &quot;Normal \\e[2mDim&quot; Normal Dim 4 Underlined echo -e &quot;Normal \\e[4mUnderlined&quot; Normal Underlined 5 Blink 1) echo -e &quot;Normal \\e[5mBlink&quot; Normal Blink 7 Reverse (invert the foreground and background colors) echo -e &quot;Normal \\e[7minverted&quot; Normal inverted 8 Hidden (useful for passwords) echo -e &quot;Normal \\e[8mHidden&quot; Normal Hidden Reset Code Description Example Preview 0 Reset all attributes echo -e &quot;\\e[0mNormal Text&quot; Normal Text 21 Reset bold/bright echo -e &quot;Normal \\e[1mBold \\e[21mNormal&quot; Normal Bold Normal 22 Reset dim echo -e &quot;Normal \\e[2mDim \\e[22mNormal&quot; Normal Dim Normal 24 Reset underlined echo -e &quot;Normal \\e[4mUnderlined \\e[24mNormal&quot; Normal Underlined Normal 25 Reset blink echo -e &quot;Normal \\e[5mBlink \\e[25mNormal&quot; Normal Blink Normal 27 Reset reverse echo -e &quot;Normal \\e[7minverted \\e[27mNormal&quot; Normal inverted Normal 28 Reset hidden echo -e &quot;Normal \\e[8mHidden \\e[28mNormal&quot; Normal Hidden Normal 8/16 colorsForeground (text) Code Color Example Preview 39 Default foreground color echo -e &quot;Default \\e[39mDefault&quot; Default Default 30 Black echo -e &quot;Default \\e[30mBlack&quot; Default Black 31 Red echo -e &quot;Default \\e[31mRed&quot; Default Red 32 Green echo -e &quot;Default \\e[32mGreen&quot; Default Green 33 Yellow echo -e &quot;Default \\e[33mYellow&quot; Default Yellow 34 Blue echo -e &quot;Default \\e[34mBlue&quot; Default Blue 35 Magenta echo -e &quot;Default \\e[35mMagenta&quot; Default Magenta 36 Cyan echo -e &quot;Default \\e[36mCyan&quot; Default Cyan 37 Light gray echo -e &quot;Default \\e[37mLight gray&quot; Default Light gray 90 Dark gray echo -e &quot;Default \\e[90mDark gray&quot; Default Dark gray 91 Light red echo -e &quot;Default \\e[91mLight red&quot; Default Light red 92 Light green echo -e &quot;Default \\e[92mLight green&quot; Default Light green 93 Light yellow echo -e &quot;Default \\e[93mLight yellow&quot; Default Light yellow 94 Light blue echo -e &quot;Default \\e[94mLight blue&quot; Default Light blue 95 Light magenta echo -e &quot;Default \\e[95mLight magenta&quot; Default Light magenta 96 Light cyan echo -e &quot;Default \\e[96mLight cyan&quot; Default Light cyan 97 White echo -e &quot;Default \\e[97mWhite&quot; Default White Background Code Color Example Preview 49 Default background color echo -e &quot;Default \\e[49mDefault&quot; Default Default 40 Black echo -e &quot;Default \\e[40mBlack&quot; Default Black 41 Red echo -e &quot;Default \\e[41mRed&quot; Default Red 42 Green echo -e &quot;Default \\e[42mGreen&quot; Default Green 43 Yellow echo -e &quot;Default \\e[43mYellow&quot; Default Yellow 44 Blue echo -e &quot;Default \\e[44mBlue&quot; Default Blue 45 Magenta echo -e &quot;Default \\e[45mMagenta&quot; Default Magenta 46 Cyan echo -e &quot;Default \\e[46mCyan&quot; Default Cyan 47 Light gray echo -e &quot;Default \\e[47mLight gray&quot; Default Light gray 100 Dark gray echo -e &quot;Default \\e[100mDark gray&quot; Default Dark gray 101 Light red echo -e &quot;Default \\e[101mLight red&quot; Default Light red 102 Light green echo -e &quot;Default \\e[102mLight green&quot; Default Light green 103 Light yellow echo -e &quot;Default \\e[103mLight yellow&quot; Default Light yellow 104 Light blue echo -e &quot;Default \\e[104mLight blue&quot; Default Light blue 105 Light magenta echo -e &quot;Default \\e[105mLight magenta&quot; Default Light magenta 106 Light cyan echo -e &quot;Default \\e[106mLight cyan&quot; Default Light cyan 107 White echo -e &quot;Default \\e[107mWhite&quot; Default White","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Tips","slug":"Linux/Tips","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Tips/"},{"name":"Shell Script","slug":"Linux/Tips/Shell-Script","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Tips/Shell-Script/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"script","slug":"script","permalink":"http://kiwi0093.github.io/Wiki-site/tags/script/"}]},{"title":"Shell Script - 變數說明","slug":"Linux/Tips/Shell Script/3-var","date":"2020-12-03T16:00:00.000Z","updated":"2021-07-12T03:11:22.837Z","comments":true,"path":"wiki/Linux/Tips/Shell Script/3-var/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Tips/Shell%20Script/3-var/","excerpt":"參考資料參考iT邦幫忙-30天不間斷-資工隨筆大雜燴系列第20篇","text":"參考資料參考iT邦幫忙-30天不間斷-資工隨筆大雜燴系列第20篇 基本變數定義12變數=XYZ$&#123;變數&#125; 自動變數 變數名稱 說明 $? 表示上一個指令的離開狀況，一般指令正常離開會傳回 0。不正常離開則會傳回 1、2 等數值。 $$ 這一個 shell 的 process ID number $! 最後一個在背景執行的程式的 process number $- 這個參數包含了傳遞給 shell 旗標 (flag)。 $1 代表第一個參數，$2 則為第二個參數，依此類推。而 $0 為這個 shell script 的檔名。 $# 執行時，給這個 Shell Script 參數的個數 $* 包含所有輸入的參數，$@ 即代表 $1, $2,….直到所有參數結束。$* 將所有參數無間隔的連在一起，存成一個單一的參數。也就是說 $* 代表了 “$1 $2 $3…”。 $@ 包含所有輸入的參數，$@ 即代表 $1, $2,….直到所有參數結束。$@ 用將所有參數以空白為間隔，存在 $@ 中。也就是說 $@ 代表了 “$1” “$2” “$3”….。 $BASH_ENV absolute path of startup file $CDPATH directories searched by cd $FCEDIT absolute path of history editor $LINENO current line number in shell script $LINES terminal height $PPID process ID of parent $RANDOM random integer $SECONDS number of seconds since shell started $SHELL absolute pathname of preferred shell $TMOUT seconds to log out after lack of use 空變數的處理 變數 說明 ${var:-word} 如果變數 var 尚未設定或是 null，則將使用 word 這個值，但不改變 var 變數的內容。 ${var:=word} 如果變數 var 尚未設定或是 null，則變數 var 的內容將等於 word 這個字串，並使用這個新的值。 ${var:?word} 如果變數 var 已經設定了，而且不是 null，則將使用變數 var。否則則印出 word 這個字串，並強制離開程式。我們可以設定一個字串 “Parameter null or not set” 來在變數未設定時印出，並終止程式。 ${var:+word} 如果變數 var 已經設定了，而且不是 null，則以 word 這個字串取代它，否則就不取代。 輸入型變數使用read指令讀取key入的內容為變數內容如 123echo -n &quot;please input a var for use&quot;read varecho -e &quot;$&#123;var&#125;&quot; 螢幕上會先出現 1please input a var for use 然後停住等待輸入,若輸入good則會出現 1good","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Tips","slug":"Linux/Tips","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Tips/"},{"name":"Shell Script","slug":"Linux/Tips/Shell-Script","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Tips/Shell-Script/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"script","slug":"script","permalink":"http://kiwi0093.github.io/Wiki-site/tags/script/"}]},{"title":"VLESS Client Config","slug":"Network/V2Ray/3-VLESS_Client_config","date":"2020-11-26T16:00:00.000Z","updated":"2021-07-12T03:11:22.840Z","comments":true,"path":"wiki/Network/V2Ray/3-VLESS_Client_config/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Network/V2Ray/3-VLESS_Client_config/","excerpt":"前言VLESS的Client設定其實很簡單只需要把原來VMESS的稍微改一下就好了, 因為Client的設定通常會包含Local DNS還有其他的相關設定,所以就不放完整的版本","text":"前言VLESS的Client設定其實很簡單只需要把原來VMESS的稍微改一下就好了, 因為Client的設定通常會包含Local DNS還有其他的相關設定,所以就不放完整的版本 參考資料這篇的內容基本上就是直接拿V2Ray團隊的範例直接用,後續有更新再說 V2fly官方文件 V2fly範例Github Config.json - 差異部份12345678910111213141516171819202122232425262728293031 &quot;outbounds&quot;: [ &#123; &quot;protocol&quot;: &quot;vless&quot;, &quot;settings&quot;: &#123; &quot;vnext&quot;: [ &#123; &quot;address&quot;: &quot;example.com&quot;, // 换成你的域名或服务器 IP（发起请求时无需解析域名了） &quot;port&quot;: 443, &quot;users&quot;: [ &#123; &quot;id&quot;: &quot;&quot;, // 填写你的 UUID &quot;encryption&quot;: &quot;none&quot;, &quot;level&quot;: 0 &#125; ] &#125; ] &#125;, &quot;streamSettings&quot;: &#123; &quot;network&quot;: &quot;ws&quot;, &quot;security&quot;: &quot;tls&quot;, &quot;tlsSettings&quot;: &#123; &quot;serverName&quot;: &quot;example.com&quot; // 换成你的域名 &#125;, &quot;wsSettings&quot;: &#123; &quot;path&quot;: &quot;/websocket&quot; // 必须换成自定义的 PATH，需要和服务端的一致 &#125; &#125; &#125; ]&#125;","categories":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/"},{"name":"V2Ray","slug":"Network/V2Ray","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/V2Ray/"}],"tags":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Network/"},{"name":"V2Ray","slug":"V2Ray","permalink":"http://kiwi0093.github.io/Wiki-site/tags/V2Ray/"},{"name":"VPN","slug":"VPN","permalink":"http://kiwi0093.github.io/Wiki-site/tags/VPN/"}]},{"title":"VLESS Server Config","slug":"Network/V2Ray/2-VLESS_Server_config","date":"2020-11-26T16:00:00.000Z","updated":"2021-07-12T03:11:22.840Z","comments":true,"path":"wiki/Network/V2Ray/2-VLESS_Server_config/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Network/V2Ray/2-VLESS_Server_config/","excerpt":"前言VLESS的Server設定裡面已經包括了WS+TLS,所以設定後可以不需要另外設定Web Server(Nginx/Apache)","text":"前言VLESS的Server設定裡面已經包括了WS+TLS,所以設定後可以不需要另外設定Web Server(Nginx/Apache) 參考資料這篇的內容基本上就是直接拿V2Ray團隊的範例直接用,後續有更新再說 V2fly官方文件 V2fly範例Github Config.json1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374&#123; &quot;log&quot;: &#123; &quot;loglevel&quot;: &quot;warning&quot; &#125;, &quot;inbounds&quot;: [ &#123; &quot;port&quot;: 443, &quot;protocol&quot;: &quot;vless&quot;, &quot;settings&quot;: &#123; &quot;clients&quot;: [ &#123; &quot;id&quot;: &quot;&quot;, // 填写你的 UUID &quot;level&quot;: 0, &quot;email&quot;: &quot;love@v2fly.org&quot; //你可以改自己的Email-Address 同上面 &#125; ], &quot;decryption&quot;: &quot;none&quot;, &quot;fallbacks&quot;: [ &#123; &quot;dest&quot;: 80 &#125;, &#123; &quot;path&quot;: &quot;/websocket&quot;, // 必须换成自定义的 PATH &quot;dest&quot;: 1234, //內部轉的PORT要與上面的一致 &quot;xver&quot;: 1 &#125; ] &#125;, &quot;streamSettings&quot;: &#123; &quot;network&quot;: &quot;tcp&quot;, &quot;security&quot;: &quot;tls&quot;, &quot;tlsSettings&quot;: &#123; &quot;alpn&quot;: [ &quot;http/1.1&quot; ], &quot;certificates&quot;: [ &#123; &quot;certificateFile&quot;: &quot;/path/to/fullchain.crt&quot;, // 换成你的证书，绝对路径 &quot;keyFile&quot;: &quot;/path/to/private.key&quot; // 换成你的私钥，绝对路径 &#125; ] &#125; &#125; &#125;, &#123; &quot;port&quot;: 1234, //內部轉的PORT要與上面的一致 &quot;listen&quot;: &quot;127.0.0.1&quot;, &quot;protocol&quot;: &quot;vless&quot;, &quot;settings&quot;: &#123; &quot;clients&quot;: [ &#123; &quot;id&quot;: &quot;&quot;, // 填写你的 UUID &quot;level&quot;: 0, &quot;email&quot;: &quot;love@v2fly.org&quot; //你可以改自己的Email-Address 同上面 &#125; ], &quot;decryption&quot;: &quot;none&quot; &#125;, &quot;streamSettings&quot;: &#123; &quot;network&quot;: &quot;ws&quot;, &quot;security&quot;: &quot;none&quot;, &quot;wsSettings&quot;: &#123; &quot;acceptProxyProtocol&quot;: true, // 提醒：若你用 Nginx/Caddy 等反代 WS，需要删掉这行 &quot;path&quot;: &quot;/websocket&quot; // 必须换成自定义的 PATH，需要和上面的一致 &#125; &#125; &#125; ], &quot;outbounds&quot;: [ &#123; &quot;protocol&quot;: &quot;freedom&quot; &#125; ]&#125;","categories":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/"},{"name":"V2Ray","slug":"Network/V2Ray","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/V2Ray/"}],"tags":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Network/"},{"name":"V2Ray","slug":"V2Ray","permalink":"http://kiwi0093.github.io/Wiki-site/tags/V2Ray/"},{"name":"VPN","slug":"VPN","permalink":"http://kiwi0093.github.io/Wiki-site/tags/VPN/"}]},{"title":"V2Ray With VLESS安裝","slug":"Network/V2Ray/1-VLESS_install","date":"2020-11-25T16:00:00.000Z","updated":"2021-07-12T03:11:22.840Z","comments":true,"path":"wiki/Network/V2Ray/1-VLESS_install/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Network/V2Ray/1-VLESS_install/","excerpt":"前提因為VMESS被發現有漏洞很容易被偵測,所以V2Ray團隊開發了另一個更輕量的通訊協定 - VLESS 另外這個新版的VLESS協議因為沒有自身的加密,所以目前都是強制要加掛TLS(其實就是希望把加密都改成依靠TLS達到加密的安全性)","text":"前提因為VMESS被發現有漏洞很容易被偵測,所以V2Ray團隊開發了另一個更輕量的通訊協定 - VLESS 另外這個新版的VLESS協議因為沒有自身的加密,所以目前都是強制要加掛TLS(其實就是希望把加密都改成依靠TLS達到加密的安全性) 參考資料v2fly在Github上的安裝說明 v2fly對於使用VLESS的SOP 解析 Certbot（Let’s encrypt） 使用方式 安裝新版V2Ray安裝Software Installation因為VLESS已經被包括到新版的V2Ray之中(4.27以後),所以只要安裝新版的V2Ray就可以進行相關設定,一般都會改用變更後的安裝script(for Debian/Ubuntu) Archlinux可以用pacman直接安裝與更新 1sudo pacman -S v2ray 其他的請用下述的script 1bash &lt;(curl -L https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh) Setup與啟動因為需要證書的關係,所以會建議創建v2ray帳號 1sudo useradd -s /usr/sbin/nologin v2ray 並且修改systemd裡面的Service檔 1sudo systemctl edit v2ray.service 內容改為 123[Service]#將nobody改成v2rayuser=v2ray 若是使用systemctl edit指令無法修改（會變成一片白之類的),請直接使用vi指令進行修改如下 1sudo vi /etc/systemd/system/v2ray.service 用這個修改的話必須update Service不然不會做數 1234#先disablesudo systemctl disable v2ray.service#再重新enablesudo systemctl enable v2ray.service Certbot與相關組件安裝因為VLESS需要跟TLS綁在一起,所以設定檔內需要fullchain.pem &amp; private.pem的ssl key,所以以往很方便的caddy自動https作法瞬間變成沒辦法使用(應該還是可以只是得要先確定caddy的SSL Key放哪) 一般的教程會採用Certbot+Nginx或是Certbot+Apache的方式進行 Certbot安裝Archlinux 1sudo pacman -S certbot Debian/Ubuntu 1sudo apt install certbot python-nginx這個部份安裝的時候就會連同Nginx/Apache一起安裝了 Archlinux 1sudo pacman -S python3-certbot-nginx Debian/Ubuntu 1sudo apt install python3-certbot-nginx Certbot證書簽發與Key這裡假設都以經將Domain與IP做好連結,所以才能簽發,這也代表VLESS的方案中Domain成為必要的前提條件之一 12345# 自動簽發模式for nginxsudo certbot --nginx# 自動簽發模式for Apachesudo cerbot --apache 過程中會需要輸入 Email address Domain 沒有異常自動模式會自動啟動Nginx或Apache進行認證,順著跑完就好了 部屬V2Ray用的SSL Key確認Certbot建立的證書有以下 /etc/letsencrypt/live/example.com/fullchain.pem /etc/letsencrypt/live/example.com/privkey.pem example.com是你的Domain Renew證書設定 Archlinux 利用systemd timer進行renewal 先建立一個service for renewal 1sudo vi /lib/systemd/system/certbot.service 12345678[Unit]Description=CertbotDocumentation=file:///usr/share/doc/python-certbot-doc/html/index.htmlDocumentation=https://letsencrypt.readthedocs.io/en/latest/[Service]Type=oneshotExecStart=/usr/bin/certbot -q renewPrivateTmp=true 之後在做一個timer檔讓systemd定時執行certbot.service 1sudo vi /etc/systemd/system/timers.target.wants/certbot.timer 12345678910[Unit]Description=Run certbot twice daily[Timer]OnCalendar=*-*-* 00,12:00:00RandomizedDelaySec=43200Persistent=true[Install]WantedBy=timers.target 然後執行 1sudo systemctl enable certbot.timer 1sudo systemctl start certbot.timer Debian 安裝Certbot後已經自動建好了上面的service/timer,所以不用自己來 建立V2Ray專用目錄1sudo install -d -o v2ray -g v2ray /etc/ssl/v2ray/ 部屬到專用目錄12sudo install -m 644 -o v2ray -g v2ray /etc/letsencrypt/live/example.com/fullchain.pem -t /etc/ssl/v2ray/sudo install -m 600 -o v2ray -g v2ray /etc/letsencrypt/live/example.com/privkey.pem -t /etc/ssl/v2ray/ 建立Renew後的自動script1sudo vi /etc/letsencrypt/renewal-hooks/deploy/v2ray.sh 其內容如下 1234567891011#!/bin/bashV2RAY_DOMAIN=&#x27;example.com&#x27;if [[ &quot;$RENEWED_LINEAGE&quot; == &quot;/etc/letsencrypt/live/$V2RAY_DOMAIN&quot; ]]; then install -m 644 -o v2ray -g v2ray &quot;/etc/letsencrypt/live/$V2RAY_DOMAIN/fullchain.pem&quot; -t /etc/ssl/v2ray/ install -m 600 -o v2ray -g v2ray &quot;/etc/letsencrypt/live/$V2RAY_DOMAIN/privkey.pem&quot; -t /etc/ssl/v2ray/ sleep &quot;$((RANDOM % 2048))&quot; systemctl restart v2ray.servicefi 不要忘記修改example.com為自己的DN 之後給予權限 1sudo chmod +x /etc/letsencrypt/renewal-hooks/deploy/v2ray.sh BBR Archlinux Archlinux開啟BBR 123echo &quot;tcp_bbr&quot; &gt; /etc/modules-load.d/80-bbr.confecho &quot;net.ipv4.tcp_congestion_control=bbr&quot; &gt;&gt; /etc/sysctl.d/80-bbr.confecho &quot;net.core.default_qdisc=fq&quot; &gt;&gt; /etc/sysctl.d/80-bbr.conf 接著 1sysctl -p Debian Debian9/10有內建BBR只要打開就可以了 12echo &quot;net.core.default_qdisc=fq&quot; &gt;&gt; /etc/sysctl.confecho &quot;net.ipv4.tcp_congestion_control=bbr&quot; &gt;&gt; /etc/sysctl.conf 接著 1sysctl -p","categories":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/"},{"name":"V2Ray","slug":"Network/V2Ray","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/V2Ray/"}],"tags":[{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Network/"},{"name":"V2Ray","slug":"V2Ray","permalink":"http://kiwi0093.github.io/Wiki-site/tags/V2Ray/"},{"name":"VPN","slug":"VPN","permalink":"http://kiwi0093.github.io/Wiki-site/tags/VPN/"}]},{"title":"Pathfinder:Kingmaker - Save檔修改技巧","slug":"Game/PC/Pathfinder Kingmaker/1-Save file modding","date":"2020-11-16T16:00:00.000Z","updated":"2021-07-12T03:11:22.827Z","comments":true,"path":"wiki/Game/PC/Pathfinder Kingmaker/1-Save file modding/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Game/PC/Pathfinder%20Kingmaker/1-Save%20file%20modding/","excerpt":"前言我很喜歡D&amp;D類型的RPG,也很喜歡這種類冰風谷的CRPG,然而更大的樂趣,卻是亂搞遊戲本身…","text":"前言我很喜歡D&amp;D類型的RPG,也很喜歡這種類冰風谷的CRPG,然而更大的樂趣,卻是亂搞遊戲本身… Save檔所在位置C:\\Users\\&#123;Username&#125;\\AppData\\LocalLow\\Owlcat Games\\Pathfinder Kingmaker\\Saved Games 因為AppData是隱藏目錄.所以需要手動進入 記錄檔為*.zks可以當作一般的Zip解開,解開後的檔案有兩個重點檔案 party.json 這個檔案紀錄了整個隊伍裡面每一個角色(包括隊友跟寵物)的資訊,我們想要變更跟班的外貌與種族請編輯這個 player.json 這個檔案主要是紀錄主角的一些訊息 Json file好用的Editor可以使用notepad++加上JstoolPlug-in,再讀入json file的時候可以利用Jstool裡的JSFormat功能把json對齊成好看的樣子 Party.json在使用CoTW這個mod之後,有一些職業會帶有跟班,例如牧師的Undead Lord或是Summoner 這樣的跟班在系統中與動物夥伴一樣都被視作Pet,不會佔夥伴的人數,CoTW內的跟班預設是寫死的模型 沒有像傭兵一樣的紙娃娃系統可以變更外貌,但是可以透過修改save檔的方式把Pet變成跟傭兵一樣效果(不過升級的部分還是同Pet沒有自己的經驗值,這點可以靠Bag of Tricks來解決) 修改跟班文件說明在party.json內用來定義一個角色的內容在”Descriptor”這個大section內,我們只要修改這個Section內用來控制相關部分就好 1234567&quot;UISettings&quot;: &#123;...&quot;m_CustomPortrait&quot;: &#123; &quot;$id&quot;: &quot;582&quot;, &quot;m_CustomPortraitId&quot;: &quot;aa28&quot; //使用aa28頭像 &#125; &#125; 這段定義的是角色的頭像照片 123&quot;CustomGender&quot;: &quot;Male&quot;, //定義這個角色的性別&quot;LeftHandedOverride&quot;: false, //定義是不是左撇子&quot;CustomName&quot;: &quot;Kiwi Von Hohenzollen&quot;, //角色的名字,基本上可以利用這個找到想修改的角色 這段定義角色名字與性別 12345678910111213141516171819202122232425262728//這一整段是定義這個角色的外型&quot;Doll&quot;: &#123; &quot;$id&quot;: &quot;644&quot;, &quot;Gender&quot;: &quot;Male&quot;, &quot;RacePreset&quot;: &quot;7f4584a1e1ad4135aef72ebd41462271&quot;, &quot;EquipmentEntityIds&quot;: [&quot;ee_head_face02_m_dp&quot;, &quot;ee_eyebrows_face03_m_dp&quot;, &quot;24c5b0a90952b8843a93ec33feacb78b&quot;, &quot;ee_facialandhair_empty_u_dp&quot;], &quot;EntityRampIdices&quot;: [&#123; &quot;Key&quot;: &quot;24c5b0a90952b8843a93ec33feacb78b&quot;, &quot;Value&quot;: 1 &#125;, &#123; &quot;Key&quot;: &quot;ee_naked_m_dp&quot;, &quot;Value&quot;: 2 &#125;, &#123; &quot;Key&quot;: &quot;ee_head_face02_m_dp&quot;, &quot;Value&quot;: 2 &#125;, &#123; &quot;Key&quot;: &quot;ee_facialandhair_empty_u_dp&quot;, &quot;Value&quot;: 1 &#125;, &#123; &quot;Key&quot;: &quot;ee_eyebrows_face03_m_dp&quot;, &quot;Value&quot;: 1 &#125; ], &quot;EntitySecondaryRampIdices&quot;: [], &quot;LeftHanded&quot;: false, &quot;ClothesPrimaryIndex&quot;: 31, &quot;ClothesSecondaryIndex&quot;: 19 &#125;, 這段定義角色的3D model也就是紙娃娃的外型,定義了種族,身體,頭,髮型,鬍子等 1234//這段是定義對應的Pet UUID&quot;m_Pet&quot;: &#123; &quot;m_UniqueId&quot;: &quot;81851e9f-0723-4290-91ab-3cd29ab6e731&quot; &#125;, 與 1234//這是定義主人&quot;Master&quot;: &#123; &quot;m_UniqueId&quot;: null &#125;, 是要對應的,也就是說主人定義的Pet要定義pet角色的UUID, 而Pet的Master段要定義主人的UUID 這樣才不會有問題 1&quot;Blueprint&quot;: &quot;4391e8b9afbb0cf43aeba700c089f56d&quot;, 在&quot;Descriptor&quot;階層下的’Blueprint是指這個角色的UUID,要注意對應階層的角色 相關作法 Pet角色的UUID不能使用原先遊戲檔案內藍圖創好的UUID,例如直接copy某NPC的UUID,這樣會因為UUID重複的關係產生錯誤 為了有一個獨特的UUID,建議可以另外開一個新檔案,然後使用遊戲的角色建立工具建立新角色後 再把該角色的UUID, doll section,m_CustomPortrait copy對應到想要的Pet對應位置去 最後要確認的是所有Copy的條目內若有id的都不能跟文件內的其他id重複,可以不照順序增加就好了 後遺症這個方法改出來的角色不知道為什麼都沒穿衣服…應該是沒看到衣服的定義區塊後面有找到再更新","categories":[{"name":"Game","slug":"Game","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Game/"},{"name":"PC","slug":"Game/PC","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Game/PC/"},{"name":"Pathfinder Kingmaker","slug":"Game/PC/Pathfinder-Kingmaker","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Game/PC/Pathfinder-Kingmaker/"}],"tags":[{"name":"Game","slug":"Game","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Game/"},{"name":"PC-Game","slug":"PC-Game","permalink":"http://kiwi0093.github.io/Wiki-site/tags/PC-Game/"},{"name":"RPG","slug":"RPG","permalink":"http://kiwi0093.github.io/Wiki-site/tags/RPG/"}]},{"title":"整合型Archlinux安裝Script - 5.nextc_arch.sh說明","slug":"Linux/Arch Linux/5-nextc_arch","date":"2020-06-15T16:00:00.000Z","updated":"2021-07-12T03:11:22.830Z","comments":true,"path":"wiki/Linux/Arch Linux/5-nextc_arch/","link":"","permalink":"http://kiwi0093.github.io/Wiki-site/wiki/Linux/Arch%20Linux/5-nextc_arch/","excerpt":"前言這個文件反而是這個系列最後寫的..但是寫完之後就遇上了準備全面改用PhotoOS+Docker,所以…就當練習囉","text":"前言這個文件反而是這個系列最後寫的..但是寫完之後就遇上了準備全面改用PhotoOS+Docker,所以…就當練習囉 使用前 這個script預設是自動帶出來跑的,但是也是可以手動自己跑 Script的直接位置如下： https://Kiwi0093.github.com/script/Arch/nextc_arch.sh 開機設定網路 *Update 2021/06/16 因為我自己的Nextcloud要架設在沒有DHCP服務的DMZ區域,所以開機使用arch.sh前須要先設定網路 123456789#開機後先確認你的網路卡名稱ip link#除了lo以外的那張ens...就是你的卡號,以下假設為ens160#設定ip(假設是192.168.10.1)ip address add 192.168.10.1/24 dev ens160#設定route(假設是192.168.10.254)ip route add default via 192.168.10.254 dev ens160 好了之後Ping一下會通就好了 其實不用這個,直接用Docker搞不好還比較快 Script內容Script內容說明基本定義1234567891011#!/bin/sh#Parmeter Pre-Define#Color for warningCOLOR_W=&#x27;\\e[35m&#x27;#Color for descriptionCOLOR1=&#x27;\\e[94m&#x27;COLOR2=&#x27;\\e[32m&#x27;# Color for Highlight packageCOLOR_H1=&#x27;\\e[96m&#x27;COLOR_H2=&#x27;\\e[34m&#x27;NC=&#x27;\\e[0m&#x27; 定義Script中字串的顏色 警告標語與版號123456789#Notice before useecho -e &quot;$&#123;COLOR_W&#125;=====================Warning=======================\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Kiwi&#x27;s Arch linux Auto install script Ver.1.1 =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Arch + Nextcloud Install script Ver.1.0 =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= This Script for Kiwi private use. =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= If you have any issue on usage, =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Please DON&#x27;T Feedback to Kiwi =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= And you should take your own responsibility =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;===================================================\\n$&#123;NC&#125;&quot; 設定時區與硬體時間1234567891011121314151617181920212223242526#change Timezoneecho -e &quot;$&#123;COLOR1&#125;Please select your time zone\\n$&#123;NC&#125;$&#123;COLOR_H1&#125;1)Taipei\\n2)Shanghai\\n*)Whatever..I don&#x27;t care\\n$&#123;NC&#125;&quot;while :do read ZONE case $ZONE in 1) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Taipei$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime hwclock --systohc --utc break ;; 2) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Shanghai$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime hwclock --systohc --utc break ;; *) echo -e &quot;$&#123;COLOR1&#125;Nobody cares the local time!!$&#123;NC&#125;&quot; hwclock --systohc --utc break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 系統語系設定為UTF-812345678910#locale-gen to add en_US &amp; zh_TWecho -e &quot;$&#123;COLOR1&#125;Setting local file$&#123;NC&#125;&quot;echo &quot;en_US.UTF-8 UTF-8&quot; &gt;&gt; /etc/locale.genecho &quot;zh_TW.UTF-8 UTF-8&quot; &gt;&gt; /etc/locale.genecho -e &quot;$&#123;COLOR1&#125;Generate locale.conf$&#123;NC&#125;&quot;locale-genecho -e &quot;$&#123;COLOR1&#125;Setting locale.conf$&#123;NC&#125;&quot;echo LANG=en_US.UTF-8 &gt; /etc/locale.confexport LANG=en_US.UTF-8echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 網路設定123456789101112131415161718192021222324252627282930#Hostnameecho -e &quot;$&#123;COLOR1&#125;Please input your hostname\\n$&#123;NC&#125;&quot;read HOSTNAMEecho $&#123;HOSTNAME&#125; &gt; /etc/hostnameecho &quot;127.0.0.1 localhost $&#123;HOSTNAME&#125;&quot; &gt;&gt; /etc/hostsecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Define your NIC by Mac address$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Please input your MAC Address(need to be lowcase):\\n$&#123;NC&#125;&quot;read OUTSIDEecho &#x27;SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, ATTR&#123;address&#125;==&quot;&#x27;$&#123;OUTSIDE&#125;&#x27;&quot;, NAME=&quot;EXT0&quot;&#x27; &gt; /etc/udev/rules.d/10-network.rulesecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Define your IP for EXT0:$&#123;NC&#125;&quot;echo &quot;Description=&#x27;EXT0 IP SETTING&#x27;&quot; &gt; /etc/netctl/EXT0.serviceecho &quot;Interface=EXT0&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho &quot;Connection=ethernet&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho &quot;IP=static&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your IP address:\\n$&#123;NC&#125;&quot;read EXT_IPecho &quot;Address=(&#x27;$&#123;EXT_IP&#125;/24&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your Gateway IP address:\\n$&#123;NC&#125;&quot;read GATE_IPecho &quot;Gateway=&#x27;$&#123;GATE_IP&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your DNS IP address:\\n$&#123;NC&#125;&quot;read DNS_IPecho &quot;DNS=(&#x27;$&#123;DNS_IP&#125;&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -e &quot;$&#123;COLOR2&#125;Enable EXT0$&#123;NC&#125;&quot;netctl enable EXT0.serviceecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot; 這個設定是利用固定的**Mac Address來定義NIC Interface的名字為EXT0** 這個設定是使用netctl進行的 變更root密碼與建立其他帳號123456789101112131415161718#Root Passwordecho -e &quot;$&#123;COLOR1&#125;Set your root password$&#123;NC&#125;&quot;passwdchsh -s /bin/zshecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#add Userecho -e &quot;$&#123;COLOR1&#125;Add user account:$&#123;NC&#125;&quot;echo -n &quot;$&#123;COLOR1&#125;What ID you want:$&#123;NC&#125;&quot;read YOURIDuseradd -m -g root -s /bin/zsh $&#123;YOURID&#125;passwd $&#123;YOURID&#125;echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Add $YOURID into sudo list$&#123;NC&#125;&quot;pacman -Syu sudoecho &quot;$&#123;YOURID&#125; ALL=(ALL) ALL&quot; &gt;&gt; /etc/sudoersecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 安裝程式12345678910111213#install Toolsecho -e &quot;$&#123;COLOR1&#125;Install Packages$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;tmux$&#123;NC&#125;&quot;pacman -Syu --noconfirm git go base-devel tmux mariadb php php-apcu php-fpm php-gd php-imap php-intl php-imagick nginx certbot certbot-nginx nextcloudecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Install yay$&#123;NC&#125;&quot;cd /rootgit clone https://aur.archlinux.org/yay.gitchomd 777 yaycd yaysudo -u kiwi makepkg -sirm -rf yaysudo -u kiwi yay -S php-smbclient *Update 2021/06/16 Nextcloud Server基本上需要Database - MariaDB, PHP, Web Server - Nginx,所以就一口氣裝上 相關服務社定Mariadb12345678910111213141516171819202122232425262728#Setup service#setup MariaDBecho -e &quot;$&#123;COLOR1&#125;Start to Setup MariaDB$&#123;NC&#125;&quot;mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysqlmkdir -pv /var/lib/mysqltmpchown mysql:mysql /var/lib/mysqltmpecho &quot;tmpfs /var/lib/mysqltmp tmpfs rw,gid=mysql,uid=mysql,size=100M,mode=0750,noatime 0 0&quot; &gt;&gt; /etc/fstabecho &quot;[client]&quot; &gt;&gt; /etc/my.cnfecho &quot;default-character-set = utf8mb4&quot; &gt;&gt; /etc/my.cnfecho &quot;&quot; &gt;&gt; /etc/my.cnfecho &quot;[mysql]&quot; &gt;&gt; /etc/my.cnfecho &quot;default-character-set = utf8mb4&quot; &gt;&gt; /etc/my.cnfecho &quot;&quot; &gt;&gt; /etc/my.cnfecho &quot;[mysqld]&quot; &gt;&gt; /etc/my.cnfecho &quot;collation_server = utf8mb4_unicode_ci&quot; &gt;&gt; /etc/my.cnfecho &quot;character_set_server = utf8mb4&quot; &gt;&gt; /etc/my.cnfecho &quot;tmpdir = /var/lib/mysqltmp&quot; &gt;&gt; /etc/my.cnfmount /var/lib/mysqltmpsystemctl enable mariadb.servicesudo -u mysql /usr/bin/mariadbd &amp;mysql_secure_installationecho -n &quot;$&#123;COLOR1&#125;Please input your Username for Nextcloud Database:\\n$&#123;NC&#125;&quot;read NCUSERecho -n &quot;$&#123;COLOR1&#125;Please input your Password for Nextcloud Database User:\\n$&#123;NC&#125;&quot;read NCPASSWDmysql -u root -p -e&quot;CREATE DATABASE nextcloud DEFAULT CHARACTER SET &#x27;utf8mb4&#x27; COLLATE &#x27;utf8mb4_general_ci&#x27;;GRANT ALL PRIVILEGES ON nextcloud.* TO &#x27;$&#123;NCUSER&#125;&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;$&#123;NCPASSWD&#125;&#x27;;FLUSH PRIVILEGES;&quot;echo -e &quot;$&#123;COLOR2&#125;MariaDB setup compleated$&#123;NC&#125;&quot; PHP1234#Setup PHPecho -e &quot;$&#123;COLOR1&#125;change PHP setting$$&#123;NC&#125;&quot;curl -o /etc/php/php.ini https://kiwi0093.github.io/script/Arch/php.iniecho -e &quot;$&#123;COLOR2&#125;PHP setting completed$&#123;NC&#125;&quot; Nextcloud123456#Setup nextcloudecho -e &quot;$&#123;COLOR1&#125;Set up Nextcloud$&#123;NC&#125;&quot;echo &quot;nexcloud ALL=(ALL) ALL&quot; &gt;&gt; /etc/sudoerssudo -u nextcloud occ maintenance:install --database mysql --database-name nextcloud --database-host localhost --database-user $&#123;NCUSER&#125; --database-pass=&lt;$&#123;NCPASSWD&#125;&gt; --data-dir /var/lib/nextcloud/data/curl -o /usr/share/webapps/nextcloud/config/config.php https://kiwi0093.github.io/script/Arch/config.phpecho -e &quot;$&#123;COLOR2&#125;nexcloud set up compleated$&#123;NC&#125;&quot; PHP-FPM1234567891011121314151617181920212223242526272829303132333435#Set up PHP-FPMecho -e &quot;$&#123;COLOR1&#125;Set up PHP-FPM$&#123;NC&#125;&quot;echo &quot;[nextcloud]&quot; &gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;user = nextcloud&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;group = nextcloud&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;listen = /run/nextcloud/nextcloud.sock&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;env[PATH] = /usr/local/bin:/usr/bin:/bin&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;env[TMP] = /tmp&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;; should be accessible by your web server&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;listen.owner = http&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;listen.group = http&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;pm = dynamic&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;pm.max_children = 15&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;pm.start_servers = 2&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;pm.min_spare_servers = 1&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;pm.max_spare_servers = 3&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confmkdir /etc/systemd/system/php-fpm.service.d/echo &quot;[Service]&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;# Your data directory&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;ReadWritePaths=/var/lib/nextcloud/data&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;# Optional: add if you&#x27;ve set the default apps directory to be writable in config.php&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;ReadWritePaths=/usr/share/webapps/nextcloud/apps&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;# Optional: unnecessary if you&#x27;ve set &#x27;config_is_read_only&#x27; =&gt; true in your config.php&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;ReadWritePaths=/usr/share/webapps/nextcloud/config&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;ReadWritePaths=/etc/webapps/nextcloud/config&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;# Optional: add if you want to use Nextcloud&#x27;s internal update process&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;# ReadWritePaths=/usr/share/webapps/nextcloud&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confsystemctl enable php-fpm.serviceecho -e &quot;$&#123;COLOR2&#125;PHP-FPM setting completed$&#123;NC&#125;&quot; Nginx123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158#set up nginxecho -e &quot;$&#123;COLOR1&#125;Set up Nginx$&#123;NC&#125;&quot;echo -n &quot;$&#123;COLOR1&#125;Please input you Domain for your Nextcloud Server$&#123;NC&#125;&quot;read NCDOMAINmv /etc/nginx/nginx.conf /etc/nginx.conf.oldmkdir /etc/nginx/conf.dmkdir /etc/nginx/sites-enabledecho &quot;user http;&quot; &gt; /etc/nginx/nginx.confecho &quot;worker_processes auto;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;worker_cpu_affinity auto;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;events &#123;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; multi_accept on;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; worker_connections 1024;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;&#125;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;http &#123;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; charset utf-8;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; sendfile on;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; tcp_nopush on;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; tcp_nodelay on;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; server_tokens off;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; log_not_found off;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; types_hash_max_size 4096;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; client_max_body_size 16M;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; # MIME&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; include mime.types;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; default_type application/octet-stream;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; # logging&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; access_log /var/log/nginx/access.log;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; error_log /var/log/nginx/error.log warn;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; # load configs&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; include /etc/nginx/conf.d/*.conf;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; include /etc/nginx/sites-enabled/*;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;&#125;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;upstream php-handler &#123;&quot; &gt; /etc/nginx/sites-enabled/nextcloudecho &quot; server 127.0.0.1:9000;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; #server unix:/var/run/php/php7.4-fpm.sock;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;server &#123;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; listen 80;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; listen [::]:80;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; server_name $&#123;NCDOMAIN&#125;;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Enforce HTTPS&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; return 301 https://$server_name$request_uri;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;server &#123;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; listen 443 ssl http2;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; listen [::]:443 ssl http2;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; server_name $&#123;NCDOMAIN&#125;;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; ssl_certificate /etc/ssl/nginx/$&#123;NCDOMAIN&#125;.crt;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; ssl_certificate_key /etc/ssl/nginx/$&#123;NCDOMAIN&#125;.key;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # set max upload size&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; client_max_body_size 16G;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_buffers 64 4K;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Enable gzip but do not remove ETag headers&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; gzip on;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; gzip_vary on;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; gzip_comp_level 4;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; gzip_min_length 256;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # HTTP response headers borrowed from Nextcloud \\`.htaccess\\`&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; add_header Referrer-Policy \\&quot;no-referrer\\&quot; always;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; add_header X-Content-Type-Options \\&quot;nosniff\\&quot; always;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; add_header X-Download-Options \\&quot;noopen\\&quot; always;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; add_header X-Frame-Options \\&quot;SAMEORIGIN\\&quot; always;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; add_header X-Permitted-Cross-Domain-Policies \\&quot;none\\&quot; always;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; add_header X-Robots-Tag \\&quot;none\\&quot; always;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; add_header X-XSS-Protection \\&quot;1; mode=block\\&quot; always;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Remove X-Powered-By, which is an information leak&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_hide_header X-Powered-By;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Path to the root of your installation&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; root /var/www/nextcloud;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; index index.php index.html /index.php$request_uri;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location = / &#123;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; if ( $http_user_agent ~ ^DavClnt ) &#123;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; return 302 /remote.php/webdav/$is_args$args;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location = /robots.txt &#123;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; allow all;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; log_not_found off;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; access_log off;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; location ^~ /.well-known &#123;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location = /.well-known/carddav &#123; return 301 /remote.php/dav/; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location = /.well-known/caldav &#123; return 301 /remote.php/dav/; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; location /.well-known/acme-challenge &#123; try_files $uri $uri/ =404; &#125;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; location /.well-known/pki-validation &#123; try_files $uri $uri/ =404; &#125;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; return 301 /index.php$request_uri;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/) &#123; return 404; &#125;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; location ~ ^/(?:\\.|autotest|occ|issue|indie|db_|console) &#123; return 404; &#125;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; location ~ \\.php(?:$|/) &#123;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; fastcgi_split_path_info ^(.+?\\.php)(/.*)$;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; set $path_info $fastcgi_path_info;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; try_files $fastcgi_script_name =404;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; include fastcgi_params;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; fastcgi_param PATH_INFO $path_info;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_param HTTPS on;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_param modHeadersAvailable true; # Avoid sending the security headers twice&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_param front_controller_active true; # Enable pretty urls&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_pass php-handler;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_intercept_errors on;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_request_buffering off;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; location ~ \\.(?:css|js|svg|gif)$ &#123;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; try_files $uri /index.php$request_uri;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; expires 6M; # Cache-Control policy borrowed from \\`.htaccess\\`&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; access_log off; # Optional: Don&#x27;t log access to assets&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; location ~ \\.woff2?$ &#123;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; try_files $uri /index.php$request_uri;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; expires 7d; # Cache-Control policy borrowed from \\`.htaccess\\`&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; access_log off; # Optional: Don&#x27;t log access to assets&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location /remote &#123;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &#x27; return 301 /remote.php$request_uri;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location / &#123;&quot; &gt;&gt; /etc/nginx/sitqes-enabled/nextcloudecho &#x27; try_files $uri $uri/ /index.php$request_uri;&#x27; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudsystemctl enable nginx.serviceecho -e &quot;$&#123;COLOR2&#125;Nginx setup complted$&#123;NC&#125;&quot; 這裡要特別注意設定檔內有特殊符號的要把**_” “換成‘ ‘_**不然會有問題 Certbot1234#set up certbotecho -e &quot;$&#123;COLOR1&#125;Set up Cetbot for SSL$&#123;NC&#125;&quot;certbot --nginx -d $&#123;NCDOMAIN&#125;echo -e &quot;$&#123;COLOR2&#125;SSL set up Completed$&#123;NC&#125;&quot; sshd1234#sshdecho -e &quot;$&#123;COLOR1&#125; Enable sshd$&#123;NC&#125;&quot;systemctl enable sshd.serviceecho -e &quot;$&#123;COLOR2&#125;sshd enabled$&#123;NC&#125;&quot; 安裝Bootloader12345#install Bootloaderecho -e &quot;$&#123;COLOR1&#125;Install grub Boot Loader into /dev/sda$&#123;NC&#125;&quot;grub-install --target=i386-pc /dev/sdagrub-mkconfig -o /boot/grub/grub.cfgecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot; 同步後離開Arch-chroot12345#Finished installsyncsyncsyncexit 完整版的scriptbin/sh#Parmeter Pre-Define#Color for warningCOLOR_W=&#x27;\\e[35m&#x27;#Color for descriptionCOLOR1=&#x27;\\e[94m&#x27;COLOR2=&#x27;\\e[32m&#x27;# Color for Highlight packageCOLOR_H1=&#x27;\\e[96m&#x27;COLOR_H2=&#x27;\\e[34m&#x27;NC=&#x27;\\e[0m&#x27;#Notice before useecho -e &quot;$&#123;COLOR_W&#125;=====================Warning=======================\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Kiwi&#x27;s Arch linux Auto install script Ver.1.1 =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Arch + Nextcloud Install script Ver.1.0 =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= This Script for Kiwi private use. =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= If you have any issue on usage, =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= Please DON&#x27;T Feedback to Kiwi =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;= And you should take your own responsibility =\\n$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR_W&#125;===================================================\\n$&#123;NC&#125;&quot;#change Timezoneecho -e &quot;$&#123;COLOR1&#125;Please select your time zone\\n$&#123;NC&#125;$&#123;COLOR_H1&#125;1)Taipei\\n2)Shanghai\\n*)Whatever..I don&#x27;t care\\n$&#123;NC&#125;&quot;while :do read ZONE case $ZONE in 1) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Taipei$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime hwclock --systohc --utc break ;; 2) echo -e &quot;$&#123;COLOR1&#125;Set Time Zone to Asia/Shanghai$&#123;NC&#125;&quot; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime hwclock --systohc --utc break ;; *) echo -e &quot;$&#123;COLOR1&#125;Nobody cares the local time!!$&#123;NC&#125;&quot; hwclock --systohc --utc break ;; esacdoneecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#locale-gen to add en_US &amp; zh_TWecho -e &quot;$&#123;COLOR1&#125;Setting local file$&#123;NC&#125;&quot;echo &quot;en_US.UTF-8 UTF-8&quot; &gt;&gt; /etc/locale.genecho &quot;zh_TW.UTF-8 UTF-8&quot; &gt;&gt; /etc/locale.genecho -e &quot;$&#123;COLOR1&#125;Generate locale.conf$&#123;NC&#125;&quot;locale-genecho -e &quot;$&#123;COLOR1&#125;Setting locale.conf$&#123;NC&#125;&quot;echo LANG=en_US.UTF-8 &gt; /etc/locale.confexport LANG=en_US.UTF-8echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#Hostnameecho -e &quot;$&#123;COLOR1&#125;Please input your hostname\\n$&#123;NC&#125;&quot;read HOSTNAMEecho $&#123;HOSTNAME&#125; &gt; /etc/hostnameecho &quot;127.0.0.1 localhost $&#123;HOSTNAME&#125;&quot; &gt;&gt; /etc/hostsecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Define your NIC by Mac address$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Please input your MAC Address(need to be lowcase):\\n$&#123;NC&#125;&quot;read OUTSIDEecho &#x27;SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, ATTR&#123;address&#125;==&quot;&#x27;$&#123;OUTSIDE&#125;&#x27;&quot;, NAME=&quot;EXT0&quot;&#x27; &gt; /etc/udev/rules.d/10-network.rulesecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Define your IP for EXT0:$&#123;NC&#125;&quot;echo &quot;Description=&#x27;EXT0 IP SETTING&#x27;&quot; &gt; /etc/netctl/EXT0.serviceecho &quot;Interface=EXT0&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho &quot;Connection=ethernet&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho &quot;IP=static&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your IP address:\\n$&#123;NC&#125;&quot;read EXT_IPecho &quot;Address=(&#x27;$&#123;EXT_IP&#125;/24&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your Gateway IP address:\\n$&#123;NC&#125;&quot;read GATE_IPecho &quot;Gateway=&#x27;$&#123;GATE_IP&#125;&#x27;&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your DNS IP address:\\n$&#123;NC&#125;&quot;read DNS_IPecho &quot;DNS=(&#x27;$&#123;DNS_IP&#125;&#x27;)&quot; &gt;&gt; /etc/netctl/EXT0.serviceecho -e &quot;$&#123;COLOR2&#125;Enable EXT0$&#123;NC&#125;&quot;netctl enable EXT0.serviceecho -e &quot;$&#123;COLOR2&#125;Finished.$&#123;NC&#125;&quot;#Root Passwordecho -e &quot;$&#123;COLOR1&#125;Set your root password$&#123;NC&#125;&quot;passwdchsh -s /bin/zshecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#add Userecho -e &quot;$&#123;COLOR1&#125;Add user account:$&#123;NC&#125;&quot;echo -n &quot;$&#123;COLOR1&#125;What ID you want:$&#123;NC&#125;&quot;read YOURIDuseradd -m -g root -s /bin/zsh $&#123;YOURID&#125;passwd $&#123;YOURID&#125;echo -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Add $YOURID into sudo list$&#123;NC&#125;&quot;pacman -Syu sudoecho &quot;$&#123;YOURID&#125; ALL=(ALL) ALL&quot; &gt;&gt; /etc/sudoersecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#install Toolsecho -e &quot;$&#123;COLOR1&#125;Install Packages$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;tmux$&#123;NC&#125;&quot;pacman -Syu --noconfirm git go base-devel tmux mariadb php php-apcu php-fpm php-gd php-imap php-intl php-imagick nginx certbot certbot-nginx nextcloudecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;echo -e &quot;$&#123;COLOR1&#125;Install yay$&#123;NC&#125;&quot;git clone https://aur.archlinux.org/yay.gitchomd 777 yaycd yaysudo -u kiwi makepkg -sirm -rf yaysudo -u kiwi yay -S php-smbclient#Setup service#setup MariaDBecho -e &quot;$&#123;COLOR1&#125;Start to Setup MariaDB$&#123;NC&#125;&quot;mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysqlmkdir -pv /var/lib/mysqltmpchown mysql:mysql /var/lib/mysqltmpecho &quot;tmpfs /var/lib/mysqltmp tmpfs rw,gid=mysql,uid=mysql,size=100M,mode=0750,noatime 0 0&quot; &gt;&gt; /etc/fstabecho &quot;[client]&quot; &gt;&gt; /etc/my.cnfecho &quot;default-character-set = utf8mb4&quot; &gt;&gt; /etc/my.cnfecho &quot;&quot; &gt;&gt; /etc/my.cnfecho &quot;[mysql]&quot; &gt;&gt; /etc/my.cnfecho &quot;default-character-set = utf8mb4&quot; &gt;&gt; /etc/my.cnfecho &quot;&quot; &gt;&gt; /etc/my.cnfecho &quot;[mysqld]&quot; &gt;&gt; /etc/my.cnfecho &quot;collation_server = utf8mb4_unicode_ci&quot; &gt;&gt; /etc/my.cnfecho &quot;character_set_server = utf8mb4&quot; &gt;&gt; /etc/my.cnfecho &quot;tmpdir = /var/lib/mysqltmp&quot; &gt;&gt; /etc/my.cnfmount /var/lib/mysqltmpmysql_secure_installationsystemctl enable mariadb.servicesystemctl start mariadb.serviceecho -n &quot;$&#123;COLOR1&#125;Please input your Username for Nextcloud Database:\\n$&#123;NC&#125;&quot;read NCUSERecho -n &quot;$&#123;COLOR1&#125;Please input your Password for Nextcloud Database User:\\n$&#123;NC&#125;&quot;read NCPASSWDmysql -u root -p -e&quot;CREATE DATABASE nextcloud DEFAULT CHARACTER SET &#x27;utf8mb4&#x27; COLLATE &#x27;utf8mb4_general_ci&#x27;;GRANT ALL PRIVILEGES ON nextcloud.* TO &#x27;$&#123;NCUSER&#125;&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;$&#123;NCPASSWD&#125;&#x27;;FLUSH PRIVILEGES;&quot;echo -e &quot;$&#123;COLOR2&#125;MariaDB setup compleated$&#123;NC&#125;&quot;#Setup PHPecho -e &quot;$&#123;COLOR1&#125;change PHP setting$$&#123;NC&#125;&quot;curl -o /etc/php/php.ini https://kiwi0093.github.io/script/Arch/php.iniecho -e &quot;$&#123;COLOR2&#125;PHP setting completed$&#123;NC&#125;&quot;#Setup nextcloudecho -e &quot;$&#123;COLOR1&#125;Set up Nextcloud$&#123;NC&#125;&quot;echo &quot;nexcloud ALL=(ALL) ALL&quot; &gt;&gt; /etc/sudoerssudo -u nextcloud occ maintenance:install --database mysql --database-name nextcloud --database-host localhost --database-user $&#123;NCUSER&#125; --database-pass=&lt;$&#123;NCPASSWD&#125;&gt; --data-dir /var/lib/nextcloud/data/curl -o /usr/share/webapps/nextcloud/config/config.php https://kiwi0093.github.io/script/Arch/config.phpecho -e &quot;$&#123;COLOR2&#125;nexcloud set up compleated$&#123;NC&#125;&quot;#Set up PHP-FPMecho -e &quot;$&#123;COLOR1&#125;Set up PHP-FPM$&#123;NC&#125;&quot;echo &quot;[nextcloud]&quot; &gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;user = nextcloud&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;group = nextcloud&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;listen = /run/nextcloud/nextcloud.sock&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;env[PATH] = /usr/local/bin:/usr/bin:/bin&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;env[TMP] = /tmp&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;; should be accessible by your web server&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;listen.owner = http&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;listen.group = http&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;pm = dynamic&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;pm.max_children = 15&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;pm.start_servers = 2&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;pm.min_spare_servers = 1&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confecho &quot;pm.max_spare_servers = 3&quot; &gt;&gt; /etc/php/php-fpm.d/nextcloud.confmkdir /etc/systemd/system/php-fpm.service.d/echo &quot;[Service]&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;# Your data directory&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;ReadWritePaths=/var/lib/nextcloud/data&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;# Optional: add if you&#x27;ve set the default apps directory to be writable in config.php&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;ReadWritePaths=/usr/share/webapps/nextcloud/apps&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;# Optional: unnecessary if you&#x27;ve set &#x27;config_is_read_only&#x27; =&gt; true in your config.php&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;ReadWritePaths=/usr/share/webapps/nextcloud/config&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;ReadWritePaths=/etc/webapps/nextcloud/config&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;# Optional: add if you want to use Nextcloud&#x27;s internal update process&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confecho &quot;# ReadWritePaths=/usr/share/webapps/nextcloud&quot; &gt; /etc/systemd/system/php-fpm.service.d/override.confsystemctl enable php-fpm.serviceecho -e &quot;$&#123;COLOR2&#125;PHP-FPM setting completed$&#123;NC&#125;&quot;#set up nginxecho -e &quot;$&#123;COLOR1&#125;Set up Nginx$&#123;NC&#125;&quot;echo -n &quot;$&#123;COLOR1&#125;Please input you Domain for your Nextcloud Server$&#123;NC&#125;&quot;read NCDOMAINmv /etc/nginx/nginx.conf /etc/nginx.conf.oldmkdir /etc/nginx/conf.dmkdir /etc/nginx/sites-enableecho &quot;user http;&quot; &gt; /etc/nginx/nginx.confecho &quot;worker_processes auto;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;worker_cpu_affinity auto;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;events &#123;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; multi_accept on;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; worker_connections 1024;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;&#125;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;http &#123;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; charset utf-8;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; sendfile on;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; tcp_nopush on;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; tcp_nodelay on;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; server_tokens off;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; log_not_found off;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; types_hash_max_size 4096;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; client_max_body_size 16M;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; # MIME&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; include mime.types;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; default_type application/octet-stream;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; # logging&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; access_log /var/log/nginx/access.log;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; error_log /var/log/nginx/error.log warn;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; # load configs&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; include /etc/nginx/conf.d/*.conf;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot; include /etc/nginx/sites-enabled/*;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;&#125;&quot; &gt;&gt; /etc/nginx/nginx.confecho &quot;upstream php-handler &#123;&quot; &gt; /etc/nginx/sites-enabled/nextcloudecho &quot; server 127.0.0.1:9000;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; #server unix:/var/run/php/php7.4-fpm.sock;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;server &#123;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; listen 80;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; listen [::]:80;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; server_name $&#123;NCDOMAIN&#125;;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Enforce HTTPS&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; return 301 https://$server_name$request_uri;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;server &#123;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; listen 443 ssl http2;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; listen [::]:443 ssl http2;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; server_name $&#123;NCDOMAIN&#125;;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Use Mozilla&#x27;s guidelines for SSL/TLS settings&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # https://mozilla.github.io/server-side-tls/ssl-config-generator/&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; ssl_certificate /etc/ssl/nginx/$&#123;NCDOMAIN&#125;.crt;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; ssl_certificate_key /etc/ssl/nginx/$&#123;NCDOMAIN&#125;.key;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # HSTS settings&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # WARNING: Only add the preload option once you read about&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # the consequences in https://hstspreload.org/. This option&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # will add the domain to a hardcoded list that is shipped&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # in all major browsers and getting removed from this list&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # could take several months.&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; #add_header Strict-Transport-Security &quot;max-age=15768000; includeSubDomains; preload;&quot; always;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # set max upload size&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; client_max_body_size 16G;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_buffers 64 4K;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Enable gzip but do not remove ETag headers&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; gzip on;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; gzip_vary on;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; gzip_comp_level 4;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; gzip_min_length 256;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Pagespeed is not supported by Nextcloud, so if your server is built&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # with the `ngx_pagespeed` module, uncomment this line to disable it.&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; #pagespeed off;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # HTTP response headers borrowed from Nextcloud `.htaccess`&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; add_header Referrer-Policy &quot;no-referrer&quot; always;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; add_header X-Content-Type-Options &quot;nosniff&quot; always;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; add_header X-Download-Options &quot;noopen&quot; always;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; add_header X-Frame-Options &quot;SAMEORIGIN&quot; always;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; add_header X-Permitted-Cross-Domain-Policies &quot;none&quot; always;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; add_header X-Robots-Tag &quot;none&quot; always;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; add_header X-XSS-Protection &quot;1; mode=block&quot; always;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Remove X-Powered-By, which is an information leak&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_hide_header X-Powered-By;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Path to the root of your installation&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; root /var/www/nextcloud;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Specify how to handle directories -- specifying `/index.php$request_uri`&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # here as the fallback means that Nginx always exhibits the desired behaviour&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # when a client requests a path that corresponds to a directory that exists&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # on the server. In particular, if that directory contains an index.php file,&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # that file is correctly served; if it doesn&#x27;t, then the request is passed to&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # the front-end controller. This consistent behaviour means that we don&#x27;t need&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # to specify custom rules for certain paths (e.g. images and other assets,&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # `/updater`, `/ocm-provider`, `/ocs-provider`), and thus&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # `try_files $uri $uri/ /index.php$request_uri`&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # always provides the desired behaviour.&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; index index.php index.html /index.php$request_uri;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Rule borrowed from `.htaccess` to handle Microsoft DAV clients&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location = / &#123;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; if ( $http_user_agent ~ ^DavClnt ) &#123;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; return 302 /remote.php/webdav/$is_args$args;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location = /robots.txt &#123;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; allow all;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; log_not_found off;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; access_log off;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Make a regex exception for `/.well-known` so that clients can still&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # access it despite the existence of the regex rule&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # `location ~ /(\\.|autotest|...)` which would otherwise handle requests&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # for `/.well-known`.&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location ^~ /.well-known &#123;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # The rules in this block are an adaptation of the rules&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # in `.htaccess` that concern `/.well-known`.&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location = /.well-known/carddav &#123; return 301 /remote.php/dav/; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location = /.well-known/caldav &#123; return 301 /remote.php/dav/; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location /.well-known/acme-challenge &#123; try_files $uri $uri/ =404; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location /.well-known/pki-validation &#123; try_files $uri $uri/ =404; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Let Nextcloud&#x27;s API for `/.well-known` URIs handle all other&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # requests by passing them to the front-end controller.&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; return 301 /index.php$request_uri;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Rules borrowed from `.htaccess` to hide certain paths from clients&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/) &#123; return 404; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location ~ ^/(?:\\.|autotest|occ|issue|indie|db_|console) &#123; return 404; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Ensure this block, which passes PHP files to the PHP process, is above the blocks&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # which handle static assets (as seen below). If this block is not declared first,&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # then Nginx will encounter an infinite rewriting loop when it prepends `/index.php`&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # to the URI, resulting in a HTTP 500 error response.&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location ~ \\.php(?:$|/) &#123;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_split_path_info ^(.+?\\.php)(/.*)$;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; set $path_info $fastcgi_path_info;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; try_files $fastcgi_script_name =404;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; include fastcgi_params;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_param PATH_INFO $path_info;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_param HTTPS on;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_param modHeadersAvailable true; # Avoid sending the security headers twice&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_param front_controller_active true; # Enable pretty urls&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_pass php-handler;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_intercept_errors on;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; fastcgi_request_buffering off;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location ~ \\.(?:css|js|svg|gif)$ &#123;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; try_files $uri /index.php$request_uri;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; expires 6M; # Cache-Control policy borrowed from `.htaccess`&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; access_log off; # Optional: Don&#x27;t log access to assets&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location ~ \\.woff2?$ &#123;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; try_files $uri /index.php$request_uri;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; expires 7d; # Cache-Control policy borrowed from `.htaccess`&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; access_log off; # Optional: Don&#x27;t log access to assets&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; # Rule borrowed from `.htaccess`&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location /remote &#123;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; return 301 /remote.php$request_uri;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; location / &#123;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; try_files $uri $uri/ /index.php$request_uri;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot; &#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudecho &quot;&#125;&quot; &gt;&gt; /etc/nginx/sites-enabled/nextcloudsystemctl enable nginx.serviceecho -e &quot;$&#123;COLOR2&#125;Nginx setup complted$&#123;NC&#125;&quot;#set up certbotecho -e &quot;$&#123;COLOR1&#125;Set up Cetbot for SSL$&#123;NC&#125;&quot;certbot --nginx -d $&#123;NCDOMAIN&#125;echo -e &quot;$&#123;COLOR2&#125;SSL set up Completed$&#123;NC&#125;&quot;#sshdecho -e &quot;$&#123;COLOR1&#125; Enable sshd$&#123;NC&#125;&quot;systemctl enable sshd.serviceecho -e &quot;$&#123;COLOR2&#125;sshd enabled$&#123;NC&#125;&quot;#install Bootloaderecho -e &quot;$&#123;COLOR1&#125;Install grub Boot Loader into /dev/sda$&#123;NC&#125;&quot;grub-install --target=i386-pc /dev/sdagrub-mkconfig -o /boot/grub/grub.cfgecho -e &quot;$&#123;COLOR2&#125;Completed$&#123;NC&#125;&quot;#Finished installsyncsyncsyncexit","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Arch Linux","slug":"Linux/Arch-Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Arch-Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"Archlinux","slug":"Archlinux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Archlinux/"}]}],"categories":[{"name":"VM&Container","slug":"VM-Container","permalink":"http://kiwi0093.github.io/Wiki-site/categories/VM-Container/"},{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/"},{"name":"Hexo","slug":"Network/Hexo","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/Hexo/"},{"name":"Misc","slug":"Misc","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Misc/"},{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/"},{"name":"Manjaro","slug":"Linux/Manjaro","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Manjaro/"},{"name":"FreeBSD","slug":"FreeBSD","permalink":"http://kiwi0093.github.io/Wiki-site/categories/FreeBSD/"},{"name":"Arch Linux","slug":"Linux/Arch-Linux","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Arch-Linux/"},{"name":"Game","slug":"Game","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Game/"},{"name":"PC","slug":"Game/PC","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Game/PC/"},{"name":"Battletech","slug":"Game/PC/Battletech","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Game/PC/Battletech/"},{"name":"Ansible","slug":"Network/Ansible","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/Ansible/"},{"name":"Basic","slug":"Network/Ansible/Basic","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/Ansible/Basic/"},{"name":"Tips","slug":"Linux/Tips","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Tips/"},{"name":"Shell Script","slug":"Linux/Tips/Shell-Script","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Linux/Tips/Shell-Script/"},{"name":"V2Ray","slug":"Network/V2Ray","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Network/V2Ray/"},{"name":"Pathfinder Kingmaker","slug":"Game/PC/Pathfinder-Kingmaker","permalink":"http://kiwi0093.github.io/Wiki-site/categories/Game/PC/Pathfinder-Kingmaker/"}],"tags":[{"name":"VM","slug":"VM","permalink":"http://kiwi0093.github.io/Wiki-site/tags/VM/"},{"name":"Container","slug":"Container","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Container/"},{"name":"FreeBSD","slug":"FreeBSD","permalink":"http://kiwi0093.github.io/Wiki-site/tags/FreeBSD/"},{"name":"Network","slug":"Network","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Network/"},{"name":"Server","slug":"Server","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Server/"},{"name":"Git","slug":"Git","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Git/"},{"name":"Blog","slug":"Blog","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Blog/"},{"name":"Wiki","slug":"Wiki","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Wiki/"},{"name":"Markdown","slug":"Markdown","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Markdown/"},{"name":"Linux","slug":"Linux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linux/"},{"name":"Manjaro","slug":"Manjaro","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Manjaro/"},{"name":"Arch","slug":"Arch","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Arch/"},{"name":"Archlinux","slug":"Archlinux","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Archlinux/"},{"name":"Linunx","slug":"Linunx","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Linunx/"},{"name":"Game","slug":"Game","permalink":"http://kiwi0093.github.io/Wiki-site/tags/Game/"},{"name":"PC-Game","slug":"PC-Game","permalink":"http://kiwi0093.github.io/Wiki-site/tags/PC-Game/"},{"name":"SLG","slug":"SLG","permalink":"http://kiwi0093.github.io/Wiki-site/tags/SLG/"},{"name":"VPS","slug":"VPS","permalink":"http://kiwi0093.github.io/Wiki-site/tags/VPS/"},{"name":"script","slug":"script","permalink":"http://kiwi0093.github.io/Wiki-site/tags/script/"},{"name":"V2Ray","slug":"V2Ray","permalink":"http://kiwi0093.github.io/Wiki-site/tags/V2Ray/"},{"name":"VPN","slug":"VPN","permalink":"http://kiwi0093.github.io/Wiki-site/tags/VPN/"},{"name":"RPG","slug":"RPG","permalink":"http://kiwi0093.github.io/Wiki-site/tags/RPG/"}]}